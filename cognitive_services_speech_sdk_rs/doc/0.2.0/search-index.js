var searchIndex = JSON.parse('{\
"aho_corasick":{"doc":"A library for finding occurrences of many patterns at …","t":[3,3,3,4,3,3,13,13,3,4,13,13,8,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AhoCorasick","AhoCorasickBuilder","Error","ErrorKind","FindIter","FindOverlappingIter","LeftmostFirst","LeftmostLongest","Match","MatchKind","PremultiplyOverflow","Standard","StateID","StateIDOverflow","StreamFindIter","anchored","ascii_case_insensitive","auto_configure","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_with_size","byte_classes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","dense_depth","description","dfa","earliest_find","end","eq","eq","find","find_iter","find_overlapping_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_usize","hash","heap_bytes","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_match","kind","match_kind","match_kind","max_id","max_pattern_len","ne","new","new","new_auto_configured","next","next","next","packed","pattern","pattern_count","prefilter","premultiply","replace_all","replace_all_bytes","replace_all_with","replace_all_with_bytes","start","stream_find_iter","stream_replace_all","stream_replace_all_with","supports_overlapping","supports_stream","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","max","max","requested_max","Builder","Config","FindIter","LeftmostFirst","LeftmostLongest","MatchKind","Searcher","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","eq","extend","find","find_at","find_iter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","heap_bytes","into","into","into","into","into","into_iter","match_kind","match_kind","minimum_len","new","new","new","next","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["aho_corasick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aho_corasick::ErrorKind","","","aho_corasick::packed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An automaton for searching multiple strings in linear time.","A builder for configuring an Aho-Corasick automaton.","An error that occurred during the construction of an …","The kind of error that occurred.","An iterator of non-overlapping matches in a particular …","An iterator of overlapping matches in a particular …","Use leftmost-first match semantics, which reports leftmost …","Use leftmost-longest match semantics, which reports …","A representation of a match reported by an Aho-Corasick …","A knob for controlling the match semantics of an …","An error that occurs when premultiplication of state IDs …","Use standard match semantics, which support overlapping …","A trait describing the representation of an automaton’s …","An error that occurs when constructing an automaton would …","An iterator that reports Aho-Corasick matches in a stream.","Enable anchored mode, which requires all matches to start …","Enable ASCII-aware case insensitive matching.","Automatically configure the settings on this builder …","","","","","","","","","","","","","","","","","","","Build an Aho-Corasick automaton using the configuration …","Build an Aho-Corasick automaton using the configuration …","Shrink the size of the transition alphabet by mapping …","","","","","","","","","","","","","","","Set the limit on how many NFA states use a dense …","","Compile the standard Aho-Corasick automaton into a …","Returns the location of the first detected match in …","The ending position of the match.","","","Returns the location of the first match according to the …","Returns an iterator of non-overlapping matches, using the …","Returns an iterator of overlapping matches in the given …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a <code>usize</code> to this implementation’s …","","Returns the approximate total amount of heap used by this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if and only if this match is empty. That is, …","Returns true if and only if this automaton matches the …","Return the kind of this error.","Returns the match kind used by this automaton.","Set the desired match semantics.","Return the maximum state identifier supported by this …","Returns the length of the longest pattern matched by this …","","Create a new Aho-Corasick automaton using the default …","Create a new builder for configuring an Aho-Corasick …","Build an Aho-Corasick automaton with an automatically …","","","","A lower level API for packed multiple substring search, …","Returns the identifier of the pattern that matched.","Return the total number of patterns matched by this …","Enable heuristic prefilter optimizations.","Premultiply state identifiers in the transition table. …","Replace all matches with a corresponding value in the …","Replace all matches using raw bytes with a corresponding …","Replace all matches using a closure called on each match. …","Replace all matches using raw bytes with a closure called …","The starting position of the match.","Returns an iterator of non-overlapping matches in the given","Search for and replace all matches of this automaton in …","Search the given reader and replace all matches of this …","Returns true if and only if this automaton supports …","Returns true if and only if this automaton supports stream …","","","","","","","","Convert this implementation’s representation to a <code>usize</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum possible state ID.","The maximum possible state id.","The maximum ID required by premultiplication.","A builder for constructing a packed searcher from a …","The configuration for a packed multiple pattern searcher.","An iterator over non-overlapping matches from a packed …","Use leftmost-first match semantics, which reports leftmost …","Use leftmost-longest match semantics, which reports …","A knob for controlling the match semantics of a packed …","A packed searcher for quickly finding occurrences of …","Add the given pattern to this set to match.","","","","","","","","","","","Build a searcher from the patterns added to this builder …","Create a packed builder from this configuration. The …","","","","","","","","","","","","","Add the given iterator of patterns to this set to match.","Return the first occurrence of any of the patterns in this …","Return the first occurrence of any of the patterns in this …","Return an iterator of non-overlapping occurrences of the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the approximate total amount of heap used by this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Set the match semantics for this configuration.","Returns the match kind used by this packed searcher.","Returns the minimum length of a haystack that is required …","Create a new default configuration. A default …","Create a new builder for constructing a multi-pattern …","A convenience function for constructing a searcher from an …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,0,0,2,1,0,2,0,3,3,3,4,5,6,7,3,1,8,2,9,4,5,6,7,3,1,8,2,9,3,3,3,4,3,1,8,2,9,4,3,1,8,2,9,3,1,3,8,3,4,9,1,9,4,4,4,4,5,6,7,3,1,8,8,2,9,4,5,6,7,3,1,8,2,9,10,9,4,4,5,6,7,3,1,8,2,9,5,6,7,9,4,8,4,3,10,4,9,4,3,4,5,6,7,0,9,4,3,3,4,4,4,4,9,4,4,4,4,4,4,3,1,8,2,9,8,10,4,5,6,7,3,1,8,2,9,4,5,6,7,3,1,8,2,9,4,5,6,7,3,1,8,2,9,11,12,12,0,0,0,13,13,0,0,14,13,15,14,16,17,13,15,14,16,17,14,15,13,15,14,16,13,15,14,16,13,15,14,13,14,16,16,16,13,15,14,16,17,13,15,14,16,17,16,13,15,14,16,17,17,15,16,16,15,14,16,17,13,15,14,16,13,15,14,16,17,13,15,14,16,17,13,15,14,16,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ahocorasickbuilder",3],["bool",0]],["ahocorasickbuilder",3]],[[["ahocorasickbuilder",3],["bool",0]],["ahocorasickbuilder",3]],[[["ahocorasickbuilder",3]],["ahocorasickbuilder",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ahocorasickbuilder",3]],["ahocorasick",3]],[[["ahocorasickbuilder",3]],["result",4,[["ahocorasick",3],["error",3]]]],[[["ahocorasickbuilder",3],["bool",0]],["ahocorasickbuilder",3]],[[["ahocorasick",3,[["",26,[["clone",8],["stateid",8]]]]]],["ahocorasick",3,[["",26,[["clone",8],["stateid",8]]]]]],[[["ahocorasickbuilder",3]],["ahocorasickbuilder",3]],[[["matchkind",4]],["matchkind",4]],[[["error",3]],["error",3]],[[["errorkind",4]],["errorkind",4]],[[["match",3]],["match",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["ahocorasickbuilder",3]],[[],["matchkind",4]],[[["ahocorasickbuilder",3],["usize",0]],["ahocorasickbuilder",3]],[[["error",3]],["str",0]],[[["ahocorasickbuilder",3],["bool",0]],["ahocorasickbuilder",3]],[[["ahocorasick",3,[["stateid",8]]],["asref",8]],["option",4,[["match",3]]]],[[["match",3]],["usize",0]],[[["matchkind",4],["matchkind",4]],["bool",0]],[[["match",3],["match",3]],["bool",0]],[[["ahocorasick",3,[["stateid",8]]],["asref",8]],["option",4,[["match",3]]]],[[["ahocorasick",3,[["stateid",8]]],["",0]],["finditer",3,[["stateid",8]]]],[[["ahocorasick",3,[["stateid",8]]],["",0]],["findoverlappingiter",3,[["stateid",8]]]],[[["ahocorasick",3,[["",26,[["debug",8],["stateid",8]]]]],["formatter",3]],["result",6]],[[["finditer",3,[["",26,[["debug",8],["stateid",8]]]]],["formatter",3]],["result",6]],[[["findoverlappingiter",3,[["",26,[["debug",8],["stateid",8]]]]],["formatter",3]],["result",6]],[[["streamfinditer",3,[["debug",8],["",26,[["debug",8],["stateid",8]]]]],["formatter",3]],["result",6]],[[["ahocorasickbuilder",3],["formatter",3]],["result",6]],[[["matchkind",4],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["errorkind",4],["formatter",3]],["result",6]],[[["match",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]]],[[["match",3],["",0]]],[[["ahocorasick",3,[["stateid",8]]]],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["match",3]],["bool",0]],[[["ahocorasick",3,[["stateid",8]]],["asref",8]],["bool",0]],[[["error",3]],["errorkind",4]],[[["ahocorasick",3,[["stateid",8]]]],["matchkind",4]],[[["ahocorasickbuilder",3],["matchkind",4]],["ahocorasickbuilder",3]],[[],["usize",0]],[[["ahocorasick",3,[["stateid",8]]]],["usize",0]],[[["match",3],["match",3]],["bool",0]],[[],["ahocorasick",3]],[[],["ahocorasickbuilder",3]],[[],["ahocorasick",3]],[[["finditer",3,[["stateid",8]]]],["option",4,[["match",3]]]],[[["findoverlappingiter",3,[["stateid",8]]]],["option",4,[["match",3]]]],[[["streamfinditer",3,[["read",8],["stateid",8]]]],["option",4,[["result",6,[["match",3]]]]]],null,[[["match",3]],["usize",0]],[[["ahocorasick",3,[["stateid",8]]]],["usize",0]],[[["ahocorasickbuilder",3],["bool",0]],["ahocorasickbuilder",3]],[[["ahocorasickbuilder",3],["bool",0]],["ahocorasickbuilder",3]],[[["ahocorasick",3,[["stateid",8]]],["str",0]],["string",3]],[[["ahocorasick",3,[["stateid",8]]]],["vec",3,[["u8",0]]]],[[["ahocorasick",3,[["stateid",8]]],["str",0],["string",3]]],[[["ahocorasick",3,[["stateid",8]]],["vec",3]]],[[["match",3]],["usize",0]],[[["ahocorasick",3,[["stateid",8]]],["read",8]],["streamfinditer",3,[["read",8],["stateid",8]]]],[[["ahocorasick",3,[["stateid",8]]]],["result",6]],[[["ahocorasick",3,[["stateid",8]]]],["result",6]],[[["ahocorasick",3,[["stateid",8]]]],["bool",0]],[[["ahocorasick",3,[["stateid",8]]]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["builder",3],["asref",8]],["builder",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["builder",3]],["option",4,[["searcher",3]]]],[[["config",3]],["builder",3]],[[["matchkind",4]],["matchkind",4]],[[["config",3]],["config",3]],[[["builder",3]],["builder",3]],[[["searcher",3]],["searcher",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["matchkind",4]],[[],["config",3]],[[],["builder",3]],[[["matchkind",4],["matchkind",4]],["bool",0]],[[["builder",3]],["builder",3]],[[["searcher",3],["asref",8]],["option",4,[["match",3]]]],[[["searcher",3],["asref",8],["usize",0]],["option",4,[["match",3]]]],[[["searcher",3],["",0]],["finditer",3]],[[["matchkind",4],["formatter",3]],["result",6]],[[["config",3],["formatter",3]],["result",6]],[[["builder",3],["formatter",3]],["result",6]],[[["searcher",3],["formatter",3]],["result",6]],[[["finditer",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["searcher",3]],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["config",3],["matchkind",4]],["config",3]],[[["searcher",3]],["matchkind",4]],[[["searcher",3]],["usize",0]],[[],["config",3]],[[],["builder",3]],[[],["option",4,[["searcher",3]]]],[[["finditer",3]],["option",4,[["match",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"MatchKind"],[4,"ErrorKind"],[3,"AhoCorasickBuilder"],[3,"AhoCorasick"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"Error"],[3,"Match"],[8,"StateID"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[4,"MatchKind"],[3,"Builder"],[3,"Config"],[3,"Searcher"],[3,"FindIter"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","t":[13,13,13,4,11,11,11,11,11,11,5,5,11,11,11],"n":["Stderr","Stdin","Stdout","Stream","borrow","borrow_mut","clone","fmt","from","into","is","isnt","try_from","try_into","type_id"],"q":["atty","","","","","","","","","","","","","",""],"d":["","","","possible stream sources","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","returns true if this is a tty","returns true if this is <em>not</em> a tty","","",""],"i":[1,1,1,0,1,1,1,1,1,1,0,0,1,1,1],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["stream",4]],["stream",4]],[[["stream",4],["formatter",3]],["result",6]],[[]],[[]],[[["stream",4]],["bool",0]],[[["stream",4]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Stream"]]},\
"bytes":{"doc":"Provides abstractions for working with bytes.","t":[8,8,3,3,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,3,3,3,3,3,3,3,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Buf","BufMut","Bytes","BytesMut","advance","advance","advance","advance_mut","advance_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buf","capacity","chunk","chunk","chunk","chunk_mut","chunk_mut","clear","clear","clone","clone","clone_into","clone_into","cmp","cmp","copy_from_slice","copy_to_bytes","copy_to_bytes","default","default","deref","deref","deref_mut","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_static","hash","hash","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","len","len","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","put","put_slice","remaining","remaining","remaining","remaining_mut","remaining_mut","reserve","resize","set_len","slice","slice_ref","split","split_off","split_off","split_to","split_to","to_owned","to_owned","truncate","truncate","try_from","try_from","try_into","try_into","type_id","type_id","unsplit","with_capacity","write_fmt","write_str","Buf","BufMut","Chain","IntoIter","Limit","Reader","Take","UninitSlice","Writer","advance","advance","advance","advance_mut","advance_mut","advance_mut","as_mut_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","chain","chain_mut","chain_mut","chain_mut","chunk","chunk","chunk","chunk_mut","chunk_mut","chunk_mut","chunks_vectored","chunks_vectored","chunks_vectored","chunks_vectored","consume","copy_from_slice","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_slice","copy_to_slice","copy_to_slice","fill_buf","first_mut","first_ref","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw_parts_mut","get_f32","get_f32","get_f32","get_f32_le","get_f32_le","get_f32_le","get_f64","get_f64","get_f64","get_f64_le","get_f64_le","get_f64_le","get_i128","get_i128","get_i128","get_i128_le","get_i128_le","get_i128_le","get_i16","get_i16","get_i16","get_i16_le","get_i16_le","get_i16_le","get_i32","get_i32","get_i32","get_i32_le","get_i32_le","get_i32_le","get_i64","get_i64","get_i64","get_i64_le","get_i64_le","get_i64_le","get_i8","get_i8","get_i8","get_int","get_int","get_int","get_int_le","get_int_le","get_int_le","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_u128","get_u128","get_u128","get_u128_le","get_u128_le","get_u128_le","get_u16","get_u16","get_u16","get_u16_le","get_u16_le","get_u16_le","get_u32","get_u32","get_u32","get_u32_le","get_u32_le","get_u32_le","get_u64","get_u64","get_u64","get_u64_le","get_u64_le","get_u64_le","get_u8","get_u8","get_u8","get_uint","get_uint","get_uint","get_uint_le","get_uint_le","get_uint_le","has_remaining","has_remaining","has_remaining","has_remaining_mut","has_remaining_mut","has_remaining_mut","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","last_mut","last_ref","len","limit","limit","limit","limit","limit","next","put","put","put","put_f32","put_f32","put_f32","put_f32_le","put_f32_le","put_f32_le","put_f64","put_f64","put_f64","put_f64_le","put_f64_le","put_f64_le","put_i128","put_i128","put_i128","put_i128_le","put_i128_le","put_i128_le","put_i16","put_i16","put_i16","put_i16_le","put_i16_le","put_i16_le","put_i32","put_i32","put_i32","put_i32_le","put_i32_le","put_i32_le","put_i64","put_i64","put_i64","put_i64_le","put_i64_le","put_i64_le","put_i8","put_i8","put_i8","put_int","put_int","put_int","put_int_le","put_int_le","put_int_le","put_slice","put_slice","put_slice","put_u128","put_u128","put_u128","put_u128_le","put_u128_le","put_u128_le","put_u16","put_u16","put_u16","put_u16_le","put_u16_le","put_u16_le","put_u32","put_u32","put_u32","put_u32_le","put_u32_le","put_u32_le","put_u64","put_u64","put_u64","put_u64_le","put_u64_le","put_u64_le","put_u8","put_u8","put_u8","put_uint","put_uint","put_uint","put_uint_le","put_uint_le","put_uint_le","read","reader","reader","reader","remaining","remaining","remaining","remaining_mut","remaining_mut","remaining_mut","set_limit","set_limit","size_hint","take","take","take","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write_byte","writer","writer","writer"],"q":["bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytes::bufd":["Read bytes from a buffer.","A trait for values that provide sequential write access to …","A cheaply cloneable and sliceable chunk of contiguous …","A unique reference to a contiguous slice of memory.","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","","","","","","","","","","","Utilities for working with buffers.","Returns the number of bytes the <code>BytesMut</code> can hold without …","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","Clears the buffer, removing all data.","Clears the buffer, removing all data.","","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","","","","","","","","","","","","","","","","","","","","","","","","","","Appends given bytes to this <code>BytesMut</code>.","","","","","","","Converts <code>self</code> into an immutable <code>Bytes</code>.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Creates a new <code>Bytes</code> from a static slice.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns true if the <code>BytesMut</code> has a length of 0.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the number of bytes contained in this <code>BytesMut</code>.","Creates a new empty <code>Bytes</code>.","Creates a new <code>BytesMut</code> with default capacity.","","","","","","","","","","","","","","","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","Reserves capacity for at least <code>additional</code> more bytes to be …","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.","Sets the length of the buffer.","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","Removes the bytes from the current view, returning them in …","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the buffer into two at the given index.","","","Shortens the buffer, keeping the first <code>len</code> bytes and …","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","Absorbs a <code>BytesMut</code> that was previously split off.","Creates a new <code>BytesMut</code> with the specified capacity.","","","Read bytes from a buffer.","A trait for values that provide sequential write access to …","A <code>Chain</code> sequences two buffers.","Iterator over the bytes contained by the buffer.","A <code>BufMut</code> adapter which limits the amount of bytes that can …","A <code>Buf</code> adapter which implements <code>io::Read</code> for the inner …","A <code>Buf</code> adapter which limits the bytes read from an …","Uninitialized byte slice.","A <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner …","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","","Return a raw pointer to the slice’s buffer.","","","","","","","","","","","","","","","Creates an adaptor which will chain this buffer with …","Creates an adaptor which will chain this buffer with …","Creates an adaptor which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","","","Copies bytes  from <code>src</code> into <code>self</code>.","Consumes <code>len</code> bytes inside self and returns new instance of …","Consumes <code>len</code> bytes inside self and returns new instance of …","Consumes <code>len</code> bytes inside self and returns new instance of …","Copies bytes from <code>self</code> into <code>dst</code>.","Copies bytes from <code>self</code> into <code>dst</code>.","Copies bytes from <code>self</code> into <code>dst</code>.","","Gets a mutable reference to the first underlying <code>Buf</code>.","Gets a reference to the first underlying <code>Buf</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>&amp;mut UninitSlice</code> from a pointer and a length.","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Returns true if there are any more bytes to consume","Returns true if there are any more bytes to consume","Returns true if there are any more bytes to consume","Returns true if there is space in <code>self</code> for more bytes.","Returns true if there is space in <code>self</code> for more bytes.","Returns true if there is space in <code>self</code> for more bytes.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Chain</code>, returning the underlying values.","Consumes this <code>IntoIter</code>, returning the underlying value.","Consumes this <code>Limit</code>, returning the underlying value.","Consumes this <code>Reader</code>, returning the underlying value.","Consumes this <code>Take</code>, returning the underlying value.","Consumes this <code>Writer</code>, returning the underlying value.","","","Gets a mutable reference to the last underlying <code>Buf</code>.","Gets a reference to the last underlying <code>Buf</code>.","Returns the number of bytes in the slice.","Creates an adaptor which can write at most <code>limit</code> bytes to …","Creates an adaptor which can write at most <code>limit</code> bytes to …","Creates an adaptor which can write at most <code>limit</code> bytes to …","Returns the maximum number of bytes that can be written","Returns the maximum number of bytes that can be read.","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed n-byte integer to <code>self</code> in big-endian byte …","Writes a signed n-byte integer to <code>self</code> in big-endian byte …","Writes a signed n-byte integer to <code>self</code> in big-endian byte …","Writes a signed n-byte integer to <code>self</code> in little-endian …","Writes a signed n-byte integer to <code>self</code> in little-endian …","Writes a signed n-byte integer to <code>self</code> in little-endian …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","","Sets the maximum number of bytes that can be written.","Sets the maximum number of bytes that can be read.","","Creates an adaptor which will read at most <code>limit</code> bytes …","Creates an adaptor which will read at most <code>limit</code> bytes …","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","","Write a single byte at the specified offset.","Creates an adaptor which implements the <code>Write</code> trait for …","Creates an adaptor which implements the <code>Write</code> trait for …","Creates an adaptor which implements the <code>Write</code> trait for …"],"i":[0,0,0,0,1,2,3,4,3,3,2,3,2,2,3,3,2,3,3,0,3,1,2,3,4,3,2,3,2,3,2,3,2,3,2,2,3,2,3,2,3,3,2,3,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,2,3,3,2,2,3,2,3,2,2,3,3,2,3,2,3,2,3,2,2,2,2,2,2,3,3,3,3,3,3,3,3,1,2,3,4,3,3,3,3,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,3,3,3,3,0,0,0,0,0,0,0,0,0,1,5,6,4,5,7,8,8,5,9,7,10,6,11,8,5,9,7,10,6,11,1,1,1,4,4,4,1,5,6,4,5,7,1,1,1,5,10,8,1,1,1,1,1,1,10,5,5,11,8,5,9,7,10,6,11,5,9,7,10,6,11,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,7,10,6,11,9,7,10,6,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,8,8,8,8,8,8,8,8,8,8,8,8,5,9,7,10,6,11,5,9,7,10,6,11,5,9,5,5,8,4,4,4,7,6,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,10,1,1,1,1,5,6,4,5,7,7,6,9,1,1,1,5,9,7,10,6,11,5,9,7,10,6,11,8,5,9,7,10,6,11,11,8,4,4,4],"f":[null,null,null,null,[[["",0],["usize",0]]],[[["bytes",3],["usize",0]]],[[["bytesmut",3],["usize",0]]],[[["",0],["usize",0]]],[[["bytesmut",3],["usize",0]]],[[["bytesmut",3]]],[[["bytes",3]]],[[["bytesmut",3]]],[[["bytes",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bytesmut",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bytesmut",3]]],null,[[["bytesmut",3]],["usize",0]],[[["",0]]],[[["bytes",3]]],[[["bytesmut",3]]],[[["",0]],["uninitslice",3]],[[["bytesmut",3]],["uninitslice",3]],[[["bytes",3]]],[[["bytesmut",3]]],[[["bytes",3]],["bytes",3]],[[["bytesmut",3]],["bytesmut",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["bytes",3],["bytes",3]],["ordering",4]],[[["bytesmut",3],["bytesmut",3]],["ordering",4]],[[],["bytes",3]],[[["bytes",3],["usize",0]],["bytes",3]],[[["bytesmut",3],["usize",0]],["bytes",3]],[[],["bytes",3]],[[],["bytesmut",3]],[[["bytes",3]]],[[["bytesmut",3]]],[[["bytesmut",3]]],[[["bytes",3]]],[[["bytesmut",3]]],[[["bytes",3],["str",0]],["bool",0]],[[["bytes",3],["bytesmut",3]],["bool",0]],[[["bytes",3],["bytes",3]],["bool",0]],[[["bytes",3],["",0]],["bool",0]],[[["bytes",3],["string",3]],["bool",0]],[[["bytes",3],["vec",3]],["bool",0]],[[["bytes",3]],["bool",0]],[[["bytesmut",3],["str",0]],["bool",0]],[[["bytesmut",3]],["bool",0]],[[["bytesmut",3],["vec",3]],["bool",0]],[[["bytesmut",3],["string",3]],["bool",0]],[[["bytesmut",3],["",0]],["bool",0]],[[["bytesmut",3],["bytesmut",3]],["bool",0]],[[["bytesmut",3],["bytes",3]],["bool",0]],[[["bytesmut",3]]],[[["bytesmut",3]]],[[["bytesmut",3]]],[[["bytes",3],["formatter",3]],["result",6]],[[["bytes",3],["formatter",3]],["result",6]],[[["bytes",3],["formatter",3]],["result",6]],[[["bytesmut",3],["formatter",3]],["result",6]],[[["bytesmut",3],["formatter",3]],["result",6]],[[["bytesmut",3],["formatter",3]],["result",6]],[[["bytesmut",3]],["bytes",3]],[[]],[[["bytesmut",3]],["bytes",3]],[[],["bytes",3]],[[["str",0]],["bytes",3]],[[["vec",3,[["u8",0]]]],["bytes",3]],[[["string",3]],["bytes",3]],[[],["bytesmut",3]],[[["str",0]],["bytesmut",3]],[[]],[[["intoiterator",8]],["bytes",3]],[[["intoiterator",8]],["bytesmut",3]],[[["intoiterator",8]],["bytesmut",3]],[[],["bytes",3]],[[["bytes",3],["",0]]],[[["bytesmut",3],["",0]]],[[]],[[]],[[["bytes",3]]],[[["bytes",3]]],[[["bytesmut",3]]],[[["bytesmut",3]]],[[["bytes",3]],["bool",0]],[[["bytesmut",3]],["bool",0]],[[["bytes",3]],["usize",0]],[[["bytesmut",3]],["usize",0]],[[],["bytes",3]],[[],["bytesmut",3]],[[["bytes",3]],["option",4,[["ordering",4]]]],[[["bytes",3],["",0]],["option",4,[["ordering",4]]]],[[["bytes",3],["vec",3]],["option",4,[["ordering",4]]]],[[["bytes",3],["string",3]],["option",4,[["ordering",4]]]],[[["bytes",3],["bytes",3]],["option",4,[["ordering",4]]]],[[["bytes",3],["str",0]],["option",4,[["ordering",4]]]],[[["bytesmut",3]],["option",4,[["ordering",4]]]],[[["bytesmut",3],["bytesmut",3]],["option",4,[["ordering",4]]]],[[["bytesmut",3],["",0]],["option",4,[["ordering",4]]]],[[["bytesmut",3],["string",3]],["option",4,[["ordering",4]]]],[[["bytesmut",3],["vec",3]],["option",4,[["ordering",4]]]],[[["bytesmut",3],["str",0]],["option",4,[["ordering",4]]]],[[["bytesmut",3],["buf",8]]],[[["bytesmut",3]]],[[["",0]],["usize",0]],[[["bytes",3]],["usize",0]],[[["bytesmut",3]],["usize",0]],[[["",0]],["usize",0]],[[["bytesmut",3]],["usize",0]],[[["bytesmut",3],["usize",0]]],[[["bytesmut",3],["usize",0],["u8",0]]],[[["bytesmut",3],["usize",0]]],[[["bytes",3],["rangebounds",8,[["usize",0]]]],["bytes",3]],[[["bytes",3]],["bytes",3]],[[["bytesmut",3]],["bytesmut",3]],[[["bytes",3],["usize",0]],["bytes",3]],[[["bytesmut",3],["usize",0]],["bytesmut",3]],[[["bytes",3],["usize",0]],["bytes",3]],[[["bytesmut",3],["usize",0]],["bytesmut",3]],[[["",0]]],[[["",0]]],[[["bytes",3],["usize",0]]],[[["bytesmut",3],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["bytesmut",3],["bytesmut",3]]],[[["usize",0]],["bytesmut",3]],[[["bytesmut",3],["arguments",3]],["result",6]],[[["bytesmut",3],["str",0]],["result",6]],null,null,null,null,null,null,null,null,null,[[["",0],["usize",0]]],[[["chain",3],["usize",0]]],[[["take",3,[["buf",8]]],["usize",0]]],[[["",0],["usize",0]]],[[["chain",3],["usize",0]]],[[["limit",3,[["bufmut",8]]],["usize",0]]],[[["uninitslice",3]],["u8",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["buf",8]],["chain",3,[["buf",8]]]],[[["buf",8]],["chain",3,[["buf",8]]]],[[["buf",8]],["chain",3,[["buf",8]]]],[[["bufmut",8]],["chain",3,[["bufmut",8]]]],[[["bufmut",8]],["chain",3,[["bufmut",8]]]],[[["bufmut",8]],["chain",3,[["bufmut",8]]]],[[["",0]]],[[["chain",3]]],[[["take",3,[["buf",8]]]]],[[["",0]],["uninitslice",3]],[[["chain",3]],["uninitslice",3]],[[["limit",3,[["bufmut",8]]]],["uninitslice",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["chain",3]],["usize",0]],[[["reader",3,[["",26,[["buf",8],["sized",8]]]]],["usize",0]]],[[["uninitslice",3]]],[[["",0],["usize",0]],["bytes",3]],[[["",0],["usize",0]],["bytes",3]],[[["",0],["usize",0]],["bytes",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["reader",3,[["",26,[["buf",8],["sized",8]]]]]],["result",6]],[[["chain",3]],["",0]],[[["chain",3]],["",0]],[[["writer",3,[["",26,[["bufmut",8],["sized",8]]]]]],["result",6]],[[["uninitslice",3],["formatter",3]],["result",6]],[[["chain",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["intoiter",3,[["debug",8]]],["formatter",3]],["result",6]],[[["limit",3,[["debug",8]]],["formatter",3]],["result",6]],[[["reader",3,[["debug",8]]],["formatter",3]],["result",6]],[[["take",3,[["debug",8]]],["formatter",3]],["result",6]],[[["writer",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0],["usize",0]],["uninitslice",3]],[[["",0]],["f32",0]],[[["",0]],["f32",0]],[[["",0]],["f32",0]],[[["",0]],["f32",0]],[[["",0]],["f32",0]],[[["",0]],["f32",0]],[[["",0]],["f64",0]],[[["",0]],["f64",0]],[[["",0]],["f64",0]],[[["",0]],["f64",0]],[[["",0]],["f64",0]],[[["",0]],["f64",0]],[[["",0]],["i128",0]],[[["",0]],["i128",0]],[[["",0]],["i128",0]],[[["",0]],["i128",0]],[[["",0]],["i128",0]],[[["",0]],["i128",0]],[[["",0]],["i16",0]],[[["",0]],["i16",0]],[[["",0]],["i16",0]],[[["",0]],["i16",0]],[[["",0]],["i16",0]],[[["",0]],["i16",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],[[["",0]],["i8",0]],[[["",0]],["i8",0]],[[["",0]],["i8",0]],[[["",0],["usize",0]],["i64",0]],[[["",0],["usize",0]],["i64",0]],[[["",0],["usize",0]],["i64",0]],[[["",0],["usize",0]],["i64",0]],[[["",0],["usize",0]],["i64",0]],[[["",0],["usize",0]],["i64",0]],[[["intoiter",3]],["",0]],[[["limit",3]],["",0]],[[["reader",3,[["buf",8]]]],["",0]],[[["take",3]],["",0]],[[["writer",3,[["bufmut",8]]]],["",0]],[[["intoiter",3]],["",0]],[[["limit",3]],["",0]],[[["reader",3,[["buf",8]]]],["",0]],[[["take",3]],["",0]],[[["writer",3,[["bufmut",8]]]],["",0]],[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0],["usize",0]],["u64",0]],[[["",0],["usize",0]],["u64",0]],[[["",0],["usize",0]],["u64",0]],[[["",0],["usize",0]],["u64",0]],[[["",0],["usize",0]],["u64",0]],[[["",0],["usize",0]],["u64",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["uninitslice",3],["rangefull",3]],["uninitslice",3]],[[["uninitslice",3],["rangeinclusive",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangeto",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangefrom",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["range",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangetoinclusive",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["range",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangefrom",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangetoinclusive",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangeto",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangeinclusive",3,[["usize",0]]]],["uninitslice",3]],[[["uninitslice",3],["rangefull",3]],["uninitslice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["chain",3]]],[[["intoiter",3]]],[[["limit",3]]],[[["reader",3,[["buf",8]]]],["buf",8]],[[["take",3]]],[[["writer",3,[["bufmut",8]]]],["bufmut",8]],[[["chain",3]]],[[]],[[["chain",3]],["",0]],[[["chain",3]],["",0]],[[["uninitslice",3]],["usize",0]],[[["usize",0]],["limit",3]],[[["usize",0]],["limit",3]],[[["usize",0]],["limit",3]],[[["limit",3]],["usize",0]],[[["take",3]],["usize",0]],[[["intoiter",3,[["buf",8]]]],["option",4,[["u8",0]]]],[[["",0],["buf",8]]],[[["",0],["buf",8]]],[[["",0],["buf",8]]],[[["",0],["f32",0]]],[[["",0],["f32",0]]],[[["",0],["f32",0]]],[[["",0],["f32",0]]],[[["",0],["f32",0]]],[[["",0],["f32",0]]],[[["",0],["f64",0]]],[[["",0],["f64",0]]],[[["",0],["f64",0]]],[[["",0],["f64",0]]],[[["",0],["f64",0]]],[[["",0],["f64",0]]],[[["",0],["i128",0]]],[[["",0],["i128",0]]],[[["",0],["i128",0]]],[[["",0],["i128",0]]],[[["",0],["i128",0]]],[[["",0],["i128",0]]],[[["",0],["i16",0]]],[[["",0],["i16",0]]],[[["",0],["i16",0]]],[[["",0],["i16",0]]],[[["",0],["i16",0]]],[[["",0],["i16",0]]],[[["",0],["i32",0]]],[[["",0],["i32",0]]],[[["",0],["i32",0]]],[[["",0],["i32",0]]],[[["",0],["i32",0]]],[[["",0],["i32",0]]],[[["",0],["i64",0]]],[[["",0],["i64",0]]],[[["",0],["i64",0]]],[[["",0],["i64",0]]],[[["",0],["i64",0]]],[[["",0],["i64",0]]],[[["",0],["i8",0]]],[[["",0],["i8",0]]],[[["",0],["i8",0]]],[[["",0],["i64",0],["usize",0]]],[[["",0],["i64",0],["usize",0]]],[[["",0],["i64",0],["usize",0]]],[[["",0],["i64",0],["usize",0]]],[[["",0],["i64",0],["usize",0]]],[[["",0],["i64",0],["usize",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["u128",0]]],[[["",0],["u128",0]]],[[["",0],["u128",0]]],[[["",0],["u128",0]]],[[["",0],["u128",0]]],[[["",0],["u128",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u64",0],["usize",0]]],[[["",0],["u64",0],["usize",0]]],[[["",0],["u64",0],["usize",0]]],[[["",0],["u64",0],["usize",0]]],[[["",0],["u64",0],["usize",0]]],[[["",0],["u64",0],["usize",0]]],[[["reader",3,[["",26,[["buf",8],["sized",8]]]]]],["result",6,[["usize",0]]]],[[],["reader",3]],[[],["reader",3]],[[],["reader",3]],[[["",0]],["usize",0]],[[["chain",3]],["usize",0]],[[["take",3,[["buf",8]]]],["usize",0]],[[["",0]],["usize",0]],[[["chain",3]],["usize",0]],[[["limit",3,[["bufmut",8]]]],["usize",0]],[[["limit",3],["usize",0]]],[[["take",3],["usize",0]]],[[["intoiter",3,[["buf",8]]]]],[[["usize",0]],["take",3]],[[["usize",0]],["take",3]],[[["usize",0]],["take",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["writer",3,[["",26,[["bufmut",8],["sized",8]]]]]],["result",6,[["usize",0]]]],[[["uninitslice",3],["usize",0],["u8",0]]],[[],["writer",3]],[[],["writer",3]],[[],["writer",3]]],"p":[[8,"Buf"],[3,"Bytes"],[3,"BytesMut"],[8,"BufMut"],[3,"Chain"],[3,"Take"],[3,"Limit"],[3,"UninitSlice"],[3,"IntoIter"],[3,"Reader"],[3,"Writer"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"cognitive_services_speech_sdk_rs":{"doc":"cognitive-services-speech-sdk-rs","t":[0,0,0,0,0,0,13,13,13,3,8,8,4,3,13,13,13,13,3,8,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,10,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,8,3,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,13,6,13,13,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,6,17,17,17,17,17,17,17,6,17,17,6,3,6,17,17,3,6,17,17,17,17,17,17,17,6,17,17,6,17,17,17,17,17,17,17,17,7,6,6,6,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,17,17,2,6,17,17,6,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,6,17,17,17,6,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,17,17,3,6,17,17,17,6,17,17,6,17,17,6,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,6,6,6,17,6,6,12,12,6,6,6,6,6,6,6,6,3,6,6,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,12,3,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,5,5,5,5,12,12,5,5,5,5,5,17,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,12,5,12,5,5,5,5,5,5,5,5,5,5,5,3,12,11,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,6,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,5,12,5,5,5,5,5,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,11,11,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["audio","common","dialog","error","ffi","speech","Alaw","Amrnb","Amrwb","AudioConfig","AudioInputStream","AudioOutputStream","AudioStreamContainerFormat","AudioStreamFormat","Flac","Mp3","Mulaw","OggOpus","PullAudioInputStream","PullAudioInputStreamCallbacks","PullAudioOutputStream","PushAudioInputStream","PushAudioOutputStream","PushAudioOutputStreamCallbacks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close","close","close_stream","create_pull_stream","create_push_stream","create_push_stream","create_push_stream_from_format","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_default_format","from_default_microphone_input","from_default_speaker_output","from_format","from_handle","from_handle","from_microphone_input","from_speaker_output","from_stream_input","from_stream_output","from_wav_file_input","from_wav_file_output","get_compressed_format","get_default_input_format","get_default_output_format","get_handle","get_handle","get_handle","get_handle","get_handle","get_handle","get_property","get_property","get_property_by_string","get_wave_format_pcm","handle","handle","handle","handle","handle","handle","into","into","into","into","into","into","into","properties","read","read","set_callbacks","set_callbacks","set_property","set_property","set_property_by_name","set_property_by_string","to_u32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","Audio16Khz128KBitRateMonoMp3","Audio16Khz16Bit32KbpsMonoOpus","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Audio24Khz16Bit24KbpsMonoOpus","Audio24Khz16Bit48KbpsMonoOpus","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio48Khz192KBitRateMonoMp3","Audio48Khz96KBitRateMonoMp3","AudioConfigAudioSource","AudioConfigBitsPerSampleForCapture","AudioConfigDeviceNameForCapture","AudioConfigDeviceNameForRender","AudioConfigNumberOfChannelsForCapture","AudioConfigPlaybackBufferLengthInMs","AudioConfigSampleRateForCapture","AuthenticationFailure","BadRequest","Canceled","CancellationDetailsReason","CancellationDetailsReasonDetailedText","CancellationDetailsReasonText","CancellationErrorCode","CancellationReason","CancelledByUser","ConnectionFailure","ConversationApplicationID","ConversationConversationID","ConversationCustomVoiceDeploymentIDs","ConversationDialogType","ConversationFromID","ConversationInitialSilenceTimeout","ConversationSpeechActivityTemplate","DataBufferTimeStamp","DataBufferUserID","Detailed","EndOfStream","Error","Forbidden","LanguageUnderstandingServiceResponseJsonResult","Masked","NoError","NoMatch","OfflineNeural","OfflineStandard","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","Ogg48Khz16BitMonoOpus","OnlineNeural","OnlineStandard","OutputFormat","ProfanityOption","PropertyCollection","PropertyId","PunctuationBoundary","Raw","Raw16Khz16BitMonoPcm","Raw16Khz16BitMonoTrueSilk","Raw22050Hz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw24Khz16BitMonoTrueSilk","Raw44100Hz16BitMonoPcm","Raw48Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Raw8Khz8BitMonoALaw","Raw8Khz8BitMonoMULaw","RecognizedIntent","RecognizedKeyword","RecognizedSpeech","RecognizingIntent","RecognizingKeyword","RecognizingSpeech","Removed","ResultReason","Riff16Khz16BitMonoPcm","Riff16Khz16KbpsMonoSiren","Riff22050Hz16BitMonoPcm","Riff24Khz16BitMonoPcm","Riff44100Hz16BitMonoPcm","Riff48Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff8Khz8BitMonoALaw","Riff8Khz8BitMonoMULaw","RuntimeError","SentenceBoundary","ServiceError","ServicePropertyChannel","ServiceTimeout","ServiceUnavailable","Simple","SpeechLogFilename","SpeechServiceAuthorizationToken","SpeechServiceAuthorizationType","SpeechServiceConnectionEnableAudioLogging","SpeechServiceConnectionEndSilenceTimeoutMs","SpeechServiceConnectionEndpoint","SpeechServiceConnectionEndpointId","SpeechServiceConnectionHost","SpeechServiceConnectionInitialSilenceTimeoutMs","SpeechServiceConnectionIntentRegion","SpeechServiceConnectionKey","SpeechServiceConnectionProxyHostName","SpeechServiceConnectionProxyPassword","SpeechServiceConnectionProxyPort","SpeechServiceConnectionProxyUserName","SpeechServiceConnectionRecoLanguage","SpeechServiceConnectionRecoMode","SpeechServiceConnectionRecoModelKey","SpeechServiceConnectionRecoModelName","SpeechServiceConnectionRegion","SpeechServiceConnectionSynthEnableCompressedAudioTransmission","SpeechServiceConnectionSynthLanguage","SpeechServiceConnectionSynthModelKey","SpeechServiceConnectionSynthOfflineVoice","SpeechServiceConnectionSynthOutputFormat","SpeechServiceConnectionSynthVoice","SpeechServiceConnectionTranslationFeatures","SpeechServiceConnectionTranslationToLanguages","SpeechServiceConnectionTranslationVoice","SpeechServiceConnectionURL","SpeechServiceConnectionUserDefinedQueryParameters","SpeechServiceResponseJsonErrorDetails","SpeechServiceResponseJsonResult","SpeechServiceResponseOutputFormatOption","SpeechServiceResponsePostProcessingOption","SpeechServiceResponseProfanityOption","SpeechServiceResponseRecognitionLatencyMs","SpeechServiceResponseRequestDetailedResultTrueFalse","SpeechServiceResponseRequestProfanityFilterTrueFalse","SpeechServiceResponseRequestWordLevelTimestamps","SpeechServiceResponseStablePartialResultThreshold","SpeechServiceResponseSynthesisBackend","SpeechServiceResponseSynthesisFinishLatencyMs","SpeechServiceResponseSynthesisFirstByteLatencyMs","SpeechServiceResponseSynthesisUnderrunTimeMs","SpeechServiceResponseTranslationRequestStablePartialResult","SpeechSessionId","SpeechSynthesisBoundaryType","SpeechSynthesisOutputFormat","StreamStatus","StreamStatusAllData","StreamStatusCanceled","StreamStatusNoData","StreamStatusPartialData","StreamStatusUnknown","SynthesisVoiceType","SynthesizingAudio","SynthesizingAudioCompleted","SynthesizingAudioStarted","TooManyRequests","TranslatedSpeech","TranslatingSpeech","URIQueryParameter","VoicesListRetrieved","Webm16Khz16BitMonoOpus","Webm24Khz16Bit24KbpsMonoOpus","Webm24Khz16BitMonoOpus","WordBoundary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_handle","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","get_property","get_property_by_string","handle","into","into","into","into","into","into","into","into","into","into","into","into","set_property","set_property_by_string","to_i32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ActivityReceivedEvent","BotFrameworkConfig","CustomCommandsConfig","DialogServiceConfig","DialogServiceConnector","activity","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","config","config","connect_async","disconnect_async","fmt","fmt","fmt","fmt","from","from","from","from","from_auth_token","from_auth_token","from_auth_token_and_bot_id","from_config","from_handle","from_subscription","from_subscription","from_subscription_and_bot_id","get_application_id","get_audio","get_auth_token","get_handle","get_handle","get_handle","get_language","get_language","get_property","get_property","get_property_by_string","get_property_by_string","get_speech_activity_template","get_speech_config","get_speech_config","get_speech_config","handle","handle","has_audio","into","into","into","into","listen_once_async","properties","send_activity_async","set_activity_received_cb","set_application_id","set_auth_token","set_canceled_cb","set_language","set_language","set_property","set_property","set_property_by_string","set_property_by_string","set_proxy","set_proxy","set_proxy_with_usrname_and_pwd","set_proxy_with_usrname_and_pwd","set_recognized_cb","set_recognizing_cb","set_service_property","set_service_property","set_session_started_cb","set_session_stopped_cb","set_speech_activity_template","start_keyword_recognition_async","stop_keyword_recognition_async","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ApiError","Error","ErrorRootCause","FfiNulError","FromUtf8Error","InvalidCString","Result","TryFromIntError","Utf8Error","api_error_desc","borrow","borrow","borrow_mut","borrow_mut","caused_by","convert_err","fmt","fmt","from","from","from","from","from","from","into","into","message","new","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","AUDIO_ENCODER_ONENCODEDDATA","AUDIO_INPUT_PROCESSING_DISABLE_DEREVERBERATION","AUDIO_INPUT_PROCESSING_DISABLE_ECHO_CANCELLATION","AUDIO_INPUT_PROCESSING_DISABLE_GAIN_CONTROL","AUDIO_INPUT_PROCESSING_DISABLE_NOISE_SUPPRESSION","AUDIO_INPUT_PROCESSING_ENABLE_DEFAULT","AUDIO_INPUT_PROCESSING_ENABLE_VOICE_ACTIVITY_DETECTION","AUDIO_INPUT_PROCESSING_NONE","AZACHR","AZAC_CONFIG_TRACE_INCLUDE_DBG_WITH_ALL","AZAC_ERR_NONE","AZAC_HANDLE","AudioProcessingOptions_MicrophoneArrayGeometry","AudioProcessingOptions_MicrophoneArrayType","AudioProcessingOptions_MicrophoneArrayType_AudioProcessingOptions_MicrophoneArrayType_Linear","AudioProcessingOptions_MicrophoneArrayType_AudioProcessingOptions_MicrophoneArrayType_Planar","AudioProcessingOptions_MicrophoneCoordinates","AudioProcessingOptions_PresetMicrophoneArrayGeometry","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Circular4","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Circular7","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Custom","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Linear2","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Linear4","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Mono","AudioProcessingOptions_PresetMicrophoneArrayGeometry_AudioProcessingOptions_PresetMicrophoneArrayGeometry_Uninitialized","AudioProcessingOptions_SpeakerReferenceChannel","AudioProcessingOptions_SpeakerReferenceChannel_AudioProcessingOptions_SpeakerReferenceChannel_LastChannel","AudioProcessingOptions_SpeakerReferenceChannel_AudioProcessingOptions_SpeakerReferenceChannel_None","Audio_Stream_Container_Format","Audio_Stream_Container_Format_StreamFormat_Alaw","Audio_Stream_Container_Format_StreamFormat_Amrnb","Audio_Stream_Container_Format_StreamFormat_Amrwb","Audio_Stream_Container_Format_StreamFormat_Any","Audio_Stream_Container_Format_StreamFormat_Flac","Audio_Stream_Container_Format_StreamFormat_Mp3","Audio_Stream_Container_Format_StreamFormat_Mulaw","Audio_Stream_Container_Format_StreamFormat_Ogg_Opus","CODECCREATEEXPORTNAME","CONNECTION_CALLBACK_FUNC","CUSTOM_AUDIO_PULL_STREAM_CLOSE_CALLBACK","CUSTOM_AUDIO_PULL_STREAM_GET_PROPERTY_CALLBACK","CUSTOM_AUDIO_PULL_STREAM_READ_CALLBACK","CUSTOM_AUDIO_PUSH_STREAM_CLOSE_CALLBACK","CUSTOM_AUDIO_PUSH_STREAM_WRITE_CALLBACK","DIAGNOSTICS_CALLBACK_FUNC","GrammarList_RecognitionFactorScope","GrammarList_RecognitionFactorScope_PartialPhrase","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","NULL_C_STR_PTR","PCODEC_CREATE_FUNC","PCONV_TRANS_CALLBACK","PRECOGNITION_CALLBACK_FUNC","PRIX16","PRIX32","PRIX64","PRIX8","PRIXFAST16","PRIXFAST32","PRIXFAST64","PRIXFAST8","PRIXLEAST16","PRIXLEAST32","PRIXLEAST64","PRIXLEAST8","PRIXMAX","PRIXPTR","PRId16","PRId32","PRId64","PRId8","PRIdFAST16","PRIdFAST32","PRIdFAST64","PRIdFAST8","PRIdLEAST16","PRIdLEAST32","PRIdLEAST64","PRIdLEAST8","PRIdMAX","PRIdPTR","PRIi16","PRIi32","PRIi64","PRIi8","PRIiFAST16","PRIiFAST32","PRIiFAST64","PRIiFAST8","PRIiLEAST16","PRIiLEAST32","PRIiLEAST64","PRIiLEAST8","PRIiMAX","PRIiPTR","PRIo16","PRIo32","PRIo64","PRIo8","PRIoFAST16","PRIoFAST32","PRIoFAST64","PRIoFAST8","PRIoLEAST16","PRIoLEAST32","PRIoLEAST64","PRIoLEAST8","PRIoMAX","PRIoPTR","PRIu16","PRIu32","PRIu64","PRIu8","PRIuFAST16","PRIuFAST32","PRIuFAST64","PRIuFAST8","PRIuLEAST16","PRIuLEAST32","PRIuLEAST64","PRIuLEAST8","PRIuMAX","PRIuPTR","PRIx16","PRIx32","PRIx64","PRIx8","PRIxFAST16","PRIxFAST32","PRIxFAST64","PRIxFAST8","PRIxLEAST16","PRIxLEAST32","PRIxLEAST64","PRIxLEAST8","PRIxMAX","PRIxPTR","PSESSION_CALLBACK_FUNC","PSYNTHESIS_CALLBACK_FUNC","PTRANSLATIONSYNTHESIS_CALLBACK_FUNC","PTRDIFF_MAX","PTRDIFF_MIN","ParticipantChangedReason","Pronunciation_Assessment_Grading_System","Pronunciation_Assessment_Grading_System_PronunciationAssessmentGradingSystem_FivePoint","Pronunciation_Assessment_Grading_System_PronunciationAssessmentGradingSystem_HundredMark","Pronunciation_Assessment_Granularity","Pronunciation_Assessment_Granularity_PronunciationAssessmentGranularity_FullText","Pronunciation_Assessment_Granularity_PronunciationAssessmentGranularity_Phoneme","Pronunciation_Assessment_Granularity_PronunciationAssessmentGranularity_Word","PropertyId","PropertyId_AudioConfig_AudioSource","PropertyId_AudioConfig_BitsPerSampleForCapture","PropertyId_AudioConfig_DeviceNameForCapture","PropertyId_AudioConfig_DeviceNameForRender","PropertyId_AudioConfig_NumberOfChannelsForCapture","PropertyId_AudioConfig_PlaybackBufferLengthInMs","PropertyId_AudioConfig_SampleRateForCapture","PropertyId_CancellationDetails_Reason","PropertyId_CancellationDetails_ReasonDetailedText","PropertyId_CancellationDetails_ReasonText","PropertyId_Conversation_ApplicationId","PropertyId_Conversation_Conversation_Id","PropertyId_Conversation_Custom_Voice_Deployment_Ids","PropertyId_Conversation_DialogType","PropertyId_Conversation_From_Id","PropertyId_Conversation_Initial_Silence_Timeout","PropertyId_Conversation_ParticipantId","PropertyId_Conversation_Speech_Activity_Template","PropertyId_DataBuffer_TimeStamp","PropertyId_DataBuffer_UserId","PropertyId_LanguageUnderstandingServiceResponse_JsonResult","PropertyId_PronunciationAssessment_EnableMiscue","PropertyId_PronunciationAssessment_GradingSystem","PropertyId_PronunciationAssessment_Granularity","PropertyId_PronunciationAssessment_Json","PropertyId_PronunciationAssessment_NBestPhonemeCount","PropertyId_PronunciationAssessment_Params","PropertyId_PronunciationAssessment_PhonemeAlphabet","PropertyId_PronunciationAssessment_ReferenceText","PropertyId_SpeakerRecognition_Api_Version","PropertyId_SpeechServiceAuthorization_Token","PropertyId_SpeechServiceAuthorization_Type","PropertyId_SpeechServiceConnection_AutoDetectSourceLanguageResult","PropertyId_SpeechServiceConnection_AutoDetectSourceLanguages","PropertyId_SpeechServiceConnection_ContinuousLanguageIdPriority","PropertyId_SpeechServiceConnection_EnableAudioLogging","PropertyId_SpeechServiceConnection_EndSilenceTimeoutMs","PropertyId_SpeechServiceConnection_Endpoint","PropertyId_SpeechServiceConnection_EndpointId","PropertyId_SpeechServiceConnection_Host","PropertyId_SpeechServiceConnection_InitialSilenceTimeoutMs","PropertyId_SpeechServiceConnection_IntentRegion","PropertyId_SpeechServiceConnection_Key","PropertyId_SpeechServiceConnection_ProxyHostName","PropertyId_SpeechServiceConnection_ProxyPassword","PropertyId_SpeechServiceConnection_ProxyPort","PropertyId_SpeechServiceConnection_ProxyUserName","PropertyId_SpeechServiceConnection_RecoLanguage","PropertyId_SpeechServiceConnection_RecoMode","PropertyId_SpeechServiceConnection_RecoModelBackend","PropertyId_SpeechServiceConnection_RecoModelIniFile","PropertyId_SpeechServiceConnection_RecoModelKey","PropertyId_SpeechServiceConnection_RecoModelName","PropertyId_SpeechServiceConnection_Region","PropertyId_SpeechServiceConnection_SingleLanguageIdPriority","PropertyId_SpeechServiceConnection_SynthBackend","PropertyId_SpeechServiceConnection_SynthEnableCompressedAudioTransmission","PropertyId_SpeechServiceConnection_SynthLanguage","PropertyId_SpeechServiceConnection_SynthModelKey","PropertyId_SpeechServiceConnection_SynthOfflineDataPath","PropertyId_SpeechServiceConnection_SynthOfflineVoice","PropertyId_SpeechServiceConnection_SynthOutputFormat","PropertyId_SpeechServiceConnection_SynthVoice","PropertyId_SpeechServiceConnection_TranslationFeatures","PropertyId_SpeechServiceConnection_TranslationToLanguages","PropertyId_SpeechServiceConnection_TranslationVoice","PropertyId_SpeechServiceConnection_Url","PropertyId_SpeechServiceConnection_UserDefinedQueryParameters","PropertyId_SpeechServiceConnection_VoicesListEndpoint","PropertyId_SpeechServiceResponse_JsonErrorDetails","PropertyId_SpeechServiceResponse_JsonResult","PropertyId_SpeechServiceResponse_OutputFormatOption","PropertyId_SpeechServiceResponse_PostProcessingOption","PropertyId_SpeechServiceResponse_ProfanityOption","PropertyId_SpeechServiceResponse_RecognitionLatencyMs","PropertyId_SpeechServiceResponse_RequestDetailedResultTrueFalse","PropertyId_SpeechServiceResponse_RequestProfanityFilterTrueFalse","PropertyId_SpeechServiceResponse_RequestSnr","PropertyId_SpeechServiceResponse_RequestWordLevelTimestamps","PropertyId_SpeechServiceResponse_StablePartialResultThreshold","PropertyId_SpeechServiceResponse_SynthesisFinishLatencyMs","PropertyId_SpeechServiceResponse_SynthesisFirstByteLatencyMs","PropertyId_SpeechServiceResponse_SynthesisUnderrunTimeMs","PropertyId_SpeechServiceResponse_TranslationRequestStablePartialResult","PropertyId_Speech_LogFilename","PropertyId_Speech_SegmentationSilenceTimeoutMs","PropertyId_Speech_SessionId","Result_CancellationErrorCode","Result_CancellationErrorCode_CancellationErrorCode_AuthenticationFailure","Result_CancellationErrorCode_CancellationErrorCode_BadRequest","Result_CancellationErrorCode_CancellationErrorCode_ConnectionFailure","Result_CancellationErrorCode_CancellationErrorCode_Forbidden","Result_CancellationErrorCode_CancellationErrorCode_NoError","Result_CancellationErrorCode_CancellationErrorCode_RuntimeError","Result_CancellationErrorCode_CancellationErrorCode_ServiceError","Result_CancellationErrorCode_CancellationErrorCode_ServiceTimeout","Result_CancellationErrorCode_CancellationErrorCode_ServiceUnavailable","Result_CancellationErrorCode_CancellationErrorCode_TooManyRequests","Result_CancellationReason","Result_CancellationReason_CancellationReason_EndOfStream","Result_CancellationReason_CancellationReason_Error","Result_CancellationReason_CancellationReason_UserCancelled","Result_NoMatchReason","Result_NoMatchReason_NoMatchReason_InitialBabbleTimeout","Result_NoMatchReason_NoMatchReason_InitialSilenceTimeout","Result_NoMatchReason_NoMatchReason_KeywordNotRecognized","Result_NoMatchReason_NoMatchReason_NotRecognized","Result_Reason","Result_Reason_ResultReason_Canceled","Result_Reason_ResultReason_NoMatch","Result_Reason_ResultReason_RecognizedIntent","Result_Reason_ResultReason_RecognizedKeyword","Result_Reason_ResultReason_RecognizedSpeech","Result_Reason_ResultReason_RecognizingIntent","Result_Reason_ResultReason_RecognizingKeyword","Result_Reason_ResultReason_RecognizingSpeech","Result_Reason_ResultReason_SynthesizingAudio","Result_Reason_ResultReason_SynthesizingAudioComplete","Result_Reason_ResultReason_SynthesizingAudioStart","Result_Reason_ResultReason_TranslatedSpeech","Result_Reason_ResultReason_TranslatingSpeech","Result_TranslationTextBufferHeader","SCNd16","SCNd32","SCNd64","SCNd8","SCNdFAST16","SCNdFAST32","SCNdFAST64","SCNdFAST8","SCNdLEAST16","SCNdLEAST32","SCNdLEAST64","SCNdLEAST8","SCNdMAX","SCNdPTR","SCNi16","SCNi32","SCNi64","SCNi8","SCNiFAST16","SCNiFAST32","SCNiFAST64","SCNiFAST8","SCNiLEAST16","SCNiLEAST32","SCNiLEAST64","SCNiLEAST8","SCNiMAX","SCNiPTR","SCNo16","SCNo32","SCNo64","SCNo8","SCNoFAST16","SCNoFAST32","SCNoFAST64","SCNoFAST8","SCNoLEAST16","SCNoLEAST32","SCNoLEAST64","SCNoLEAST8","SCNoMAX","SCNoPTR","SCNu16","SCNu32","SCNu64","SCNu8","SCNuFAST16","SCNuFAST32","SCNuFAST64","SCNuFAST8","SCNuLEAST16","SCNuLEAST32","SCNuLEAST64","SCNuLEAST8","SCNuMAX","SCNuPTR","SCNx16","SCNx32","SCNx64","SCNx8","SCNxFAST16","SCNxFAST32","SCNxFAST64","SCNxFAST8","SCNxLEAST16","SCNxLEAST32","SCNxLEAST64","SCNxLEAST8","SCNxMAX","SCNxPTR","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","SPXACTIVITYHANDLE","SPXACTIVITYJSONHANDLE","SPXASYNCHANDLE","SPXAUDIOCONFIGHANDLE","SPXAUDIOPROCESSINGOPTIONSHANDLE","SPXAUDIOSTREAMFORMATHANDLE","SPXAUDIOSTREAMHANDLE","SPXAUTODETECTSOURCELANGCONFIGHANDLE","SPXCODECCTYPE","SPXCONNECTIONHANDLE","SPXCONNECTIONMESSAGEHANDLE","SPXCONVERSATIONHANDLE","SPXCONVERSATIONTRANSLATORHANDLE","SPXEVENTHANDLE","SPXFACTORYHANDLE","SPXGRAMMARHANDLE","SPXHANDLE","SPXHR","SPXKEYWORDHANDLE","SPXLUMODELHANDLE","SPXPARTICIPANTHANDLE","SPXPHRASEHANDLE","SPXPRONUNCIATIONASSESSMENTCONFIGHANDLE","SPXPROPERTYBAGHANDLE","SPXRECOHANDLE","SPXRESULTHANDLE","SPXSESSIONHANDLE","SPXSIMODELHANDLE","SPXSOURCELANGCONFIGHANDLE","SPXSPEAKERIDHANDLE","SPXSPEECHCONFIGHANDLE","SPXSPEECHRECOMODELHANDLE","SPXSVMODELHANDLE","SPXSYNTHHANDLE","SPXTRIGGERHANDLE","SPXUSERHANDLE","SPXVOICEPROFILECLIENTHANDLE","SPXVOICEPROFILEHANDLE","SPX_CODEC_CLIENT_GET_PROPERTY","SPX_CONFIG_TRACE_INCLUDE_DBG_WITH_ALL","SPX_NOERROR","SmartHandle","SpeechConfig_ProfanityOption","SpeechConfig_ProfanityOption_SpeechConfig_ProfanityMasked","SpeechConfig_ProfanityOption_SpeechConfig_ProfanityRaw","SpeechConfig_ProfanityOption_SpeechConfig_ProfanityRemoved","SpeechConfig_ServicePropertyChannel","SpeechConfig_ServicePropertyChannel_SpeechConfig_ServicePropertyChannel_HttpHeader","SpeechConfig_ServicePropertyChannel_SpeechConfig_ServicePropertyChannel_UriQueryParameter","SpeechOutputFormat","SpeechOutputFormat_SpeechOutputFormat_Detailed","SpeechOutputFormat_SpeechOutputFormat_Simple","SpeechSynthesis_BoundaryType","SpeechSynthesis_BoundaryType_SpeechSynthesis_BoundaryType_Punctuation","SpeechSynthesis_BoundaryType_SpeechSynthesis_BoundaryType_Sentence","SpeechSynthesis_BoundaryType_SpeechSynthesis_BoundaryType_Word","Speech_Synthesis_Output_Format","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio16Khz128KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio16Khz16Bit32KbpsMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio16Khz16KbpsMonoSiren","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio16Khz32KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio16Khz64KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio24Khz160KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio24Khz16Bit24KbpsMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio24Khz16Bit48KbpsMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio24Khz48KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio24Khz96KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio48Khz192KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Audio48Khz96KBitRateMonoMp3","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Ogg16khz16BitMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Ogg24Khz16BitMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Ogg48Khz16BitMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw16Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw16Khz16BitMonoTrueSilk","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw22050Hz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw24Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw24Khz16BitMonoTrueSilk","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw44100Hz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw48Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw8Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw8Khz8BitMonoALaw","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Raw8Khz8BitMonoMULaw","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff16Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff16Khz16KbpsMonoSiren","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff22050Hz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff24Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff44100Hz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff48Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff8Khz16BitMonoPcm","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff8Khz8BitMonoALaw","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Riff8Khz8BitMonoMULaw","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Webm16Khz16BitMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Webm24Khz16Bit24KbpsMonoOpus","Speech_Synthesis_Output_Format_SpeechSynthesisOutputFormat_Webm24Khz16BitMonoOpus","Stream_Status","Stream_Status_StreamStatus_AllData","Stream_Status_StreamStatus_Canceled","Stream_Status_StreamStatus_NoData","Stream_Status_StreamStatus_PartialData","Stream_Status_StreamStatus_Unknown","Synthesis_VoiceType","Synthesis_VoiceType_SynthesisVoiceType_OfflineNeural","Synthesis_VoiceType_SynthesisVoiceType_OfflineStandard","Synthesis_VoiceType_SynthesisVoiceType_OnlineNeural","Synthesis_VoiceType_SynthesisVoiceType_OnlineStandard","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","WINT_MAX","WINT_MIN","X","Y","Z","_ATFILE_SOURCE","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_INTTYPES_H","_POSIX_C_SOURCE","_POSIX_SOURCE","_ParticipantChangedReason","_ParticipantChangedReason_JoinedConversation","_ParticipantChangedReason_LeftConversation","_ParticipantChangedReason_Updated","_Result_TranslationTextBufferHeader","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","__AZAC_TRACE_LEVEL_ERROR","__AZAC_TRACE_LEVEL_INFO","__AZAC_TRACE_LEVEL_VERBOSE","__AZAC_TRACE_LEVEL_WARNING","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__LONG_DOUBLE_USES_FLOAT128","__OFF_T_MATCHES_OFF64_T","__PRI64_PREFIX","__PRIPTR_PREFIX","__RLIM_T_MATCHES_RLIM64_T","__SPX_TRACE_LEVEL_ERROR","__SPX_TRACE_LEVEL_INFO","__SPX_TRACE_LEVEL_VERBOSE","__SPX_TRACE_LEVEL_WARNING","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","____gwchar_t_defined","__bindgen_padding_0","__blkcnt64_t","__blkcnt_t","__blksize_t","__bool_true_false_are_defined","__builtin_va_list","__caddr_t","__clang_max_align_nonce1","__clang_max_align_nonce2","__clock_t","__clockid_t","__daddr_t","__dev_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__gwchar_t","__id_t","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__loff_t","__mode_t","__nlink_t","__off64_t","__off_t","__pid_t","__quad_t","__rlim64_t","__rlim_t","__sig_atomic_t","__socklen_t","__ssize_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__timer_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","_azac_empty","_azachandle","add_source_lang_config_to_auto_detect_source_lang_config","audio_config_create_audio_input_from_a_microphone","audio_config_create_audio_input_from_default_microphone","audio_config_create_audio_input_from_stream","audio_config_create_audio_input_from_wav_file_name","audio_config_create_audio_output_from_a_speaker","audio_config_create_audio_output_from_default_speaker","audio_config_create_audio_output_from_stream","audio_config_create_audio_output_from_wav_file_name","audio_config_create_pull_audio_input_stream","audio_config_create_push_audio_input_stream","audio_config_get_audio_processing_options","audio_config_get_property_bag","audio_config_is_handle_valid","audio_config_release","audio_config_set_audio_processing_options","audio_data_stream_can_read_data","audio_data_stream_can_read_data_from_position","audio_data_stream_create_from_file","audio_data_stream_create_from_keyword_result","audio_data_stream_create_from_result","audio_data_stream_detach_input","audio_data_stream_get_canceled_error_code","audio_data_stream_get_position","audio_data_stream_get_property_bag","audio_data_stream_get_reason_canceled","audio_data_stream_get_status","audio_data_stream_is_handle_valid","audio_data_stream_read","audio_data_stream_read_from_position","audio_data_stream_release","audio_data_stream_save_to_wave_file","audio_data_stream_set_position","audio_processing_options_create","audio_processing_options_create_from_microphone_array_geometry","audio_processing_options_create_from_preset_microphone_array_geometry","audio_processing_options_get_audio_processing_flags","audio_processing_options_get_beamforming_end_angle","audio_processing_options_get_beamforming_start_angle","audio_processing_options_get_microphone_array_type","audio_processing_options_get_microphone_coordinates","audio_processing_options_get_microphone_count","audio_processing_options_get_preset_microphone_array_geometry","audio_processing_options_get_speaker_reference_channel","audio_processing_options_is_handle_valid","audio_processing_options_release","audio_stream_create_pull_audio_input_stream","audio_stream_create_pull_audio_output_stream","audio_stream_create_push_audio_input_stream","audio_stream_create_push_audio_output_stream","audio_stream_format_create_from_compressed_format","audio_stream_format_create_from_default_input","audio_stream_format_create_from_default_output","audio_stream_format_create_from_waveformat_pcm","audio_stream_format_is_handle_valid","audio_stream_format_release","audio_stream_is_handle_valid","audio_stream_release","auto_detect_source_lang_config_get_property_bag","auto_detect_source_lang_config_is_handle_valid","auto_detect_source_lang_config_release","beamformingEndAngle","beamformingStartAngle","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bot_framework_config_from_authorization_token","bot_framework_config_from_subscription","bufferSize","class_language_model_assign_class","class_language_model_from_storage_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codec_c_interface","codec_c_interface_P","codec_create","connection_async_handle_release","connection_close","connection_connected_set_callback","connection_disconnected_set_callback","connection_from_conversation_translator","connection_from_dialog_service_connector","connection_from_recognizer","connection_from_speech_synthesizer","connection_get_property_bag","connection_handle_is_valid","connection_handle_release","connection_message_get_data","connection_message_get_data_size","connection_message_get_property_bag","connection_message_handle_is_valid","connection_message_handle_release","connection_message_received_event_get_message","connection_message_received_event_handle_is_valid","connection_message_received_event_handle_release","connection_message_received_set_callback","connection_open","connection_send_message","connection_send_message_async","connection_send_message_data","connection_send_message_data_async","connection_send_message_wait_for","connection_set_message_property","const_char_ptr","conversation_create_from_config","conversation_delete_conversation","conversation_end_conversation","conversation_get_conversation_id","conversation_get_property_bag","conversation_lock_conversation","conversation_mute_all_participants","conversation_mute_participant","conversation_release_handle","conversation_start_conversation","conversation_transcription_result_get_user_id","conversation_transcription_result_get_utterance_id","conversation_translator_canceled_set_callback","conversation_translator_connection_connected_set_callback","conversation_translator_connection_disconnected_set_callback","conversation_translator_conversation_expiration_set_callback","conversation_translator_create_from_config","conversation_translator_event_get_expiration_time","conversation_translator_event_get_participant_changed_at_index","conversation_translator_event_get_participant_changed_reason","conversation_translator_event_handle_is_valid","conversation_translator_event_handle_release","conversation_translator_get_property_bag","conversation_translator_handle_is_valid","conversation_translator_handle_release","conversation_translator_join","conversation_translator_join_with_id","conversation_translator_leave","conversation_translator_participant_get_avatar","conversation_translator_participant_get_displayname","conversation_translator_participant_get_id","conversation_translator_participant_get_is_host","conversation_translator_participant_get_is_muted","conversation_translator_participant_get_is_using_tts","conversation_translator_participants_changed_set_callback","conversation_translator_result_get_original_lang","conversation_translator_send_text_message","conversation_translator_session_started_set_callback","conversation_translator_session_stopped_set_callback","conversation_translator_set_authorization_token","conversation_translator_start_transcribing","conversation_translator_stop_transcribing","conversation_translator_text_message_recevied_set_callback","conversation_translator_transcribed_set_callback","conversation_translator_transcribing_set_callback","conversation_unlock_conversation","conversation_unmute_all_participants","conversation_unmute_participant","conversation_update_participant","conversation_update_participant_by_user","conversation_update_participant_by_user_id","create","create_auto_detect_source_lang_config_from_languages","create_auto_detect_source_lang_config_from_open_range","create_auto_detect_source_lang_config_from_source_lang_config","create_pronunciation_assessment_config","create_pronunciation_assessment_config_from_json","create_voice_profile","create_voice_profile_client_from_config","create_voice_profile_from_id_and_type","custom_commands_config_from_authorization_token","custom_commands_config_from_subscription","delete_voice_profile","destroy","diagnostics_log_apply_properties","diagnostics_log_console_set_filters","diagnostics_log_console_start_logging","diagnostics_log_console_stop_logging","diagnostics_log_format_message","diagnostics_log_memory_dump","diagnostics_log_memory_dump_on_exit","diagnostics_log_memory_dump_to_stderr","diagnostics_log_memory_get_line","diagnostics_log_memory_get_line_num_newest","diagnostics_log_memory_get_line_num_oldest","diagnostics_log_memory_set_filters","diagnostics_log_memory_start_logging","diagnostics_log_memory_stop_logging","diagnostics_log_start_logging","diagnostics_log_stop_logging","diagnostics_log_trace_message","diagnostics_log_trace_message2","diagnostics_log_trace_string","diagnostics_logmessage_set_callback","diagnostics_logmessage_set_filters","diagnostics_set_log_level","dialog_service_connector_activity_received_event_get_activity","dialog_service_connector_activity_received_event_get_activity_size","dialog_service_connector_activity_received_event_get_audio","dialog_service_connector_activity_received_event_handle_is_valid","dialog_service_connector_activity_received_event_has_audio","dialog_service_connector_activity_received_event_release","dialog_service_connector_activity_received_set_callback","dialog_service_connector_async_handle_is_valid","dialog_service_connector_async_handle_release","dialog_service_connector_async_reco_result_handle_is_valid","dialog_service_connector_async_reco_result_handle_release","dialog_service_connector_async_string_handle_is_valid","dialog_service_connector_async_string_handle_release","dialog_service_connector_async_void_handle_is_valid","dialog_service_connector_async_void_handle_release","dialog_service_connector_canceled_set_callback","dialog_service_connector_connect","dialog_service_connector_connect_async","dialog_service_connector_connect_async_wait_for","dialog_service_connector_create_dialog_service_connector_from_config","dialog_service_connector_disconnect","dialog_service_connector_disconnect_async","dialog_service_connector_disconnect_async_wait_for","dialog_service_connector_get_property_bag","dialog_service_connector_handle_is_valid","dialog_service_connector_handle_release","dialog_service_connector_listen_once","dialog_service_connector_listen_once_async","dialog_service_connector_listen_once_async_wait_for","dialog_service_connector_recognized_get_result","dialog_service_connector_recognized_set_callback","dialog_service_connector_recognized_size","dialog_service_connector_recognizing_set_callback","dialog_service_connector_send_activity","dialog_service_connector_send_activity_async","dialog_service_connector_send_activity_async_wait_for","dialog_service_connector_session_started_set_callback","dialog_service_connector_session_stopped_set_callback","dialog_service_connector_speech_end_detected_set_callback","dialog_service_connector_speech_start_detected_set_callback","dialog_service_connector_start_continuous_listening","dialog_service_connector_start_continuous_listening_async","dialog_service_connector_start_keyword_recognition","dialog_service_connector_start_keyword_recognition_async","dialog_service_connector_start_keyword_recognition_async_wait_for","dialog_service_connector_stop_keyword_recognition","dialog_service_connector_stop_keyword_recognition_async","dialog_service_connector_stop_keyword_recognition_async_wait_for","dialog_service_connector_stop_listening","dialog_service_connector_stop_listening_async","dialog_service_connector_turn_status_received_get_conversation_id","dialog_service_connector_turn_status_received_get_conversation_id_size","dialog_service_connector_turn_status_received_get_interaction_id","dialog_service_connector_turn_status_received_get_interaction_id_size","dialog_service_connector_turn_status_received_get_status","dialog_service_connector_turn_status_received_handle_is_valid","dialog_service_connector_turn_status_received_release","dialog_service_connector_turn_status_received_set_callback","drop","embedded_speech_config_add_path","embedded_speech_config_create","embedded_speech_config_get_num_speech_reco_models","embedded_speech_config_get_speech_reco_model","encode","endstream","enroll_voice_profile","error_get_call_stack","error_get_error_code","error_get_message","error_release","false_","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fp_offset","from","from","from","from","from","from","from","from","from","from","get_activation_phrases","get_format_type","get_profiles_json","gp_offset","grammar_create_from_storage_id","grammar_handle_is_valid","grammar_handle_release","grammar_list_add_grammar","grammar_list_from_recognizer","grammar_list_set_recognition_factor","grammar_phrase_create_from_text","grammar_phrase_handle_is_valid","grammar_phrase_handle_release","imaxabs","imaxdiv","imaxdiv_t","init","inner","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intent_recognizer_add_intent","intent_recognizer_clear_language_models","intent_recognizer_import_pattern_matching_model","intent_recognizer_recognize_text_once","intent_result_get_intent_id","intent_trigger_create_from_language_understanding_model","intent_trigger_create_from_phrase","intent_trigger_handle_is_valid","intent_trigger_handle_release","intmax_t","into","into","into","into","into","into","into","into","into","into","keyword_recognition_model_create_from_file","keyword_recognition_model_handle_is_valid","keyword_recognition_model_handle_release","language_understanding_model__handle_release","language_understanding_model_create_from_app_id","language_understanding_model_create_from_subscription","language_understanding_model_create_from_uri","language_understanding_model_get_model_id","language_understanding_model_handle_is_valid","max_align_t","microphoneArrayType","microphoneCoordinates","numberEntries","numberOfMicrophones","overflow_arg_area","participant_create_handle","participant_get_property_bag","participant_release_handle","participant_set_preferred_langugage","participant_set_voice_signature","pattern_matching_model__handle_release","pattern_matching_model_create_from_id","pattern_matching_model_handle_is_valid","phrase_list_grammar_add_phrase","phrase_list_grammar_clear","phrase_list_grammar_from_recognizer_by_name","pronunciation_assessment_config_apply_to_recognizer","pronunciation_assessment_config_get_property_bag","pronunciation_assessment_config_is_handle_valid","pronunciation_assessment_config_release","pronunciation_assessment_config_to_json","property_bag_copy","property_bag_create","property_bag_free_string","property_bag_get_string","property_bag_is_valid","property_bag_release","property_bag_set_string","pull_audio_input_stream_set_callbacks","pull_audio_input_stream_set_getproperty_callback","pull_audio_output_stream_read","push_audio_input_stream_close","push_audio_input_stream_set_property_by_id","push_audio_input_stream_set_property_by_name","push_audio_input_stream_write","push_audio_output_stream_set_callbacks","quot","recognizer_async_handle_is_valid","recognizer_async_handle_release","recognizer_canceled_set_callback","recognizer_connection_event_get_property_bag","recognizer_create_conversation_transcriber_from_config","recognizer_create_intent_recognizer_from_config","recognizer_create_keyword_recognizer_from_audio_config","recognizer_create_source_language_recognizer_from_auto_detect_source_lang_config","recognizer_create_speaker_recognizer_from_config","recognizer_create_speech_recognizer_from_auto_detect_source_lang_config","recognizer_create_speech_recognizer_from_config","recognizer_create_speech_recognizer_from_source_lang_config","recognizer_create_translation_recognizer_from_auto_detect_source_lang_config","recognizer_create_translation_recognizer_from_config","recognizer_disable","recognizer_enable","recognizer_event_handle_is_valid","recognizer_event_handle_release","recognizer_get_property_bag","recognizer_handle_is_valid","recognizer_handle_release","recognizer_is_enabled","recognizer_join_conversation","recognizer_leave_conversation","recognizer_recognition_event_get_offset","recognizer_recognition_event_get_result","recognizer_recognize_keyword_once","recognizer_recognize_keyword_once_async","recognizer_recognize_keyword_once_async_wait_for","recognizer_recognize_once","recognizer_recognize_once_async","recognizer_recognize_once_async_wait_for","recognizer_recognize_text_once_async","recognizer_recognized_set_callback","recognizer_recognizing_set_callback","recognizer_result_handle_is_valid","recognizer_result_handle_release","recognizer_session_event_get_session_id","recognizer_session_started_set_callback","recognizer_session_stopped_set_callback","recognizer_speech_end_detected_set_callback","recognizer_speech_start_detected_set_callback","recognizer_start_continuous_recognition","recognizer_start_continuous_recognition_async","recognizer_start_continuous_recognition_async_wait_for","recognizer_start_keyword_recognition","recognizer_start_keyword_recognition_async","recognizer_start_keyword_recognition_async_wait_for","recognizer_stop_continuous_recognition","recognizer_stop_continuous_recognition_async","recognizer_stop_continuous_recognition_async_wait_for","recognizer_stop_keyword_recognition","recognizer_stop_keyword_recognition_async","recognizer_stop_keyword_recognition_async_wait_for","reg_save_area","rem","reset_voice_profile","result_get_canceled_error_code","result_get_duration","result_get_no_match_reason","result_get_offset","result_get_property_bag","result_get_reason","result_get_reason_canceled","result_get_result_id","result_get_text","retrieve_enrollment_result","session_from_recognizer","session_get_property_bag","session_handle_is_valid","session_handle_release","size_t","source_lang_config_from_language","source_lang_config_from_language_and_endpointId","source_lang_config_get_property_bag","source_lang_config_is_handle_valid","source_lang_config_release","speaker_identification_model_add_profile","speaker_identification_model_create","speaker_identification_model_release_handle","speaker_recognizer_get_property_bag","speaker_recognizer_identify","speaker_recognizer_release_handle","speaker_recognizer_verify","speaker_verification_model_create","speaker_verification_model_release_handle","speech_config_from_authorization_token","speech_config_from_endpoint","speech_config_from_host","speech_config_from_subscription","speech_config_get_property_bag","speech_config_is_handle_valid","speech_config_release","speech_config_set_audio_output_format","speech_config_set_profanity","speech_config_set_service_property","speech_recognition_model_get_locales","speech_recognition_model_get_name","speech_recognition_model_get_path","speech_recognition_model_get_version","speech_recognition_model_handle_release","speech_translation_config_add_target_language","speech_translation_config_from_authorization_token","speech_translation_config_from_endpoint","speech_translation_config_from_host","speech_translation_config_from_subscription","speech_translation_config_remove_target_language","strtoimax","strtoumax","synth_result_get_audio_data","synth_result_get_audio_format","synth_result_get_audio_length_duration","synth_result_get_canceled_error_code","synth_result_get_property_bag","synth_result_get_reason","synth_result_get_reason_canceled","synth_result_get_result_id","synthesis_voices_result_get_property_bag","synthesis_voices_result_get_reason","synthesis_voices_result_get_result_id","synthesis_voices_result_get_voice_info","synthesis_voices_result_get_voice_num","synthesizer_async_handle_is_valid","synthesizer_async_handle_release","synthesizer_bookmark_event_get_values","synthesizer_bookmark_reached_set_callback","synthesizer_canceled_set_callback","synthesizer_completed_set_callback","synthesizer_connection_connected_set_callback","synthesizer_connection_disconnected_set_callback","synthesizer_create_speech_synthesizer_from_auto_detect_source_lang_config","synthesizer_create_speech_synthesizer_from_config","synthesizer_disable","synthesizer_enable","synthesizer_event_get_text","synthesizer_event_handle_is_valid","synthesizer_event_handle_release","synthesizer_get_property_bag","synthesizer_get_voices_list","synthesizer_get_voices_list_async","synthesizer_get_voices_list_async_wait_for","synthesizer_handle_is_valid","synthesizer_handle_release","synthesizer_is_enabled","synthesizer_result_handle_is_valid","synthesizer_result_handle_release","synthesizer_speak_async_wait_for","synthesizer_speak_ssml","synthesizer_speak_ssml_async","synthesizer_speak_text","synthesizer_speak_text_async","synthesizer_start_speaking_ssml","synthesizer_start_speaking_ssml_async","synthesizer_start_speaking_text","synthesizer_start_speaking_text_async","synthesizer_started_set_callback","synthesizer_stop_speaking","synthesizer_stop_speaking_async","synthesizer_stop_speaking_async_wait_for","synthesizer_synthesis_event_get_result","synthesizer_synthesizing_set_callback","synthesizer_viseme_event_get_animation","synthesizer_viseme_event_get_values","synthesizer_viseme_received_set_callback","synthesizer_word_boundary_event_get_values","synthesizer_word_boundary_set_callback","targetLanguages","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transcriber_get_participants_list","translationTexts","translation_synthesis_result_get_audio_data","translation_text_result_get_translation_text_buffer_header","translator_add_target_language","translator_remove_target_language","translator_synthesizing_audio_set_callback","true_","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","user_create_from_id","user_get_id","user_release_handle","va_list","voice_info_get_local_name","voice_info_get_locale","voice_info_get_name","voice_info_get_property_bag","voice_info_get_short_name","voice_info_get_style_list","voice_info_get_voice_path","voice_info_get_voice_type","voice_info_handle_release","voice_profile_client_get_property_bag","voice_profile_client_release_handle","voice_profile_get_id","voice_profile_get_property_bag","voice_profile_get_type","voice_profile_release_handle","wchar_t","wcstoimax","wcstoumax","AudioDataStream","AutoDetectSourceLanguageConfig","CancellationDetails","EmbeddedSpeechConfig","KeywordRecognitionModel","RecognitionEvent","SessionEvent","SourceLanguageConfig","SpeechConfig","SpeechRecognitionCanceledEvent","SpeechRecognitionEvent","SpeechRecognitionResult","SpeechRecognizer","SpeechSynthesisBookmarkEvent","SpeechSynthesisEvent","SpeechSynthesisResult","SpeechSynthesisVisemeEvent","SpeechSynthesisWordBoundaryEvent","SpeechSynthesizer","SynthesisVoicesResult","VoiceInfo","animation","audio_data","audio_duration_ms","audio_offset","audio_offset","audio_offset","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary_type","can_read_data","can_read_data_at","config","duration","duration_ms","enable_audio_logging","enable_dictation","error_code","error_code","error_details","error_details","error_details","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_auth_token","from_auto_detect_source_lang_config","from_auto_detect_source_lang_config","from_config","from_config","from_embedded_config","from_endpoint","from_endpoint_with_subscription","from_file","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_handle","from_host","from_host_with_subscription","from_language","from_language_and_endpoint_id","from_language_configs","from_languages","from_open_range","from_path","from_paths","from_source_lang","from_source_lang_config","from_speech_synthesis_result","from_speech_synthesis_result","from_subscription","from_wav_file","get_auth_token","get_auth_token","get_auth_token","get_endpoint_id","get_endpoint_id","get_offset","get_output_format","get_property","get_property_by_string","get_region","get_speech_recognition_language","get_speech_recognition_model_name","get_speech_recognition_models","get_speech_recognition_output_format","get_speech_synthesis_language","get_speech_synthesis_output_format","get_speech_synthesis_output_format","get_speech_synthesis_voice_name","get_speech_synthesis_voice_name","get_status","get_subscription_key","get_voices_async","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","local_name","locale","name","offset","offset","properties","properties","properties","properties","properties","properties","properties","read","read_at","reason","reason","reason","reason","reason","recognize_once_async","request_word_level_timestamps","result","result","result_id","result_id","result_id","save_wav_file_async","session_id","set_auth_token","set_auth_token","set_auth_token","set_canceled_cb","set_endpoint_id","set_get_output_format","set_get_speech_synthesis_language","set_get_speech_synthesis_output_format","set_get_speech_synthesis_voice_name","set_offset","set_profanity","set_profanity_option","set_property","set_property_by_string","set_proxy","set_proxy_with_usrname_and_pwd","set_recognized_cb","set_recognizing_cb","set_service_property","set_session_started_cb","set_session_stopped_cb","set_speech_end_detected_cb","set_speech_recognition_language","set_speech_recognition_model","set_speech_recognition_output_format","set_speech_start_detected_cb","set_speech_synthesis_output_format","set_speech_synthesis_voice","set_synthesizer_bookmark_cb","set_synthesizer_canceled_cb","set_synthesizer_completed_cb","set_synthesizer_started_cb","set_synthesizer_synthesizing_cb","set_synthesizer_viseme_cb","set_synthesizer_word_boundary_cb","short_name","speak_ssml_async","speak_text_async","start_continuous_recognition_async","start_keyword_recognition_async","start_speaking_ssml_async","start_speaking_text_async","stop_continuous_recognition_async","stop_keyword_recognition_async","stop_speaking_async","style_list","text","text","text_offset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","viseme_id","voice_path","voice_type","voices","word_length"],"q":["cognitive_services_speech_sdk_rs","","","","","","cognitive_services_speech_sdk_rs::audio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cognitive_services_speech_sdk_rs::commoncognitive_services_speech_sdk_rs::dialog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cognitive_services_speech_sdk_rs::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cognitive_services_speech_sdk_rs::error::ErrorRootCause","","","","","cognitive_services_speech_sdk_rs::fficognitive_services_speech_sdk_rs::speechd":["Package audio provides the audio configuration, …","Package common contains the definitions for many of the …","Package dialog provides functionality for creating custom …","Package error contains struct Error used to wrap library …","Package ffi contains bindings to underlying C API and thin …","Package speech provides functionality for speech …","","Currently not supported","Currently not supported","AudioConfig represents specific audio configuration, such …","Abstraction over audio input push &amp; pull streams. Enables …","Abstraction over audio output push &amp; pull streams. Enables …","AudioStreamContainerFormat defines supported audio stream …","AudioStreamFormat represents the audio stream format used …","","","","","PullAudioInputStream represents audio input stream with …","This trait that must be implemented by callback struct …","PullAudioOutputStream represents audio output stream with …","PushAudioInputStream represents audio input stream with …","PushAudioOutputStream represents audio output stream with …","This trait that must be implemented by callback struct …","","","","","","","","","","","","","","","Closes underlying resources of struct implementing this …","Closes underlying resources of struct implementing this …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","GetCompressedFormat creates an audio stream format object …","GetDefaultInputFormat creates an audio stream format …","GetDefaultOutputFormat creates an audio stream format …","","","","","","","retrieves specific property related to read audio frame …","","","GetWaveFormatPCM creates an audio stream format object …","","","","Smart handle wrapping underlying SPXAUDIOSTREAMFORMATHANDLE","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Reads (pulls) data from this audio stream instance …","Read reads audio from the stream. The maximal number of …","Registers callbacks for speech recognizer. Callback for …","Registers callbacks for speech synthetizer.","","","","","Converts enum instance to respective u32 value.","","","","","","","","","","","","","","","","","","","","","","called by synthetizer when new data are synthetized …","","Audio16Khz128KBitRateMonoMp3 stands for …","audio-16khz-16bit-32kbps-mono-opus Audio compressed by …","Audio16Khz16KbpsMonoSiren stands for …","Audio16Khz32KBitRateMonoMp3 stands for …","Audio16Khz64KBitRateMonoMp3 stands for …","Audio24Khz160KBitRateMonoMp3 stands for …","audio-24khz-16bit-24kbps-mono-opus Audio compressed by …","audio-24khz-16bit-48kbps-mono-opus Audio compressed by …","Audio24Khz48KBitRateMonoMp3 stands for …","Audio24Khz96KBitRateMonoMp3 stands for …","Audio48Khz192KBitRateMonoMp3 stands for …","Audio48Khz96KBitRateMonoMp3 stands for …","AudioConfigAudioSource is the audio source. Allowed values …","AudioConfigBitsPerSampleForCapture is the number of bits …","AudioConfigDeviceNameForCapture is the device name for …","you shouldn’t have to use this property directly. …","AudioConfigNumberOfChannelsForCapture is the number of …","AudioConfigPlaybackBufferLengthInMs indicates the playback …","AudioConfigSampleRateForCapture is the sample rate (in Hz) …","Indicates an authentication error. An authentication error …","Indicates that one or more recognition parameters are …","Canceled indicates that the recognition was canceled. More …","CancellationDetailsReason is the cancellation reason. …","CancellationDetailsReasonDetailedText is the cancellation …","CancellationDetailsReasonText the cancellation text. …","CancellationErrorCode defines error code in case that …","CancellationReason defines the possible reasons a …","Indicates that request was cancelled by the user.","Indicates a connection error.","ConversationApplicationID is the identifier used to …","ConversationConversationID is the ConversationId for the …","ConversationCustomVoiceDeploymentIDs is a comma separated …","ConversationDialogType is the type of dialog backend to …","ConversationFromID is the FromId to be used on speech …","ConversationInitialSilenceTimeout is the silence timeout …","ConversationSpeechActivityTemplate is use to stamp …","DataBufferTimeStamp is the time stamp associated to data …","DataBufferUserID is the user id associated to data buffer …","Detailed output format","Indicates that the end of the audio stream was reached.","Indicates that an error occurred during speech recognition.","Indicates that the free subscription used by the request …","LanguageUnderstandingServiceResponseJSONResult is the …","Masked profanity option.","No error. If CancellationReason is EndOfStream, …","NoMatch indicates speech could not be recognized. More …","OfflineNeural indicates offline neural voice.","OfflineStandard indicates offline started voice.","Ogg16Khz16BitMonoOpus stands for ogg-16khz-16bit-mono-opus","Ogg24Khz16BitMonoOpus stands for ogg-24khz-16bit-mono-opus","Ogg48Khz16BitMonoOpus stands for ogg-48khz-16bit-mono-opus","OnlineNeural indicates online neural voice.","OnlineStandard indicates online standard voice.","OutputFormat Defines output formats","ProfanityOption defines the profanity option.","PropertyCollection is a class to retrieve or set a …","PropertyID defines speech property ids.","PunctuationBoundary indicates punctuation boundary.","Raw profanity option","Raw16Khz16BitMonoPcm stands for raw-16khz-16bit-mono-pcm","Raw16Khz16BitMonoTrueSilk stands for …","raw-22050hz-16bit-mono-pcm Raw PCM audio at 22050Hz …","Raw24Khz16BitMonoPcm stands for raw-24khz-16bit-mono-pcm","Raw24Khz16BitMonoTrueSilk stands for …","raw-44100hz-16bit-mono-pcm Raw PCM audio at 44100Hz …","Raw48Khz16BitMonoPcm stands for raw-48khz-16bit-mono-pcm","Raw8Khz16BitMonoPcm stands for raw-8khz-16bit-mono-pcm","Raw8Khz8BitMonoALaw stands for raw-8khz-8bit-mono-alaw","Raw8Khz8BitMonoMULaw stands for raw-8khz-8bit-mono-mulaw","RecognizedIntent indicates the intent result contains …","RecognizedKeyword indicates that keyword recognition …","RecognizedSpeech indicates the speech result contains …","RecognizingIntent indicates the intent result contains …","RecognizingKeyword indicates the speech result contains …","RecognizingSpeech indicates the speech result contains …","Removed profanity option","ResultReason specifies the possible reasons a recognition …","Riff16Khz16BitMonoPcm stands for riff-16khz-16bit-mono-pcm","Riff16Khz16KbpsMonoSiren stands for …","riff-22050hz-16bit-mono-pcm PCM audio at 22050Hz sampling …","Riff24Khz16BitMonoPcm stands for riff-24khz-16bit-mono-pcm","riff-44100hz-16bit-mono-pcm PCM audio at 44100Hz sampling …","Riff48Khz16BitMonoPcm stands for riff-48khz-16bit-mono-pcm","Riff8Khz16BitMonoPcm stands for riff-8khz-16bit-mono-pcm","Riff8Khz8BitMonoALaw stands for riff-8khz-8bit-mono-alaw","Riff8Khz8BitMonoMULaw stands for riff-8khz-8bit-mono-mulaw","Indicates an unexpected runtime error.","SentenceBoundary indicates sentence boundary.","Indicates that an error is returned by the service.","ServicePropertyChannel defines channels used to pass …","Indicates a time-out error when waiting for response from …","Indicates that the service is currently unavailable.","Simple output format","SpeechLogFilename is the file name to write logs.","SpeechServiceAuthorizationToken is the Cognitive Services …","","SpeechServiceConnectionEnableAudioLogging is a boolean …","SpeechServiceConnectionEndSilenceTimeoutMs is the end …","SpeechServiceConnectionEndpoint is the Cognitive Services …","SpeechServiceConnectionEndpointID is the Cognitive …","SpeechServiceConnectionHost is the Cognitive Services …","SpeechServiceConnectionInitialSilenceTimeoutMs is the …","SpeechServiceConnectionIntentRegion is the Language …","SpeechServiceConnectionKey is the Cognitive Services …","SpeechServiceConnectionProxyHostName is the host name of …","SpeechServiceConnectionProxyPassword is the password of …","SpeechServiceConnectionProxyPort is the port of the proxy …","SpeechServiceConnectionProxyUserName is the user name of …","SpeechServiceConnectionRecoLanguage is the spoken language …","SpeechServiceConnectionRecoMode is the Cognitive Services …","The decryption key of the model to be used for speech …","The name of the model to be used for speech recognition. …","SpeechServiceConnectionRegion is the Cognitive Services …","…","","The decryption key of the voice to be used for speech …","The name of the offline TTS voice to be used for speech …","SpeechServiceConnectionSynthOutputFormat is the string to …","SpeechServiceConnectionSynthVoice is the name of the TTS …","SpeechServiceConnectionTranslationFeatures is the …","SpeechServiceConnectionTranslationToLanguages is the list …","SpeechServiceConnectionTranslationVoice is the name of the …","SpeechServiceConnectionURL is the URL string built from …","SpeechServiceConnectionUserDefinedQueryParameters are the …","SpeechServiceResponseJSONErrorDetails is the Cognitive …","SpeechServiceResponseJSONResult is the Cognitive Services …","SpeechServiceResponseOutputFormatOption is a string value …","SpeechServiceResponsePostProcessingOption a string value …","SpeechServiceResponseProfanityOption is the requested …","SpeechServiceResponseRecognitionLatencyMs is the …","SpeechServiceResponseRequestDetailedResultTrueFalse the …","SpeechServiceResponseRequestProfanityFilterTrueFalse is …","SpeechServiceResponseRequestWordLevelTimestamps is a …","SpeechServiceResponseStablePartialResultThreshold is the …","SpeechServiceResponseSynthesisBackend indicates which …","SpeechServiceResponseSynthesisFinishLatencyMs is the …","SpeechServiceResponseSynthesisFirstByteLatencyMs is the …","SpeechServiceResponseSynthesisUnderrunTimeMs is the …","SpeechServiceResponseTranslationRequestStablePartialResult …","SpeechSessionID is the session id. This id is a …","SpeechSynthesisBoundaryType defines the boundary type of …","SpeechSynthesisOutputFormat defines the possible speech …","StreamStatus defines the possible status of audio data …","StreamStatusAllData indicates the audio data stream …","StreamStatusCanceled indicates the audio data stream was …","StreamStatusNoData indicates that the audio data stream …","StreamStatusNoData indicates that the audio data stream …","StreamStatusUnknown indicates the audio data stream status …","SynthesisVoiceType defines the type of a synthesis voice.","SynthesizingAudio indicates the synthesized audio result …","SynthesizingAudioCompleted indicates the synthesized audio …","SynthesizingAudioStarted indicates the speech synthesis is …","Indicates that the number of parallel requests exceeded …","TranslatedSpeech indicates the translation result contains …","TranslatingSpeech indicates the translation result …","URIQueryParameter uses URI query parameter to pass …","VoicesListRetrieved indicates the voices list has been …","Webm16Khz16BitMonoOpus stands for …","webm-24khz-16bit-24kbps-mono-opus Audio compressed by OPUS …","Webm24Khz16BitMonoOpus stands for …","WordBoundary indicates word boundary.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a PropertyCollection from a handle (for internal …","","","","","","","Returns value of a property. If the property value is not …","Returns value of a property. If the property value is not …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","SetProperty sets the value of a property.","SetProperty sets the value of a property.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Event passed into callback registered by …","BotFrameworkConfig defines configurations for the dialog …","CustomCommandsConfig defines configurations for the dialog …","DialogServiceConfig defines base configurations for the …","DialogServiceConnector connects to a speech enabled dialog …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a bot framework service config instance with the …","Creates a Custom Commands config instance with the …","Creates a bot framework service config instance with the …","NewDialogServiceConnectorFromConfig creates a dialog …","","NewBotFrameworkConfigFromSubscription creates a bot …","Creates a Custom Commands config instance with the …","NewBotFrameworkConfigFromSubscriptionAndBotID creates a …","Gets the corresponding backend application identifier.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","ListenOnceAsync starts a listening session that will …","","Sends an activity to the backing dialog.","","Sets the corresponding backend application identifier.","Sets the authorization token that will be used for …","","SetLanguage sets the input language to the connector. The …","SetLanguage sets the input language to the connector. The …","","","","","","","","","","","","","","","Sets the speech activity template. It is used to stamp …","StartKeywordRecognitionAsync initiates keyword recognition.","StopKeywordRecognitionAsync stops keyword recognition.","","","","","","","","","","","","","","Error struct represents error than can occur during …","Enumeration of error root causes. Where appropriate it …","","","","Convenience type so that we can use <em>Result&lt;T&gt;</em> instead of …","","","Returns description based on API error code.","","","","","","Converts underlying C API error represented by error code …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates new error from custom message and underlying root …","","","","","","","","","","","","The AUDIO_ENCODER_ONENCODEDDATA type represents an …he SPX_CODEC_CLIENT_GET_PROPERTY represents the function …","","","Wrapper struct around underlying native handles Apart from …reates a codec object. This method needs to be exported …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Destroys the encoder. The codec object should not be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes raw PCM data. @param codec codec object returned …","Terminate the encoded stream immediately @param codec …","","","","","","","Flushes the encoder. @param codec codec object returned by …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","@param codec codec object returned by the codec_create …","","","","","","","","","","","","","","","@param codec codec Object returned by the codec_create …","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeudioDataStream represents audio data retrieved either …","AutoDetectSourceLanguageConfig defines auto detection …","CancellationDetails contains detailed information about …","Class that defines embedded (offline) configurations for …","KeywordRecognitionModel represents the keyword recognition …","Recognition event extending <em>SessionEvent</em> passed into …","Base <em>SpeechRecognizer</em> event passed into callbacks …","","SpeechConfig is the class that defines configurations for …","Recognition event extending <em>SpeechRecognitionEvent</em> passed …","Recognition event extending <em>RecognitionEvent</em> passed into …","Represents speech recognition result contained within …","SpeechRecognizer struct holds functionality for …","Event passed into speech synthetizer’s callback …","Event passed into speech synthetizer callbacks.","Represents speech synthetis result contained in …","Event passed into speech synthetizer’s callback …","Event passed into speech synthetizer’s callback …","SpeechSynthesizer struct holds functionality for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables dictation mode. Only supported in speech …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an instance of the speech config with specified …","","","","","","Creates an instance of SpeechConfig with specified …","and subscription. This method is intended only for users …","","","","","","Creates a SpeechConfig instance from a valid handle. This …","","","","","","","","","Creates an instance of SpeechConfig with specified host. …","Creates an instance of the speech config with specified …","","","Creates an instance of the AutoDetectSourceLanguageConfig …","Creates an instance of the AutoDetectSourceLanguageConfig …","Creates an instance of the AutoDetectSourceLanguageConfig …","Creates an instance of the embedded speech config with a …","Creates an instance of the embedded speech config with …","","","","","Creates an instance of the speech config with specified …","","","","Authorization token to connect to the service.","","","","","","","Region key that used to create Speech Recognizer or Intent …","Gets input language to the speech recognition. The …","Gets the model name for speech recognition.","Gets a list of available speech recognition models.","Gets the speech recognition output format.","","Gets the speech synthesis output format.","","Gets the voice name for embedded speech synthesis.","","","Subscription key that is used to create Speech Recognizer …","Gets the available voices, asynchronously. The parameter …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Read reads a chunk of the audio data stream and fill it to …","ReadAt reads a chunk of the audio data stream and fill it …","","","","","","Starts speech recognition, and returns after a single …","Includes word-level timestamps in response result.","","","","","","","","Sets the authorization token that will be used for …","Sets the authorization token that will be used for …","Sets the authorization token to connect to the service. …","Canceled signals for events containing canceled …","","","","","","","Sets the profanity option. This can be used to remove …","","","","Sets proxy configuration Note: Proxy functionality is not …","Sets proxy configuration with username and password Note: …","","","","","","","","Sets the model for speech recognition.","Sets the speech recognition output format.","","Sets the speech synthesis output format (e.g. …","","","","","","","","","","Executes the speech synthesis on SSML, asynchronously.","Executes the speech synthesis on plain text, …","Asynchronously initiates continuous speech recognition …","Asynchronously initiates keyword recognition operation.","Starts the speech synthesis on SSML, asynchronously. It …","Starts the speech synthesis on plain text, asynchronously. …","Asynchronously terminates ongoing continuous speech …","Asynchronously terminates keyword recognition operation.","Stops the speech synthesis, asynchronously. It stops audio …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,2,3,4,1,5,6,7,2,3,4,1,5,6,7,8,9,7,6,3,7,7,2,3,4,1,5,6,7,2,3,4,1,5,6,7,2,4,4,2,3,6,4,4,4,4,4,4,5,5,5,10,11,2,3,6,7,8,4,4,5,2,3,4,5,6,7,2,3,4,1,5,6,7,4,8,6,2,3,4,7,7,4,1,2,3,4,1,5,6,7,2,3,4,1,5,6,7,2,3,4,1,5,6,7,9,7,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,15,13,13,13,0,0,16,14,13,13,13,13,13,13,13,13,13,17,16,16,14,13,18,14,15,19,19,12,12,12,19,19,0,0,0,0,20,18,12,12,12,12,12,12,12,12,12,12,15,15,15,15,15,15,18,0,12,12,12,12,12,12,12,12,12,14,20,14,0,14,14,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,21,21,21,21,21,0,15,15,15,14,15,15,22,15,12,12,12,20,13,14,16,17,18,23,15,22,20,12,21,19,13,14,16,17,18,23,15,22,20,12,21,19,14,16,17,18,23,15,22,20,12,21,19,13,14,16,17,18,23,15,22,20,12,21,19,23,14,16,15,20,21,19,23,23,23,13,14,16,17,18,23,15,22,20,12,21,19,23,23,13,13,14,16,17,18,23,15,22,20,12,21,19,13,14,16,17,18,23,15,22,20,12,21,19,13,14,16,17,18,23,15,22,20,12,21,19,0,0,0,0,0,24,25,24,26,27,25,24,26,27,26,27,25,25,25,24,26,27,25,24,26,27,26,27,26,25,24,26,27,26,27,24,25,28,26,27,28,28,28,28,28,28,25,28,26,27,25,24,24,25,24,26,27,25,25,25,25,27,25,25,28,28,28,28,28,28,28,28,28,28,25,25,28,28,25,25,25,25,25,25,24,26,27,25,24,26,27,25,24,26,27,29,0,0,29,29,29,0,29,29,30,29,30,29,30,30,0,29,30,29,30,30,30,30,30,29,30,30,30,29,30,29,30,29,30,31,32,33,34,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,37,38,40,41,42,36,39,43,44,45,37,38,40,41,42,36,39,43,44,45,0,0,42,0,0,37,38,40,41,42,36,39,43,44,37,38,40,41,42,36,39,43,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,43,43,0,0,0,0,0,0,43,37,38,40,41,42,36,39,43,44,45,45,44,37,38,40,41,42,36,39,43,44,45,0,43,0,44,0,0,0,0,0,0,0,0,0,0,0,0,43,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,38,40,41,42,36,39,43,44,45,0,0,0,0,0,0,0,0,0,0,39,39,42,39,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,37,38,40,41,42,36,39,43,44,45,0,42,0,0,0,0,0,0,37,38,40,41,42,36,39,43,44,45,37,38,40,41,42,36,39,43,44,45,37,38,40,41,42,36,39,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,47,48,46,49,50,51,52,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,49,57,57,60,54,49,63,63,59,51,59,51,65,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,53,54,55,47,56,57,58,59,60,61,50,62,63,63,51,52,48,64,46,49,65,66,63,55,56,55,56,55,63,63,61,53,54,47,50,63,51,52,48,64,46,49,65,66,63,63,62,62,58,58,58,60,60,55,55,57,59,63,57,55,56,63,55,63,57,63,63,63,63,63,60,60,60,63,60,63,60,63,57,63,56,53,54,47,57,58,61,62,63,48,64,46,49,65,66,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,66,66,66,54,50,54,47,57,58,62,65,66,57,57,54,47,59,51,65,55,63,52,64,54,47,65,57,53,55,56,63,55,63,63,63,63,63,57,60,63,63,63,63,63,55,55,63,55,55,55,63,60,60,55,60,60,56,56,56,56,56,56,56,66,56,56,55,55,56,56,55,55,56,66,54,48,49,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,53,54,55,47,56,57,58,59,60,61,50,62,63,51,52,48,64,46,49,65,66,46,66,66,65,49],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["pushaudioinputstream",3]],["result",6]],[[],["result",6,[["pullaudiooutputstream",3]]]],[[],["result",6,[["pushaudiooutputstream",3]]]],[[],["result",6,[["pushaudioinputstream",3]]]],[[["audiostreamformat",3]],["result",6,[["pushaudioinputstream",3]]]],[[["pullaudioinputstream",3],["formatter",3]],["result",6]],[[["pushaudiooutputstream",3],["formatter",3]],["result",6]],[[["audioconfig",3],["formatter",3]],["result",6]],[[["audiostreamcontainerformat",4],["formatter",3]],["result",6]],[[["audiostreamformat",3],["formatter",3]],["result",6]],[[["pullaudiooutputstream",3],["formatter",3]],["result",6]],[[["pushaudioinputstream",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6,[["pullaudioinputstream",3]]]],[[],["result",6,[["audioconfig",3]]]],[[],["result",6,[["audioconfig",3]]]],[[["audiostreamformat",3]],["result",6,[["pullaudioinputstream",3]]]],[[["spxaudiostreamhandle",6]],["result",6,[["pushaudiooutputstream",3]]]],[[["spxaudiostreamhandle",6]],["result",6,[["pullaudiooutputstream",3]]]],[[["str",0]],["result",6,[["audioconfig",3]]]],[[["str",0]],["result",6,[["audioconfig",3]]]],[[["audioinputstream",8]],["result",6,[["audioconfig",3]]]],[[["audiooutputstream",8]],["result",6,[["audioconfig",3]]]],[[["str",0]],["result",6,[["audioconfig",3]]]],[[["str",0]],["result",6,[["audioconfig",3]]]],[[["audiostreamcontainerformat",4]],["result",6,[["audiostreamformat",3]]]],[[],["result",6,[["audiostreamformat",3]]]],[[],["result",6,[["audiostreamformat",3]]]],[[["",0]],["spxaudiostreamhandle",6]],[[["",0]],["spxaudiostreamhandle",6]],[[["pullaudioinputstream",3]],["spxaudiostreamhandle",6]],[[["pushaudiooutputstream",3]],["spxaudiostreamhandle",6]],[[["pullaudiooutputstream",3]],["spxaudiostreamhandle",6]],[[["pushaudioinputstream",3]],["spxaudiostreamhandle",6]],[[["",0],["i32",0]],["result",6,[["string",3]]]],[[["audioconfig",3],["propertyid",4]],["result",6,[["string",3]]]],[[["audioconfig",3],["str",0]],["result",6,[["string",3]]]],[[["u32",0],["option",4,[["u8",0]]],["option",4,[["u8",0]]]],["result",6,[["audiostreamformat",3]]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["u32",0]],[[["pullaudiooutputstream",3],["u32",0]],["result",6,[["vec",3,[["u8",0]]]]]],[[["pullaudioinputstream",3],["box",3,[["pullaudioinputstreamcallbacks",8]]],["bool",0]],["result",6]],[[["pushaudiooutputstream",3],["box",3,[["pushaudiooutputstreamcallbacks",8]]]],["result",6]],[[["audioconfig",3],["propertyid",4],["str",0]],["result",6]],[[["pushaudioinputstream",3],["propertyid",4],["string",3]],["result",6]],[[["pushaudioinputstream",3],["string",3],["string",3]],["result",6]],[[["audioconfig",3],["str",0],["str",0]],["result",6]],[[["audiostreamcontainerformat",4]],["u32",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u32",0]],[[["pushaudioinputstream",3],["asref",8]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cancellationerrorcode",4],["formatter",3]],["result",6]],[[["cancellationreason",4],["formatter",3]],["result",6]],[[["outputformat",4],["formatter",3]],["result",6]],[[["profanityoption",4],["formatter",3]],["result",6]],[[["propertycollection",3],["formatter",3]],["result",6]],[[["resultreason",4],["formatter",3]],["result",6]],[[["servicepropertychannel",4],["formatter",3]],["result",6]],[[["speechsynthesisboundarytype",4],["formatter",3]],["result",6]],[[["speechsynthesisoutputformat",4],["formatter",3]],["result",6]],[[["streamstatus",4],["formatter",3]],["result",6]],[[["synthesisvoicetype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["spxpropertybaghandle",6]],["propertycollection",3]],[[["u32",0]],["cancellationerrorcode",4]],[[["u32",0]],["cancellationreason",4]],[[["u32",0]],["resultreason",4]],[[["u32",0]],["speechsynthesisboundarytype",4]],[[["u32",0]],["streamstatus",4]],[[["u32",0]],["synthesisvoicetype",4]],[[["propertycollection",3],["propertyid",4]],["result",6,[["string",3]]]],[[["propertycollection",3]],["result",6,[["string",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["propertycollection",3],["propertyid",4]],["result",6]],[[["propertycollection",3]],["result",6]],[[["propertyid",4]],["i32",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["dialogserviceconnector",3]],["future",8]],[[["dialogserviceconnector",3]],["future",8]],[[["dialogserviceconnector",3],["formatter",3]],["result",6]],[[["activityreceivedevent",3],["formatter",3]],["result",6]],[[["botframeworkconfig",3],["formatter",3]],["result",6]],[[["customcommandsconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",6,[["botframeworkconfig",3]]]],[[],["result",6,[["customcommandsconfig",3]]]],[[],["result",6,[["botframeworkconfig",3]]]],[[["dialogserviceconfig",8],["option",4,[["audioconfig",3]]]],["result",6,[["dialogserviceconnector",3]]]],[[["spxeventhandle",6]],["result",6,[["activityreceivedevent",3]]]],[[],["result",6,[["botframeworkconfig",3]]]],[[],["result",6,[["customcommandsconfig",3]]]],[[],["result",6,[["botframeworkconfig",3]]]],[[["customcommandsconfig",3]],["result",6,[["string",3]]]],[[["activityreceivedevent",3]],["result",6,[["pullaudiooutputstream",3]]]],[[["dialogserviceconnector",3]],["result",6,[["string",3]]]],[[["",0]],["spxspeechconfighandle",6]],[[["botframeworkconfig",3]],["spxspeechconfighandle",6]],[[["customcommandsconfig",3]],["spxspeechconfighandle",6]],[[["",0]],["result",6,[["string",3]]]],[[["",0]],["result",6,[["string",3]]]],[[["",0],["propertyid",4]],["result",6,[["string",3]]]],[[["",0],["propertyid",4]],["result",6,[["string",3]]]],[[["",0],["string",3]],["result",6,[["string",3]]]],[[["",0],["string",3]],["result",6,[["string",3]]]],[[["dialogserviceconnector",3]],["result",6,[["string",3]]]],[[["",0]],["speechconfig",3]],[[["botframeworkconfig",3]],["speechconfig",3]],[[["customcommandsconfig",3]],["speechconfig",3]],null,null,[[["activityreceivedevent",3]],["bool",0]],[[]],[[]],[[]],[[]],[[["dialogserviceconnector",3]],["future",8]],null,[[["dialogserviceconnector",3],["string",3]],["future",8]],[[["dialogserviceconnector",3]],["result",6]],[[["customcommandsconfig",3],["string",3]],["result",6]],[[["dialogserviceconnector",3],["string",3]],["result",6]],[[["dialogserviceconnector",3]],["result",6]],[[["",0],["string",3]],["result",6]],[[["",0],["string",3]],["result",6]],[[["",0],["propertyid",4],["string",3]],["result",6]],[[["",0],["propertyid",4],["string",3]],["result",6]],[[["",0],["string",3],["string",3]],["result",6]],[[["",0],["string",3],["string",3]],["result",6]],[[["",0],["string",3],["u64",0]],["result",6]],[[["",0],["string",3],["u64",0]],["result",6]],[[["",0],["string",3],["u64",0],["string",3],["string",3]],["result",6]],[[["",0],["string",3],["u64",0],["string",3],["string",3]],["result",6]],[[["dialogserviceconnector",3]],["result",6]],[[["dialogserviceconnector",3]],["result",6]],[[["",0],["string",3],["string",3],["servicepropertychannel",4]],["result",6]],[[["",0],["string",3],["string",3],["servicepropertychannel",4]],["result",6]],[[["dialogserviceconnector",3]],["result",6]],[[["dialogserviceconnector",3]],["result",6]],[[["dialogserviceconnector",3],["string",3]],["result",6]],[[["dialogserviceconnector",3],["keywordrecognitionmodel",3]],["future",8]],[[["dialogserviceconnector",3]],["future",8]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["errorrootcause",4]],["option",4,[["string",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0],["str",0]],["result",6]],[[["errorrootcause",4],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[]],[[]],[[["fromutf8error",3]],["error",3]],[[["tryfrominterror",3]],["error",3]],[[["nulerror",6]],["error",3]],[[["utf8error",3]],["error",3]],[[]],[[]],null,[[["string",3],["errorrootcause",4]],["error",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,[[["max_align_t",3]],["max_align_t",3]],[[["__fsid_t",3]],["__fsid_t",3]],[[["imaxdiv_t",3]],["imaxdiv_t",3]],[[["_azac_empty",3]],["_azac_empty",3]],[[["_result_translationtextbufferheader",3]],["_result_translationtextbufferheader",3]],[[["audioprocessingoptions_microphonecoordinates",3]],["audioprocessingoptions_microphonecoordinates",3]],[[["audioprocessingoptions_microphonearraygeometry",3]],["audioprocessingoptions_microphonearraygeometry",3]],[[["codec_c_interface",3]],["codec_c_interface",3]],[[["__va_list_tag",3]],["__va_list_tag",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0],["",26,[["copy",8],["debug",8]]]],["smarthandle",3,[["",26,[["copy",8],["debug",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["smarthandle",3,[["",26,[["copy",8],["debug",8]]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["max_align_t",3],["formatter",3]],["result",6]],[[["__fsid_t",3],["formatter",3]],["result",6]],[[["imaxdiv_t",3],["formatter",3]],["result",6]],[[["_azac_empty",3],["formatter",3]],["result",6]],[[["_result_translationtextbufferheader",3],["formatter",3]],["result",6]],[[["audioprocessingoptions_microphonecoordinates",3],["formatter",3]],["result",6]],[[["audioprocessingoptions_microphonearraygeometry",3],["formatter",3]],["result",6]],[[["codec_c_interface",3],["formatter",3]],["result",6]],[[["__va_list_tag",3],["formatter",3]],["result",6]],[[["smarthandle",3,[["",26,[["debug",8],["copy",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["smarthandle",3,[["",26,[["copy",8],["debug",8]]]]],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["smarthandle",3,[["",26,[["copy",8],["debug",8]]]]]],["",26,[["copy",8],["debug",8]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,[[["audiodatastream",3],["u32",0]],["bool",0]],[[["audiodatastream",3],["u32",0],["u32",0]],["bool",0]],null,null,null,[[["speechconfig",3]],["result",6]],[[["speechconfig",3]],["result",6]],null,null,null,null,null,[[["sessionevent",3],["formatter",3]],["result",6]],[[["speechrecognitionresult",3],["formatter",3]],["result",6]],[[["speechrecognizer",3],["formatter",3]],["result",6]],[[["speechsynthesisresult",3],["formatter",3]],["result",6]],[[["speechsynthesizer",3],["formatter",3]],["result",6]],[[["audiodatastream",3],["formatter",3]],["result",6]],[[["autodetectsourcelanguageconfig",3],["formatter",3]],["result",6]],[[["cancellationdetails",3],["formatter",3]],["result",6]],[[["embeddedspeechconfig",3],["formatter",3]],["result",6]],[[["keywordrecognitionmodel",3],["formatter",3]],["result",6]],[[["recognitionevent",3],["formatter",3]],["result",6]],[[["sourcelanguageconfig",3],["formatter",3]],["result",6]],[[["speechconfig",3],["formatter",3]],["result",6]],[[["speechrecognitioncanceledevent",3],["formatter",3]],["result",6]],[[["speechrecognitionevent",3],["formatter",3]],["result",6]],[[["speechsynthesisbookmarkevent",3],["formatter",3]],["result",6]],[[["speechsynthesisevent",3],["formatter",3]],["result",6]],[[["speechsynthesisvisemeevent",3],["formatter",3]],["result",6]],[[["speechsynthesiswordboundaryevent",3],["formatter",3]],["result",6]],[[["synthesisvoicesresult",3],["formatter",3]],["result",6]],[[["voiceinfo",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["embeddedspeechconfig",3]],["speechconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6,[["speechconfig",3]]]],[[["speechconfig",3],["audioconfig",3],["autodetectsourcelanguageconfig",3]],["result",6,[["speechrecognizer",3]]]],[[["speechconfig",3],["audioconfig",3],["autodetectsourcelanguageconfig",3]],["result",6,[["speechsynthesizer",3]]]],[[["speechconfig",3],["audioconfig",3]],["result",6,[["speechrecognizer",3]]]],[[["speechconfig",3],["audioconfig",3]],["result",6,[["speechsynthesizer",3]]]],[[["embeddedspeechconfig",3],["audioconfig",3]],["result",6,[["speechrecognizer",3]]]],[[],["result",6,[["speechconfig",3]]]],[[],["result",6,[["speechconfig",3]]]],[[["str",0]],["result",6,[["keywordrecognitionmodel",3]]]],[[["spxeventhandle",6]],["result",6,[["sessionevent",3]]]],[[["spxresulthandle",6]],["result",6,[["speechrecognitionresult",3]]]],[[["spxresulthandle",6]],["result",6,[["speechsynthesisresult",3]]]],[[["spxeventhandle",6]],["result",6,[["recognitionevent",3]]]],[[["spxhandle",6]],["result",6,[["speechconfig",3]]]],[[["spxeventhandle",6]],["result",6,[["speechrecognitioncanceledevent",3]]]],[[["spxeventhandle",6]],["result",6,[["speechrecognitionevent",3]]]],[[["spxeventhandle",6]],["result",6,[["speechsynthesisbookmarkevent",3]]]],[[["spxeventhandle",6]],["result",6,[["speechsynthesisevent",3]]]],[[["spxeventhandle",6]],["result",6,[["speechsynthesisvisemeevent",3]]]],[[["spxeventhandle",6]],["result",6,[["speechsynthesiswordboundaryevent",3]]]],[[["spxresulthandle",6]],["result",6,[["synthesisvoicesresult",3]]]],[[["spxresulthandle",6]],["result",6,[["voiceinfo",3]]]],[[],["result",6,[["speechconfig",3]]]],[[],["result",6,[["speechconfig",3]]]],[[["str",0]],["result",6,[["sourcelanguageconfig",3]]]],[[["str",0],["str",0]],["result",6,[["sourcelanguageconfig",3]]]],[[["vec",3,[["sourcelanguageconfig",3]]]],["result",6,[["autodetectsourcelanguageconfig",3]]]],[[["vec",3,[["string",3]]]],["result",6,[["autodetectsourcelanguageconfig",3]]]],[[],["result",6,[["autodetectsourcelanguageconfig",3]]]],[[["asref",8,[["path",3]]]],["result",6,[["embeddedspeechconfig",3]]]],[[["vec",3,[["asref",8,[["path",3]]]]]],["result",6,[["embeddedspeechconfig",3]]]],[[["speechconfig",3],["audioconfig",3],["str",0]],["result",6,[["speechrecognizer",3]]]],[[["speechconfig",3],["audioconfig",3],["sourcelanguageconfig",3]],["result",6,[["speechrecognizer",3]]]],[[["speechsynthesisresult",3]],["result",6,[["audiodatastream",3]]]],[[["speechsynthesisresult",3]],["result",6,[["cancellationdetails",3]]]],[[],["result",6,[["speechconfig",3]]]],[[["str",0]],["result",6,[["audiodatastream",3]]]],[[["speechrecognizer",3]],["result",6,[["string",3]]]],[[["speechsynthesizer",3]],["result",6,[["string",3]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["speechrecognizer",3]],["result",6,[["string",3]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["audiodatastream",3]],["result",6,[["u32",0]]]],[[["speechconfig",3]],["result",6,[["outputformat",4]]]],[[["speechconfig",3],["propertyid",4]],["result",6,[["string",3]]]],[[["speechconfig",3],["string",3]],["result",6,[["string",3]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["embeddedspeechconfig",3]],["result",6,[["string",3]]]],[[["embeddedspeechconfig",3]],["result",6,[["vec",3,[["speechrecognitionmodel",3]]]]]],[[["embeddedspeechconfig",3]],["result",6,[["outputformat",4]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["embeddedspeechconfig",3]],["result",6,[["string",3]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["embeddedspeechconfig",3]],["result",6,[["string",3]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["audiodatastream",3]],["result",6,[["streamstatus",4]]]],[[["speechconfig",3]],["result",6,[["string",3]]]],[[["speechsynthesizer",3],["str",0]],["future",8]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["audiodatastream",3]],["result",6,[["u32",0]]]],[[["audiodatastream",3],["u32",0]],["result",6,[["u32",0]]]],null,null,null,null,null,[[["speechrecognizer",3]],["future",8]],[[["speechconfig",3]],["result",6]],null,null,null,null,null,[[["audiodatastream",3],["str",0]],["future",8]],null,[[["speechrecognizer",3],["str",0]],["result",6]],[[["speechsynthesizer",3],["str",0]],["result",6]],[[["speechconfig",3],["string",3]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["speechconfig",3],["string",3]],["result",6]],[[["speechconfig",3],["outputformat",4]],["result",6]],[[["speechconfig",3],["string",3]],["result",6]],[[["speechconfig",3],["string",3]],["result",6]],[[["speechconfig",3],["string",3]],["result",6]],[[["audiodatastream",3],["u32",0]],["result",6]],[[["embeddedspeechconfig",3],["profanityoption",4]],["result",6]],[[["speechconfig",3],["profanityoption",4]],["result",6]],[[["speechconfig",3],["propertyid",4],["string",3]],["result",6]],[[["speechconfig",3],["string",3],["string",3]],["result",6]],[[["speechconfig",3],["string",3],["u64",0]],["result",6]],[[["speechconfig",3],["string",3],["u64",0],["string",3],["string",3]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["speechconfig",3],["string",3],["string",3],["servicepropertychannel",4]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["speechconfig",3],["string",3]],["result",6]],[[["embeddedspeechconfig",3],["speechrecognitionmodel",3],["into",8,[["string",3]]]],["result",6]],[[["embeddedspeechconfig",3],["outputformat",4]],["result",6]],[[["speechrecognizer",3]],["result",6]],[[["embeddedspeechconfig",3],["into",8,[["string",3]]]],["result",6]],[[["embeddedspeechconfig",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],[[["speechsynthesizer",3]],["result",6]],null,[[["speechsynthesizer",3],["str",0]],["future",8]],[[["speechsynthesizer",3],["str",0]],["future",8]],[[["speechrecognizer",3]],["future",8]],[[["speechrecognizer",3],["keywordrecognitionmodel",3]],["future",8]],[[["speechsynthesizer",3],["str",0]],["future",8]],[[["speechsynthesizer",3],["str",0]],["future",8]],[[["speechrecognizer",3]],["future",8]],[[["speechrecognizer",3]],["future",8]],[[["speechsynthesizer",3]],["future",8]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null],"p":[[4,"AudioStreamContainerFormat"],[3,"PullAudioInputStream"],[3,"PushAudioOutputStream"],[3,"AudioConfig"],[3,"AudioStreamFormat"],[3,"PullAudioOutputStream"],[3,"PushAudioInputStream"],[8,"PullAudioInputStreamCallbacks"],[8,"PushAudioOutputStreamCallbacks"],[8,"AudioInputStream"],[8,"AudioOutputStream"],[4,"SpeechSynthesisOutputFormat"],[4,"PropertyId"],[4,"CancellationErrorCode"],[4,"ResultReason"],[4,"CancellationReason"],[4,"OutputFormat"],[4,"ProfanityOption"],[4,"SynthesisVoiceType"],[4,"SpeechSynthesisBoundaryType"],[4,"StreamStatus"],[4,"ServicePropertyChannel"],[3,"PropertyCollection"],[3,"ActivityReceivedEvent"],[3,"DialogServiceConnector"],[3,"BotFrameworkConfig"],[3,"CustomCommandsConfig"],[8,"DialogServiceConfig"],[4,"ErrorRootCause"],[3,"Error"],[13,"ApiError"],[13,"FfiNulError"],[13,"FromUtf8Error"],[13,"Utf8Error"],[13,"TryFromIntError"],[3,"AudioProcessingOptions_MicrophoneCoordinates"],[3,"max_align_t"],[3,"__fsid_t"],[3,"AudioProcessingOptions_MicrophoneArrayGeometry"],[3,"imaxdiv_t"],[3,"_azac_empty"],[3,"_Result_TranslationTextBufferHeader"],[3,"codec_c_interface"],[3,"__va_list_tag"],[3,"SmartHandle"],[3,"SpeechSynthesisVisemeEvent"],[3,"SpeechSynthesisResult"],[3,"SpeechSynthesisBookmarkEvent"],[3,"SpeechSynthesisWordBoundaryEvent"],[3,"RecognitionEvent"],[3,"SpeechRecognitionCanceledEvent"],[3,"SpeechRecognitionEvent"],[3,"SessionEvent"],[3,"SpeechRecognitionResult"],[3,"SpeechRecognizer"],[3,"SpeechSynthesizer"],[3,"AudioDataStream"],[3,"AutoDetectSourceLanguageConfig"],[3,"CancellationDetails"],[3,"EmbeddedSpeechConfig"],[3,"KeywordRecognitionModel"],[3,"SourceLanguageConfig"],[3,"SpeechConfig"],[3,"SpeechSynthesisEvent"],[3,"SynthesisVoicesResult"],[3,"VoiceInfo"]]},\
"env_logger":{"doc":"A simple logger that can be configured via environment …","t":[13,13,3,17,17,3,3,13,13,13,4,2,4,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,13,3,13,13,13,13,13,13,13,13,13,13,13,3,3,4,3,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Always","Auto","Builder","DEFAULT_FILTER_ENV","DEFAULT_WRITE_STYLE_ENV","Env","Logger","Never","Stderr","Stdout","Target","TimestampPrecision","WriteStyle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","default","default","default_filter_or","default_format","default_write_style_or","enabled","filter","filter","filter","filter","filter_level","filter_module","filter_or","flush","fmt","fmt","fmt","fmt","format","format_indent","format_level","format_module_path","format_suffix","format_timestamp","format_timestamp_micros","format_timestamp_millis","format_timestamp_nanos","format_timestamp_secs","from","from","from","from","from_default_env","from_default_env","from_env","from_env","from_env","init","init","init_from_env","into","into","into","is_test","log","matches","new","new","parse_default_env","parse_env","parse_filters","parse_write_style","target","try_from","try_from","try_from","try_init","try_init","try_init_from_env","try_into","try_into","try_into","type_id","type_id","type_id","write_style","write_style","write_style_or","Builder","Filter","borrow","borrow","borrow_mut","borrow_mut","build","default","enabled","filter","filter","filter_level","filter_module","fmt","fmt","from","from","from_env","into","into","matches","new","parse","try_from","try_from","try_into","try_into","type_id","type_id","Always","Ansi256","Auto","Black","Blue","Color","Cyan","Formatter","Green","Magenta","Micros","Millis","Nanos","Never","Red","Rgb","Seconds","Stderr","Stdout","Style","StyledValue","Target","Timestamp","TimestampPrecision","White","WriteStyle","Yellow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default_level_style","default_styled_level","eq","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","into","ne","set_bg","set_bold","set_color","set_intense","style","timestamp","timestamp_micros","timestamp_millis","timestamp_nanos","timestamp_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","write","0","0","1","2"],"q":["env_logger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","env_logger::filter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","env_logger::fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","env_logger::fmt::Color","","",""],"d":["Try very hard to print styles.","Try to print styles, but don’t force the issue.","<code>Builder</code> acts as builder for initializing a <code>Logger</code>.","The default name for the environment variable to read …","The default name for the environment variable to read …","Set of environment variables to configure from.","The env logger.","Never print styles.","Logs will be sent to standard error.","Logs will be sent to standard output.","Log target, either <code>stdout</code> or <code>stderr</code>.","","Whether or not to print styles to the target.","","","","","","","Build an env logger.","Create a new builder with the default environment …","","","Use the default environment variable to read the filter …","Use the default format.","Use the default environment variable to read the style …","","Filtering for log records.","Returns the maximum <code>LevelFilter</code> that this env logger …","Specify an environment variable to read the filter from.","Adds filters to the logger.","Adds a directive to the filter for all modules.","Adds a directive to the filter for a specific module.","Specify an environment variable to read the filter from.","","Formatting for log records.","","","","Sets the format function for formatting the log output.","Configures the amount of spaces to use to indent multiline …","Whether or not to write the level in the default format.","Whether or not to write the module path in the default …","Configures the end of line suffix.","Configures if timestamp should be included and in what …","Configures the timestamp to use microsecond precision.","Configures the timestamp to use millisecond precision.","Configures the timestamp to use nanosecond precision.","Configures the timestamp to use second precision.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates the logger from the environment using default …","Initializes the log builder from the environment using …","Create a builder from the given environment variables.","Creates the logger from the environment.","Initializes the log builder from the environment.","Initializes the global logger with an env logger.","Initializes the global logger with the built env logger.","Initializes the global logger with an env logger from the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets whether or not the logger will be used in unit tests.","","Checks if this record matches the configured filter.","Get a default set of environment variables.","Initializes the log builder with defaults.","Applies the configuration from the environment using …","Applies the configuration from the environment.","Parses the directives string in the same form as the …","Parses whether or not to write styles in the same form as …","Sets the target for the log output.","","","","Attempts to initialize the global logger with an env …","Initializes the global logger with the built env logger.","Attempts to initialize the global logger with an env …","","","","","","","Specify an environment variable to read the style from.","Sets whether or not styles will be written.","Specify an environment variable to read the style from.","A builder for a log filter.","A log filter.","","","","","Build a log filter.","","Determines if a log message with the specified metadata …","Returns the maximum <code>LevelFilter</code> that this filter instance …","Adds a directive to the filter.","Adds a directive to the filter for all modules.","Adds a directive to the filter for a specific module.","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the filter builder from an environment.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if this record matches the configured filter.","Initializes the filter builder with defaults.","Parses the directives string.","","","","","","","Try very hard to print styles.","","Try to print styles, but don’t force the issue.","","","The set of available colors for the terminal …","","A formatter to write logs into.","","","Microsecond precision (6 decimal digits)","Millisecond precision (3 decimal digits)","Nanosecond precision (9 decimal digits)","Never print styles.","","","Full second precision (0 decimal digits)","Logs will be sent to standard error.","Logs will be sent to standard output.","A set of styles to apply to the terminal output.","A value that can be printed using the given styles.","Log target, either <code>stdout</code> or <code>stderr</code>.","An RFC3339 formatted timestamp.","Formatting precision of timestamps.","","Whether or not to print styles to the target.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the default <code>Style</code> for the given level.","Get a printable <code>Style</code> for the given level.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Set the background color.","Set the text weight.","Set the text color.","Set the text intensity.","Begin a new <code>Style</code>.","Get a <code>Timestamp</code> for the current date and time in UTC.","Get a <code>Timestamp</code> for the current date and time in UTC with …","Get a <code>Timestamp</code> for the current date and time in UTC with …","Get a <code>Timestamp</code> for the current date and time in UTC with …","Get a <code>Timestamp</code> for the current date and time in UTC with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap a value in the style.","","","","",""],"i":[1,1,0,0,0,0,0,1,2,2,0,0,0,3,4,5,3,4,5,5,0,4,5,4,5,4,3,0,3,4,5,5,5,4,3,0,3,4,5,5,5,5,5,5,5,5,5,5,5,3,4,4,5,3,5,0,3,5,0,5,0,3,4,5,5,3,3,4,5,5,5,5,5,5,3,4,5,0,5,0,3,4,5,3,4,5,4,5,4,0,0,6,7,6,7,7,7,6,6,7,7,7,6,7,6,7,7,6,7,6,7,7,6,7,6,7,6,7,1,8,1,8,8,0,8,0,8,8,9,9,9,1,8,8,9,2,2,0,0,0,0,0,8,0,8,10,11,12,13,8,2,1,9,10,11,12,13,8,2,1,9,13,8,2,1,9,13,8,2,1,9,2,1,9,12,12,8,2,1,12,10,10,11,11,11,11,11,11,11,11,11,12,13,8,2,1,9,10,11,12,13,8,2,1,9,2,1,10,11,12,13,8,2,1,9,8,13,13,13,13,12,12,12,12,12,12,13,8,2,1,9,10,11,10,11,12,13,8,2,1,9,10,11,12,13,8,2,1,9,10,11,12,13,8,2,1,9,13,12,14,15,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["builder",3]],["logger",3]],[[],["builder",3]],[[],["env",3]],[[],["builder",3]],[[["env",3]],["env",3]],[[["builder",3]],["builder",3]],[[["env",3]],["env",3]],[[["logger",3],["metadata",3]],["bool",0]],null,[[["logger",3]],["levelfilter",4]],[[["env",3]],["env",3]],[[["builder",3],["option",4,[["str",0]]],["levelfilter",4]],["builder",3]],[[["builder",3],["levelfilter",4]],["builder",3]],[[["builder",3],["str",0],["levelfilter",4]],["builder",3]],[[["env",3]],["env",3]],[[["logger",3]]],null,[[["logger",3],["formatter",3]],["result",6]],[[["env",3],["formatter",3]],["result",6]],[[["builder",3],["formatter",3]],["result",6]],[[["builder",3]],["builder",3]],[[["builder",3],["option",4,[["usize",0]]]],["builder",3]],[[["builder",3],["bool",0]],["builder",3]],[[["builder",3],["bool",0]],["builder",3]],[[["builder",3],["str",0]],["builder",3]],[[["builder",3],["option",4,[["timestampprecision",4]]]],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[]],[[],["env",3]],[[]],[[]],[[],["logger",3]],[[],["builder",3]],[[],["builder",3]],[[],["logger",3]],[[],["builder",3]],[[]],[[["builder",3]]],[[]],[[]],[[]],[[]],[[["builder",3],["bool",0]],["builder",3]],[[["logger",3],["record",3]]],[[["logger",3],["record",3]],["bool",0]],[[],["env",3]],[[],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3],["str",0]],["builder",3]],[[["builder",3],["str",0]],["builder",3]],[[["builder",3],["target",4]],["builder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["setloggererror",3]]]],[[["builder",3]],["result",4,[["setloggererror",3]]]],[[],["result",4,[["setloggererror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["env",3]],["env",3]],[[["builder",3],["writestyle",4]],["builder",3]],[[["env",3]],["env",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["builder",3]],["filter",3]],[[],["builder",3]],[[["filter",3],["metadata",3]],["bool",0]],[[["filter",3]],["levelfilter",4]],[[["builder",3],["option",4,[["str",0]]],["levelfilter",4]],["builder",3]],[[["builder",3],["levelfilter",4]],["builder",3]],[[["builder",3],["str",0],["levelfilter",4]],["builder",3]],[[["filter",3],["formatter",3]],["result",6]],[[["builder",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["builder",3]],[[]],[[]],[[["filter",3],["record",3]],["bool",0]],[[],["builder",3]],[[["builder",3],["str",0]],["builder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["style",3]],["style",3]],[[["color",4]],["color",4]],[[["target",4]],["target",4]],[[["writestyle",4]],["writestyle",4]],[[["timestampprecision",4]],["timestampprecision",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["target",4]],[[],["writestyle",4]],[[],["timestampprecision",4]],[[["formatter",3],["level",4]],["style",3]],[[["formatter",3],["level",4]],["styledvalue",3,[["level",4]]]],[[["color",4],["color",4]],["bool",0]],[[["target",4],["target",4]],["bool",0]],[[["writestyle",4],["writestyle",4]],["bool",0]],[[["formatter",3]],["result",6]],[[["timestamp",3],["formatter",3]],["result",6]],[[["timestamp",3],["formatter",3]],["result",6]],[[["styledvalue",3,[["binary",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["octal",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["pointer",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["display",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["debug",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["upperhex",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["lowerhex",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["upperexp",8]]],["formatter",3]],["result",6]],[[["styledvalue",3,[["lowerexp",8]]],["formatter",3]],["result",6]],[[["formatter",3],["formatter",3]],["result",6]],[[["style",3],["formatter",3]],["result",6]],[[["color",4],["formatter",3]],["result",6]],[[["target",4],["formatter",3]],["result",6]],[[["writestyle",4],["formatter",3]],["result",6]],[[["timestampprecision",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["target",4],["",0]]],[[["writestyle",4],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["color",4],["color",4]],["bool",0]],[[["style",3],["color",4]],["style",3]],[[["style",3],["bool",0]],["style",3]],[[["style",3],["color",4]],["style",3]],[[["style",3],["bool",0]],["style",3]],[[["formatter",3]],["style",3]],[[["formatter",3]],["timestamp",3]],[[["formatter",3]],["timestamp",3]],[[["formatter",3]],["timestamp",3]],[[["formatter",3]],["timestamp",3]],[[["formatter",3]],["timestamp",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["style",3]],["styledvalue",3]],[[["formatter",3]],["result",6,[["usize",0]]]],null,null,null,null],"p":[[4,"WriteStyle"],[4,"Target"],[3,"Logger"],[3,"Env"],[3,"Builder"],[3,"Filter"],[3,"Builder"],[4,"Color"],[4,"TimestampPrecision"],[3,"Timestamp"],[3,"StyledValue"],[3,"Formatter"],[3,"Style"],[13,"Ansi256"],[13,"Rgb"]]},\
"humantime":{"doc":"Human-friendly time parser and formatter","t":[3,4,13,3,13,13,13,13,13,13,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Duration","DurationError","Empty","FormattedDuration","InvalidCharacter","InvalidDigit","InvalidFormat","NumberExpected","NumberOverflow","OutOfRange","Rfc3339Timestamp","Timestamp","TimestampError","UnknownUnit","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_duration","format_rfc3339","format_rfc3339_micros","format_rfc3339_millis","format_rfc3339_nanos","format_rfc3339_seconds","from","from","from","from","from","from","from","from","from_str","from_str","get_ref","get_ref","hash","into","into","into","into","into","into","into","into","ne","ne","ne","parse_duration","parse_rfc3339","parse_rfc3339_weak","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","end","start","unit","value"],"q":["humantime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","humantime::DurationError","","","","",""],"d":["A wrapper for duration that has <code>FromStr</code> implementation","Error parsing human-friendly duration","The value was an empty string (or consists only whitespace)","A wrapper type that allows you to Display a Duration","Invalid character during parsing","Bad character where digit is expected","Other formatting errors","Non-numeric value where number is expected","The numeric value is too large","Numeric component is out of range","A wrapper type that allows you to Display a SystemTime","A wrapper for SystemTime that has <code>FromStr</code> implementation","Error parsing datetime (timestamp)","Unit in the number is not one of allowed units","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats duration into a human-readable string","Format an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000000Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000000000Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a reference to the <code>Duration</code> that is being …","Returns a reference to the <code>SystemTime</code> that is being …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Parse duration object <code>1hour 12min 5s</code>","Parse RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>","Parse RFC3339-like timestamp <code>2018-02-14 00:28:07</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","End of the invalid unit inside the original string","Start of the invalid unit inside the original string","The unit verbatim","A number associated with the unit"],"i":[0,0,1,0,1,2,2,1,1,2,0,0,0,1,3,4,1,5,3,4,2,6,1,5,3,4,2,6,1,5,3,4,2,6,1,5,3,4,2,6,3,4,1,3,4,2,1,1,5,5,3,3,4,4,2,2,6,6,0,0,0,0,0,0,1,5,3,3,4,4,2,6,3,4,5,6,3,1,5,3,3,4,4,2,6,1,3,4,0,0,0,1,5,3,4,2,6,1,5,3,4,2,6,1,5,3,4,2,6,1,5,3,4,2,6,1,5,3,4,2,6,7,8,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["duration",3]],["stdduration",3]],[[["timestamp",3]],["systemtime",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["formattedduration",3]],["formattedduration",3]],[[["duration",3]],["duration",3]],[[["timestamp",3]],["timestamp",3]],[[["error",4]],["error",4]],[[["rfc3339timestamp",3]],["rfc3339timestamp",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["duration",3]],["stdduration",3]],[[["timestamp",3]],["systemtime",3]],[[["error",4],["error",4]],["bool",0]],[[["duration",3],["duration",3]],["bool",0]],[[["timestamp",3],["timestamp",3]],["bool",0]],[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["formattedduration",3],["formatter",3]],["result",6]],[[["formattedduration",3],["formatter",3]],["result",6]],[[["duration",3],["formatter",3]],["result",6]],[[["duration",3],["formatter",3]],["result",6]],[[["timestamp",3],["formatter",3]],["result",6]],[[["timestamp",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["rfc3339timestamp",3],["formatter",3]],["result",6]],[[["rfc3339timestamp",3],["formatter",3]],["result",6]],[[["duration",3]],["formattedduration",3]],[[["systemtime",3]],["rfc3339timestamp",3]],[[["systemtime",3]],["rfc3339timestamp",3]],[[["systemtime",3]],["rfc3339timestamp",3]],[[["systemtime",3]],["rfc3339timestamp",3]],[[["systemtime",3]],["rfc3339timestamp",3]],[[]],[[]],[[]],[[["stdduration",3]],["duration",3]],[[]],[[["systemtime",3]],["timestamp",3]],[[]],[[]],[[["str",0]],["result",4,[["duration",3]]]],[[["str",0]],["result",4,[["timestamp",3]]]],[[["formattedduration",3]],["duration",3]],[[["rfc3339timestamp",3]],["systemtime",3]],[[["duration",3],["",0]]],[[]],[[]],[[["duration",3]],["stdduration",3]],[[]],[[["timestamp",3]],["systemtime",3]],[[]],[[]],[[]],[[["error",4],["error",4]],["bool",0]],[[["duration",3],["duration",3]],["bool",0]],[[["timestamp",3],["timestamp",3]],["bool",0]],[[["str",0]],["result",4,[["duration",3],["error",4]]]],[[["str",0]],["result",4,[["systemtime",3],["error",4]]]],[[["str",0]],["result",4,[["systemtime",3],["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null],"p":[[4,"DurationError"],[4,"TimestampError"],[3,"Duration"],[3,"Timestamp"],[3,"FormattedDuration"],[3,"Rfc3339Timestamp"],[13,"InvalidCharacter"],[13,"NumberExpected"],[13,"UnknownUnit"]]},\
"instant":{"doc":"","t":[3,6,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","ne","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id"],"q":["instant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","Creates a new <code>Duration</code> from the specified number of whole …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["duration",3]]],[[["duration",3]],["u128",0]],[[["duration",3]],["u128",0]],[[["duration",3]],["u128",0]],[[["duration",3]],["u64",0]],[[["duration",3]],["f32",0]],[[["duration",3]],["f64",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["duration",3],["duration",3]],["option",4,[["duration",3]]]],[[["duration",3],["u32",0]],["option",4,[["duration",3]]]],[[["duration",3],["u32",0]],["option",4,[["duration",3]]]],[[["duration",3],["duration",3]],["option",4,[["duration",3]]]],[[["duration",3]],["duration",3]],[[["",0],["",0]]],[[["duration",3],["duration",3]],["ordering",4]],[[],["duration",3]],[[["duration",3],["u32",0]],["duration",3]],[[["duration",3],["u32",0]]],[[["duration",3],["duration",3]],["f32",0]],[[["duration",3],["duration",3]],["f64",0]],[[["duration",3],["f32",0]],["duration",3]],[[["duration",3],["f64",0]],["duration",3]],[[["duration",3],["duration",3]],["bool",0]],[[["duration",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["f32",0]],["duration",3]],[[["f64",0]],["duration",3]],[[["duration",3],["",0]]],[[]],[[["duration",3]],["bool",0]],[[["duration",3],["u32",0]],["duration",3]],[[["duration",3],["u32",0]]],[[["duration",3],["f32",0]],["duration",3]],[[["duration",3],["f64",0]],["duration",3]],[[["duration",3],["duration",3]],["bool",0]],[[["u64",0],["u32",0]],["duration",3]],[[["duration",3],["duration",3]],["option",4,[["ordering",4]]]],[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["u32",0]],["duration",3]],[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["duration",3]]],[[["duration",3]],["u32",0]],[[["duration",3]],["u32",0]],[[["duration",3]],["u32",0]],[[],["duration",3]],[[],["duration",3]],[[["",0]]],[[],["result",4]],[[["f32",0]],["result",4,[["duration",3],["fromfloatsecserror",3]]]],[[["f64",0]],["result",4,[["duration",3],["fromfloatsecserror",3]]]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"Duration"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_IV","ALG_SET_KEY","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BOOT_TIME","BOTHER","BPF_FS_MAGIC","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_FILTER_MAX","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_MAX","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_DENY","FAN_EVENT_ON_CHILD","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FILE","FILENAME_MAX","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUTEXFS_SUPER_MAGIC","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_IGNORED","IN_ISDIR","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","JFFS2_SUPER_MAGIC","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NONE","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_WANPIPE","PF_X25","PF_XDP","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_INTERP","PT_LOAD","PT_LOOS","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RIP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFSLAVE","SIOCGRARP","SIOCSARP","SIOCSIFADDR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNETMASK","SIOCSIFSLAVE","SIOCSRARP","SI_LOAD_SHIFT","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_NODUMP","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_INFO","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_NODELAY","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETSF","TCSETSW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGPGRP","TIOCGRS485","TIOCGSERIAL","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNXCL","TIOCOUTQ","TIOCSBRK","TIOCSCTTY","TIOCSPGRP","TIOCSRS485","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__seq","__statx_timestamp_pad1","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addrinfo","adjtimex","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arena","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","atexit","atof","atoi","attack_length","attack_level","backtrace","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","chmod","chown","chroot","clearenv","clearerr","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","close","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","deadband","decimal_point","delay","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dl_iterate_phdr","dl_phdr_info","dladdr","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","errcnt","error","es","esterror","esterror","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execvp","execvpe","exit","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetpos","fgetpos64","fgets","fgetspent_r","fgetxattr","fileno","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fop","fop","fopen","fopen64","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getnameinfo","getopt","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","hasmntopt","hblkhd","hblks","hostent","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","jitcnt","jitter","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lconv","left_coeff","left_saturation","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","malloc","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_unit","memalign","memchr","memcmp","memcpy","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","ntp_adjtime","ntp_gettime","ntptimeval","off64_t","off_t","offset","offset","old","open","open64","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","passwd","pathconf","pause","pclose","period","perror","personality","pgn","phase","pid","pid","pid_t","pipe","pipe2","poll","pollfd","popen","positive_sign","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","prctl","pread","pread64","preadv","preadv2","preadv64","precision","printf","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_t","ptrace","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","response","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","seekdir","select","sem_close","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_num","sem_op","sem_open","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","sembuf","semctl","semget","semop","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","snprintf","sock_extended_err","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strrchr","strsignal","strspn","strstr","strtod","strtok","strtol","strtoul","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":["libcdmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The 64-bit libc on Solaris and illumos only has readdir_r. …if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cmsghdr",0]],["c_uchar",0]],[[["msghdr",0]],["cmsghdr",0]],[[["c_uint",6]],["c_uint",6]],[[["msghdr",0],["cmsghdr",0]],["cmsghdr",0]],[[["c_uint",6]],["c_uint",6]],null,null,null,[[["c_int",6]],["size_t",6]],[[["usize",0],["cpu_set_t",3]]],[[["cpu_set_t",3]],["c_int",6]],[[["usize",0],["cpu_set_t",3]],["c_int",6]],[[["cpu_set_t",3],["cpu_set_t",3]],["bool",0]],[[["usize",0],["cpu_set_t",3]],["bool",0]],[[["usize",0],["cpu_set_t",3]]],null,[[["cpu_set_t",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6],["fd_set",0]]],[[["c_int",6],["fd_set",0]],["bool",0]],[[["c_int",6],["fd_set",0]]],null,[[["fd_set",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["u8",0]],null,null,[[["u8",0]],["u8",0]],null,null,null,null,null,null,null,null,[[["u8",0]],["u8",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["u8",0]],null,null,null,null,null,null,null,[[["u8",0]],["u8",0]],null,null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["u8",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6],["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",0]],["u32",0]],null,null,null,null,null,[[["u32",0]],["bool",0]],null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["u8",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sock_extended_err",0]],["sockaddr",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["bool",0]],null,[[["c_int",6]],["c_int",6]],null,[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],null,null,null,[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],null,[[["c_int",6],["c_int",6]],["c_int",6]],null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dir",4]],["dir",4]],[[["file",4]],["file",4]],[[["fpos_t",4]],["fpos_t",4]],[[["group",3]],["group",3]],[[["utimbuf",3]],["utimbuf",3]],[[["timeval",3]],["timeval",3]],[[["timespec",3]],["timespec",3]],[[["rlimit",3]],["rlimit",3]],[[["rusage",3]],["rusage",3]],[[["ipv6_mreq",3]],["ipv6_mreq",3]],[[["hostent",3]],["hostent",3]],[[["iovec",3]],["iovec",3]],[[["pollfd",3]],["pollfd",3]],[[["winsize",3]],["winsize",3]],[[["linger",3]],["linger",3]],[[["sigval",3]],["sigval",3]],[[["itimerval",3]],["itimerval",3]],[[["tms",3]],["tms",3]],[[["servent",3]],["servent",3]],[[["protoent",3]],["protoent",3]],[[["timezone",4]],["timezone",4]],[[["in_addr",3]],["in_addr",3]],[[["ip_mreq",3]],["ip_mreq",3]],[[["ip_mreq_source",3]],["ip_mreq_source",3]],[[["sockaddr",3]],["sockaddr",3]],[[["sockaddr_in",3]],["sockaddr_in",3]],[[["sockaddr_in6",3]],["sockaddr_in6",3]],[[["addrinfo",3]],["addrinfo",3]],[[["sockaddr_ll",3]],["sockaddr_ll",3]],[[["fd_set",3]],["fd_set",3]],[[["tm",3]],["tm",3]],[[["sched_param",3]],["sched_param",3]],[[["dl_info",3]],["dl_info",3]],[[["lconv",3]],["lconv",3]],[[["in_pktinfo",3]],["in_pktinfo",3]],[[["ifaddrs",3]],["ifaddrs",3]],[[["in6_rtmsg",3]],["in6_rtmsg",3]],[[["arpreq",3]],["arpreq",3]],[[["arpreq_old",3]],["arpreq_old",3]],[[["arphdr",3]],["arphdr",3]],[[["mmsghdr",3]],["mmsghdr",3]],[[["epoll_event",3]],["epoll_event",3]],[[["sockaddr_un",3]],["sockaddr_un",3]],[[["sockaddr_storage",3]],["sockaddr_storage",3]],[[["utsname",3]],["utsname",3]],[[["sigevent",3]],["sigevent",3]],[[["fpos64_t",4]],["fpos64_t",4]],[[["rlimit64",3]],["rlimit64",3]],[[["glob_t",3]],["glob_t",3]],[[["passwd",3]],["passwd",3]],[[["spwd",3]],["spwd",3]],[[["dqblk",3]],["dqblk",3]],[[["signalfd_siginfo",3]],["signalfd_siginfo",3]],[[["itimerspec",3]],["itimerspec",3]],[[["fsid_t",3]],["fsid_t",3]],[[["packet_mreq",3]],["packet_mreq",3]],[[["cpu_set_t",3]],["cpu_set_t",3]],[[["if_nameindex",3]],["if_nameindex",3]],[[["msginfo",3]],["msginfo",3]],[[["sembuf",3]],["sembuf",3]],[[["input_event",3]],["input_event",3]],[[["input_id",3]],["input_id",3]],[[["input_absinfo",3]],["input_absinfo",3]],[[["input_keymap_entry",3]],["input_keymap_entry",3]],[[["input_mask",3]],["input_mask",3]],[[["ff_replay",3]],["ff_replay",3]],[[["ff_trigger",3]],["ff_trigger",3]],[[["ff_envelope",3]],["ff_envelope",3]],[[["ff_constant_effect",3]],["ff_constant_effect",3]],[[["ff_ramp_effect",3]],["ff_ramp_effect",3]],[[["ff_condition_effect",3]],["ff_condition_effect",3]],[[["ff_periodic_effect",3]],["ff_periodic_effect",3]],[[["ff_rumble_effect",3]],["ff_rumble_effect",3]],[[["ff_effect",3]],["ff_effect",3]],[[["uinput_ff_upload",3]],["uinput_ff_upload",3]],[[["uinput_ff_erase",3]],["uinput_ff_erase",3]],[[["uinput_abs_setup",3]],["uinput_abs_setup",3]],[[["dl_phdr_info",3]],["dl_phdr_info",3]],[[["elf32_ehdr",3]],["elf32_ehdr",3]],[[["elf64_ehdr",3]],["elf64_ehdr",3]],[[["elf32_sym",3]],["elf32_sym",3]],[[["elf64_sym",3]],["elf64_sym",3]],[[["elf32_phdr",3]],["elf32_phdr",3]],[[["elf64_phdr",3]],["elf64_phdr",3]],[[["elf32_shdr",3]],["elf32_shdr",3]],[[["elf64_shdr",3]],["elf64_shdr",3]],[[["ucred",3]],["ucred",3]],[[["mntent",3]],["mntent",3]],[[["posix_spawn_file_actions_t",3]],["posix_spawn_file_actions_t",3]],[[["posix_spawnattr_t",3]],["posix_spawnattr_t",3]],[[["genlmsghdr",3]],["genlmsghdr",3]],[[["in6_pktinfo",3]],["in6_pktinfo",3]],[[["arpd_request",3]],["arpd_request",3]],[[["inotify_event",3]],["inotify_event",3]],[[["fanotify_response",3]],["fanotify_response",3]],[[["sockaddr_vm",3]],["sockaddr_vm",3]],[[["regmatch_t",3]],["regmatch_t",3]],[[["sock_extended_err",3]],["sock_extended_err",3]],[[["__c_anonymous_sockaddr_can_tp",3]],["__c_anonymous_sockaddr_can_tp",3]],[[["__c_anonymous_sockaddr_can_j1939",3]],["__c_anonymous_sockaddr_can_j1939",3]],[[["can_filter",3]],["can_filter",3]],[[["sockaddr_nl",3]],["sockaddr_nl",3]],[[["dirent",3]],["dirent",3]],[[["dirent64",3]],["dirent64",3]],[[["sockaddr_alg",3]],["sockaddr_alg",3]],[[["uinput_setup",3]],["uinput_setup",3]],[[["uinput_user_dev",3]],["uinput_user_dev",3]],[[["af_alg_iv",3]],["af_alg_iv",3]],[[["mq_attr",3]],["mq_attr",3]],[[["__c_anonymous_sockaddr_can_can_addr",19]],["__c_anonymous_sockaddr_can_can_addr",19]],[[["sockaddr_can",3]],["sockaddr_can",3]],[[["statx",3]],["statx",3]],[[["statx_timestamp",3]],["statx_timestamp",3]],[[["aiocb",3]],["aiocb",3]],[[["__exit_status",3]],["__exit_status",3]],[[["__timeval",3]],["__timeval",3]],[[["glob64_t",3]],["glob64_t",3]],[[["msghdr",3]],["msghdr",3]],[[["cmsghdr",3]],["cmsghdr",3]],[[["termios",3]],["termios",3]],[[["mallinfo",3]],["mallinfo",3]],[[["nlmsghdr",3]],["nlmsghdr",3]],[[["nlmsgerr",3]],["nlmsgerr",3]],[[["nl_pktinfo",3]],["nl_pktinfo",3]],[[["nl_mmap_req",3]],["nl_mmap_req",3]],[[["nl_mmap_hdr",3]],["nl_mmap_hdr",3]],[[["nlattr",3]],["nlattr",3]],[[["rtentry",3]],["rtentry",3]],[[["timex",3]],["timex",3]],[[["ntptimeval",3]],["ntptimeval",3]],[[["regex_t",3]],["regex_t",3]],[[["elf64_chdr",3]],["elf64_chdr",3]],[[["elf32_chdr",3]],["elf32_chdr",3]],[[["utmpx",3]],["utmpx",3]],[[["sigset_t",3]],["sigset_t",3]],[[["sysinfo",3]],["sysinfo",3]],[[["msqid_ds",3]],["msqid_ds",3]],[[["sigaction",3]],["sigaction",3]],[[["statfs",3]],["statfs",3]],[[["flock",3]],["flock",3]],[[["flock64",3]],["flock64",3]],[[["siginfo_t",3]],["siginfo_t",3]],[[["stack_t",3]],["stack_t",3]],[[["stat",3]],["stat",3]],[[["stat64",3]],["stat64",3]],[[["statfs64",3]],["statfs64",3]],[[["statvfs64",3]],["statvfs64",3]],[[["pthread_attr_t",3]],["pthread_attr_t",3]],[[["_libc_fpxreg",3]],["_libc_fpxreg",3]],[[["_libc_xmmreg",3]],["_libc_xmmreg",3]],[[["_libc_fpstate",3]],["_libc_fpstate",3]],[[["user_regs_struct",3]],["user_regs_struct",3]],[[["user",3]],["user",3]],[[["mcontext_t",3]],["mcontext_t",3]],[[["ipc_perm",3]],["ipc_perm",3]],[[["shmid_ds",3]],["shmid_ds",3]],[[["termios2",3]],["termios2",3]],[[["ip_mreqn",3]],["ip_mreqn",3]],[[["user_fpregs_struct",3]],["user_fpregs_struct",3]],[[["ucontext_t",3]],["ucontext_t",3]],[[["statvfs",3]],["statvfs",3]],[[["max_align_t",3]],["max_align_t",3]],[[["sem_t",3]],["sem_t",3]],[[["pthread_mutexattr_t",3]],["pthread_mutexattr_t",3]],[[["pthread_rwlockattr_t",3]],["pthread_rwlockattr_t",3]],[[["pthread_condattr_t",3]],["pthread_condattr_t",3]],[[["fanotify_event_metadata",3]],["fanotify_event_metadata",3]],[[["pthread_cond_t",3]],["pthread_cond_t",3]],[[["pthread_mutex_t",3]],["pthread_mutex_t",3]],[[["pthread_rwlock_t",3]],["pthread_rwlock_t",3]],[[["can_frame",3]],["can_frame",3]],[[["canfd_frame",3]],["canfd_frame",3]],[[["in6_addr",3]],["in6_addr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_void",4],["formatter",3]],["result",4,[["error",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dev_t",6]],["c_uint",6]],null,[[["c_uint",6],["c_uint",6]],["dev_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dev_t",6]],["c_uint",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["siginfo_t",3]],["c_void",0]],null,null,[[["siginfo_t",3]],["pid_t",6]],null,[[["siginfo_t",3]],["c_int",6]],[[["siginfo_t",3]],["c_long",6]],[[["siginfo_t",3]],["uid_t",6]],[[["siginfo_t",3]],["c_long",6]],[[["siginfo_t",3]],["sigval",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"ntptimeval"],[3,"ipc_perm"],[3,"statx_timestamp"],[3,"timex"],[3,"sysinfo"],[3,"_libc_fpstate"],[3,"uinput_user_dev"],[3,"uinput_abs_setup"],[3,"utimbuf"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"addrinfo"],[3,"aiocb"],[3,"arphdr"],[3,"mallinfo"],[3,"arpreq"],[3,"arpreq_old"],[3,"ff_envelope"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[3,"group"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"cpu_set_t"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"can_filter"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"utmpx"],[3,"sigset_t"],[3,"msqid_ds"],[4,"c_void"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_owned_by_current_thread","is_owned_by_current_thread","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[1,2,0,3,4,0,0,3,5,6,4,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,21,21,10,6,13,16,17,18,22,22,22,22,23,23,9,12,15,9,12,15,9,12,15,10,11,13,14,16,17,18,19,20,10,11,17,20,24,17,18,25,17,25,10,11,13,14,16,17,18,19,20,9,10,10,11,11,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,9,12,9,12,15,15,15,15,7,8,9,9,9,10,11,6,12,12,12,13,14,15,15,15,16,17,18,19,20,9,12,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,9,12,15,3,3,9,6,12,4,4,15,6,12,3,9,6,12,4,4,26,27,10,11,13,14,16,17,19,20,10,9,12,15,5,9,12,15,15,15,13,16,17,18,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,9,6,12,4,2,2,1,9,6,12,4,2,26,28,28,2,1,9,6,12,27,29,29,10,11,13,14,16,17,19,20,15,15,15,15,15,15,15,15,15,27,18,29,18,29,18,15,15,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,6,4,22,21,10,11,6,13,14,16,17,18,19,20,4,22,27,23,10,13,16,17,18,10,13,16,17,18,15,27,18,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullmutexguard",3,[["rawmutexfair",8],["sized",8]]]]],[[["rawreentrantmutex",3,[["rawmutexfair",8],["getthreadid",8]]]]],[[["reentrantmutexguard",3,[["rawmutexfair",8],["getthreadid",8],["sized",8]]]]],[[["rwlockreadguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlockwriteguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgradefair",8],["sized",8]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["mutex",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["",0]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[],["mutex",3,[["rawmutex",8],["",26,[["sized",8],["default",8]]]]]],[[],["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["",26,[["sized",8],["default",8]]]]]],[[],["rwlock",3,[["rawrwlock",8],["",26,[["sized",8],["default",8]]]]]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["",0]],[[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["",0]],[[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]],["",0]],[[["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["",0]]],[[["rwlockwriteguard",3,[["rawrwlockdowngrade",8],["sized",8]]]],["rwlockreadguard",3,[["rawrwlockdowngrade",8],["sized",8]]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgradedowngrade",8],["sized",8]]]],["rwlockreadguard",3,[["rawrwlockupgradedowngrade",8],["sized",8]]]],[[["",0]]],[[["rwlockwriteguard",3,[["rawrwlockupgradedowngrade",8],["sized",8]]]],["rwlockupgradablereadguard",3,[["rawrwlockupgradedowngrade",8],["sized",8]]]],[[["",0]]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]]],[[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]],[[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]],[[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]]],[[["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]],[[["mutex",3,[["rawmutex",8],["",26,[["sized",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["mutexguard",3,[["rawmutex",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mutexguard",3,[["rawmutex",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedmutexguard",3,[["rawmutex",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedmutexguard",3,[["rawmutex",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["",26,[["sized",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["rwlock",3,[["rawrwlock",8],["",26,[["sized",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["rwlockreadguard",3,[["rawrwlock",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["rwlockreadguard",3,[["rawrwlock",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["rwlockwriteguard",3,[["rawrwlock",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["rwlockwriteguard",3,[["rawrwlock",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedrwlockreadguard",3,[["rawrwlock",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedrwlockreadguard",3,[["rawrwlock",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["",26,[["display",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["mutex",3,[["rawmutex",8],["sized",8]]]]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]],[[["mutex",3,[["rawmutexfair",8],["sized",8]]]]],[[["reentrantmutex",3,[["rawmutexfair",8],["getthreadid",8],["sized",8]]]]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]]],[[["rwlock",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]]],[[["rwlock",3,[["rawrwlockfair",8],["sized",8]]]]],[[]],[[]],[[]],[[["never",0]]],[[],["mutex",3,[["rawmutex",8]]]],[[]],[[]],[[]],[[["never",0]]],[[],["reentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]],[[]],[[]],[[]],[[],["rwlock",3,[["rawrwlock",8]]]],[[]],[[["never",0]]],[[]],[[]],[[]],[[]],[[]],[[["mutex",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["",0]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mutex",3,[["rawmutex",8]]]]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]]],[[["rwlock",3,[["rawrwlock",8]]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["mutex",3,[["rawmutex",8],["sized",8]]]],["bool",0]],[[["rawreentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]],["bool",0]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["bool",0]],[[["rawreentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]],["bool",0]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["bool",0]],[[["",0]]],[[["mutex",3,[["rawmutex",8],["sized",8]]]],["mutexguard",3,[["rawmutex",8],["sized",8]]]],[[["rawreentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]],["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]],[[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]],["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],[[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],[[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],[[["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]],["mutex",3]],[[],["mutex",3,[["rawmutex",8]]]],[[],["reentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]],[[],["rwlock",3,[["rawrwlock",8]]]],[[["",0]],["nonzerousize",3]],[[["mutex",3,[["rawmutex",8],["sized",8]]]],["",0]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["",0]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["",0]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],[[["rwlock",3,[["rawrwlockrecursive",8],["sized",8]]]],["rwlockreadguard",3,[["rawrwlockrecursive",8],["sized",8]]]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["reentrantmutex",3]],[[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["rwlock",3]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["rwlock",3]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]],["rwlock",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["mutex",3,[["rawmutex",8],["sized",8]]]],["option",4,[["mutexguard",3,[["rawmutex",8],["sized",8]]]]]],[[["rawreentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]],["bool",0]],[[["reentrantmutex",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["option",4,[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["mutex",3,[["rawmutextimed",8],["sized",8]]]],["option",4,[["mutexguard",3,[["rawmutextimed",8],["sized",8]]]]]],[[["rawreentrantmutex",3,[["rawmutextimed",8],["getthreadid",8]]]],["bool",0]],[[["reentrantmutex",3,[["rawmutextimed",8],["getthreadid",8],["sized",8]]]],["option",4,[["reentrantmutexguard",3,[["rawmutextimed",8],["getthreadid",8],["sized",8]]]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["mutex",3,[["rawmutextimed",8],["sized",8]]]],["option",4,[["mutexguard",3,[["rawmutextimed",8],["sized",8]]]]]],[[["rawreentrantmutex",3,[["rawmutextimed",8],["getthreadid",8]]]],["bool",0]],[[["reentrantmutex",3,[["rawmutextimed",8],["getthreadid",8],["sized",8]]]],["option",4,[["reentrantmutexguard",3,[["rawmutextimed",8],["getthreadid",8],["sized",8]]]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]],["result",4,[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]],["mutexguard",3,[["rawmutex",8],["sized",8]]]]]],[[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]],["result",4,[["mappedmutexguard",3,[["rawmutex",8],["sized",8]]],["mappedmutexguard",3,[["rawmutex",8],["sized",8]]]]]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["result",4,[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]],["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]]],[[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]],["result",4,[["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]],["mappedreentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]]],[[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["result",4,[["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]],["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]]]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["result",4,[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]],["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]]],[[["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]],["result",4,[["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]],["mappedrwlockreadguard",3,[["rawrwlock",8],["sized",8]]]]]],[[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]],["result",4,[["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]],["mappedrwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["option",4,[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlocktimed",8],["sized",8]]]],["option",4,[["rwlockreadguard",3,[["rawrwlocktimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlockrecursive",8],["sized",8]]]],["option",4,[["rwlockreadguard",3,[["rawrwlockrecursive",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlockrecursivetimed",8],["sized",8]]]],["option",4,[["rwlockreadguard",3,[["rawrwlockrecursivetimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlockrecursivetimed",8],["sized",8]]]],["option",4,[["rwlockreadguard",3,[["rawrwlockrecursivetimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlocktimed",8],["sized",8]]]],["option",4,[["rwlockreadguard",3,[["rawrwlocktimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlockupgrade",8],["sized",8]]]],["option",4,[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlockupgradetimed",8],["sized",8]]]],["option",4,[["rwlockupgradablereadguard",3,[["rawrwlockupgradetimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlockupgradetimed",8],["sized",8]]]],["option",4,[["rwlockupgradablereadguard",3,[["rawrwlockupgradetimed",8],["sized",8]]]]]],[[["",0]],["bool",0]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]],["result",4,[["rwlockwriteguard",3,[["rawrwlockupgrade",8],["sized",8]]],["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]]]],[[["",0]],["bool",0]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgradetimed",8],["sized",8]]]],["result",4,[["rwlockwriteguard",3,[["rawrwlockupgradetimed",8],["sized",8]]],["rwlockupgradablereadguard",3,[["rawrwlockupgradetimed",8],["sized",8]]]]]],[[["",0]],["bool",0]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgradetimed",8],["sized",8]]]],["result",4,[["rwlockwriteguard",3,[["rawrwlockupgradetimed",8],["sized",8]]],["rwlockupgradablereadguard",3,[["rawrwlockupgradetimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["option",4,[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlocktimed",8],["sized",8]]]],["option",4,[["rwlockwriteguard",3,[["rawrwlocktimed",8],["sized",8]]]]]],[[["rwlock",3,[["rawrwlocktimed",8],["sized",8]]]],["option",4,[["rwlockwriteguard",3,[["rawrwlocktimed",8],["sized",8]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["rawreentrantmutex",3,[["rawmutex",8],["getthreadid",8]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["mutexguard",3,[["rawmutexfair",8],["sized",8]]]]],[[["mappedmutexguard",3,[["rawmutexfair",8],["sized",8]]]]],[[["rawreentrantmutex",3,[["rawmutexfair",8],["getthreadid",8]]]]],[[["reentrantmutexguard",3,[["rawmutexfair",8],["getthreadid",8],["sized",8]]]]],[[["mappedreentrantmutexguard",3,[["rawmutexfair",8],["getthreadid",8],["sized",8]]]]],[[["rwlockreadguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlockwriteguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgradefair",8],["sized",8]]]]],[[["mappedrwlockreadguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["mappedrwlockwriteguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["mutexguard",3,[["rawmutex",8],["sized",8]]]]],[[["reentrantmutexguard",3,[["rawmutex",8],["getthreadid",8],["sized",8]]]]],[[["rwlockreadguard",3,[["rawrwlock",8],["sized",8]]]]],[[["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]]],[[["mutexguard",3,[["rawmutexfair",8],["sized",8]]]]],[[["reentrantmutexguard",3,[["rawmutexfair",8],["getthreadid",8],["sized",8]]]]],[[["rwlockreadguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlockwriteguard",3,[["rawrwlockfair",8],["sized",8]]]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgradefair",8],["sized",8]]]]],[[["rwlock",3,[["rawrwlockupgrade",8],["sized",8]]]],["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]],[[["",0]]],[[["rwlockupgradablereadguard",3,[["rawrwlockupgrade",8],["sized",8]]]],["rwlockwriteguard",3,[["rawrwlockupgrade",8],["sized",8]]]],[[["rwlock",3,[["rawrwlock",8],["sized",8]]]],["rwlockwriteguard",3,[["rawrwlock",8],["sized",8]]]]],"p":[[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawMutex"],[8,"RawRwLock"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"GuardSend"],[3,"GuardNoSend"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutexFair"],[8,"RawRwLockFair"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockRecursive"],[8,"RawRwLockUpgrade"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_boxed_logger","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>Box&lt;Log&gt;</code>.","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","","","","","","","","","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,0,3,4,5,6,2,1,1,2,3,5,1,2,7,8,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["record",3]],["arguments",3]],[[["recordbuilder",3],["arguments",3]],["recordbuilder",3]],[[["level",4]],["str",0]],[[["levelfilter",4]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["recordbuilder",3]],["record",3]],[[["metadatabuilder",3]],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4]],["level",4]],[[["levelfilter",4]],["levelfilter",4]],[[["record",3]],["record",3]],[[["metadata",3]],["metadata",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["level",4],["level",4]],["ordering",4]],[[["levelfilter",4],["levelfilter",4]],["ordering",4]],[[["metadata",3],["metadata",3]],["ordering",4]],[[["metadatabuilder",3],["metadatabuilder",3]],["ordering",4]],null,[[["",0],["metadata",3]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["metadata",3],["metadata",3]],["bool",0]],[[["metadatabuilder",3],["metadatabuilder",3]],["bool",0]],[[["parselevelerror",3],["parselevelerror",3]],["bool",0]],null,[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]]],[[["level",4],["formatter",3]],["result",6]],[[["level",4],["formatter",3]],["result",6]],[[["levelfilter",4],["formatter",3]],["result",6]],[[["levelfilter",4],["formatter",3]],["result",6]],[[["record",3],["formatter",3]],["result",6]],[[["recordbuilder",3],["formatter",3]],["result",6]],[[["metadata",3],["formatter",3]],["result",6]],[[["metadatabuilder",3],["formatter",3]],["result",6]],[[["setloggererror",3],["formatter",3]],["result",6]],[[["setloggererror",3],["formatter",3]],["result",6]],[[["parselevelerror",3],["formatter",3]],["result",6]],[[["parselevelerror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["level",4]]]],[[["str",0]],["result",4,[["levelfilter",4]]]],[[["level",4],["level",4]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["level",4],["",0]]],[[["levelfilter",4],["",0]]],[[["metadata",3],["",0]]],[[["metadatabuilder",3],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["level",4],["levelfilter",4]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["record",3]],["level",4]],[[["recordbuilder",3],["level",4]],["recordbuilder",3]],[[["metadata",3]],["level",4]],[[["metadatabuilder",3],["level",4]],["metadatabuilder",3]],[[["record",3]],["option",4,[["u32",0]]]],[[["recordbuilder",3],["option",4,[["u32",0]]]],["recordbuilder",3]],[[["",0],["record",3]]],null,null,[[],["log",8]],[[["level",4],["levelfilter",4]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[["record",3]],["metadata",3]],[[["recordbuilder",3],["metadata",3]],["recordbuilder",3]],[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["metadata",3],["metadata",3]],["bool",0]],[[["metadatabuilder",3],["metadatabuilder",3]],["bool",0]],[[["parselevelerror",3],["parselevelerror",3]],["bool",0]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["level",4],["level",4]],["option",4,[["ordering",4]]]],[[["levelfilter",4],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["levelfilter",4],["level",4]],["option",4,[["ordering",4]]]],[[["metadata",3],["metadata",3]],["option",4,[["ordering",4]]]],[[["metadatabuilder",3],["metadatabuilder",3]],["option",4,[["ordering",4]]]],[[["box",3,[["log",8]]]],["result",4,[["setloggererror",3]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["levelfilter",4]]],[[["record",3]],["str",0]],[[["recordbuilder",3],["str",0]],["recordbuilder",3]],[[["metadata",3]],["str",0]],[[["metadatabuilder",3],["str",0]],["metadatabuilder",3]],[[["levelfilter",4]],["option",4,[["level",4]]]],[[["level",4]],["levelfilter",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"memchr":{"doc":"The <code>memchr</code> crate provides heavily optimized routines for …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Memchr","Memchr2","Memchr3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["memchr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator for <code>memchr</code>.","An iterator for <code>memchr2</code>.","An iterator for <code>memchr3</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Like <code>memchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Search for the last occurrence of a byte in a slice.","Like <code>memrchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memrchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Creates a new iterator that yields all positions of needle …","Creates a new iterator that yields all positions of needle …","Create a new <code>Memchr3</code> that’s initialized to zero with a …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["usize",0]]]],[[["u8",0],["u8",0]],["option",4,[["usize",0]]]],[[["u8",0],["u8",0]],["memchr2",3]],[[["u8",0],["u8",0],["u8",0]],["option",4,[["usize",0]]]],[[["u8",0],["u8",0],["u8",0]],["memchr3",3]],[[["u8",0]],["memchr",3]],[[["u8",0]],["option",4,[["usize",0]]]],[[["u8",0],["u8",0]],["option",4,[["usize",0]]]],[[["u8",0],["u8",0]],["rev",3,[["memchr2",3]]]],[[["u8",0],["u8",0],["u8",0]],["option",4,[["usize",0]]]],[[["u8",0],["u8",0],["u8",0]],["rev",3,[["memchr3",3]]]],[[["u8",0]],["rev",3,[["memchr",3]]]],[[["u8",0]],["memchr",3]],[[["u8",0],["u8",0]],["memchr2",3]],[[["u8",0],["u8",0],["u8",0]],["memchr3",3]],[[["memchr",3]],["option",4,[["usize",0]]]],[[["memchr2",3]],["option",4,[["usize",0]]]],[[["memchr3",3]],["option",4,[["usize",0]]]],[[["memchr",3]],["option",4]],[[["memchr2",3]],["option",4]],[[["memchr3",3]],["option",4]],[[["memchr",3]]],[[["memchr2",3]]],[[["memchr3",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"mio":{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","t":[12,2,3,3,18,3,3,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,0,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Events","Interest","Poll","READABLE","Registry","Token","WRITABLE","Waker","add","as_raw_fd","as_raw_fd","bitor","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deregister","eq","eq","event","features","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","guide","hash","into","into","into","into","into","is_aio","is_lio","is_readable","is_writable","ne","ne","net","new","new","partial_cmp","partial_cmp","poll","register","registry","remove","reregister","to_owned","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unix","wake","Event","Events","Iter","Source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","count","deregister","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","is_aio","is_empty","is_error","is_lio","is_priority","is_read_closed","is_readable","is_writable","is_write_closed","iter","next","register","reregister","size_hint","to_owned","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","SocketAddr","TcpKeepalive","TcpListener","TcpSocket","TcpStream","UdpSocket","UnixDatagram","UnixListener","UnixStream","accept","accept","as_pathname","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","bind","bind","bind","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone_into","connect","connect","connect","connect","connect","default","deregister","deregister","deregister","deregister","deregister","deregister","drop","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_std","from_std","from_std","from_std","from_std","from_std","get_keepalive","get_keepalive_interval","get_keepalive_retries","get_keepalive_time","get_linger","get_localaddr","get_recv_buffer_size","get_reuseaddr","get_reuseport","get_send_buffer_size","into","into","into","into","into","into","into","into","into","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","is_unnamed","join_multicast_v4","join_multicast_v6","leave_multicast_v4","leave_multicast_v6","listen","local_addr","local_addr","local_addr","local_addr","local_addr","local_addr","multicast_loop_v4","multicast_loop_v6","multicast_ttl_v4","new","new_v4","new_v6","nodelay","only_v6","pair","pair","peek","peek","peek_from","peer_addr","peer_addr","peer_addr","read","read","read","read","read_vectored","read_vectored","read_vectored","read_vectored","recv","recv","recv_from","recv_from","register","register","register","register","register","register","reregister","reregister","reregister","reregister","reregister","reregister","send","send","send_to","send_to","set_broadcast","set_keepalive","set_keepalive_params","set_linger","set_multicast_loop_v4","set_multicast_loop_v6","set_multicast_ttl_v4","set_nodelay","set_recv_buffer_size","set_reuseaddr","set_reuseport","set_send_buffer_size","set_ttl","set_ttl","set_ttl","shutdown","shutdown","shutdown","take_error","take_error","take_error","take_error","take_error","take_error","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbound","with_interval","with_retries","with_time","write","write","write","write","write_vectored","write_vectored","write_vectored","write_vectored","0","SourceFd","borrow","borrow_mut","deregister","fmt","from","into","pipe","register","reregister","try_from","try_into","type_id","Receiver","Sender","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","deregister","deregister","flush","flush","fmt","fmt","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","new","read","read","read_vectored","read_vectored","register","register","reregister","reregister","set_nonblocking","set_nonblocking","try_from","try_from","try_into","try_into","type_id","type_id","write","write","write_vectored","write_vectored"],"q":["mio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mio::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mio::netmio::unix","","","","","","","","","","","","","","mio::unix::pipe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Interest used in registering.","Polls for readiness events on all registered values.","Returns a <code>Interest</code> set representing readable interests.","Registers I/O resources.","Associates readiness events with <code>event::Source</code>s.","Returns a <code>Interest</code> set representing writable interests.","Waker allows cross-thread waking of <code>Poll</code>.","Add together two <code>Interest</code>.","","","","","","","","","","","","","","","","","","","","","Deregister an <code>event::Source</code> with the <code>Poll</code> instance.","","","Readiness event types and utilities.","Mio’s optional features.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getting started guide.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if <code>Interest</code> contains AIO readiness","Returns true if <code>Interest</code> contains LIO readiness","Returns true if the value includes readable readiness.","Returns true if the value includes writable readiness.","","","Networking primitives.","Return a new <code>Poll</code> handle.","Create a new <code>Waker</code>.","","","Wait for readiness events","Register an <code>event::Source</code> with the <code>Poll</code> instance.","Create a separate <code>Registry</code> which can be used to register …","Removes <code>other</code> <code>Interest</code> from <code>self</code>.","Re-register an <code>event::Source</code> with the <code>Poll</code> instance.","","","Creates a new independently owned <code>Registry</code>.","","","","","","","","","","","","","","","","Unix only extensions.","Wake up the <code>Poll</code> associated with this <code>Waker</code>.","A readiness event.","A collection of readiness events.","<code>Events</code> iterator.","An event source that may be registered with <code>Registry</code>.","","","","","","","Returns the number of <code>Event</code> values that <code>self</code> can hold.","Clearing all <code>Event</code> values from container explicitly.","","","","","","Deregister <code>self</code> from the given <code>Registry</code> instance.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the event contains AIO readiness.","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.","Returns true if the event contains error readiness.","Returns true if the event contains LIO readiness.","Returns true if the event contains priority readiness.","Returns true if the event contains read closed readiness.","Returns true if the event contains readable readiness.","Returns true if the event contains writable readiness.","Returns true if the event contains write closed readiness.","Returns an iterator over the <code>Event</code> values.","","Register <code>self</code> with the given <code>Registry</code> instance.","Re-register <code>self</code> with the given <code>Registry</code> instance.","","","","Returns the event’s token.","","","","","","","","","","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …","An address associated with a <code>mio</code> specific Unix socket.","Configures a socket’s TCP keepalive parameters.","A structure representing a socket server","A non-blocking TCP socket used to configure a stream or …","A non-blocking TCP stream between a local socket and a …","A User Datagram Protocol socket.","A Unix datagram socket.","A non-blocking Unix domain socket server.","A non-blocking Unix stream socket.","Accepts a new <code>TcpStream</code>.","Accepts a new incoming connection to this listener.","Returns the contents of this address if it is a <code>pathname</code> …","","","","","","","","Convenience method to bind a new TCP listener to the …","Creates a UDP socket from the given address.","Creates a Unix datagram socket bound to the given path.","Creates a new <code>UnixListener</code> bound to the specified socket.","Bind <code>addr</code> to the TCP socket.","","","","","","","","","","","","","","","","","","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.","","","Create a new TCP stream and issue a non-blocking connect …","Connects the UDP socket setting the default destination …","Connects the socket to the specified address.","Connects to the socket named by <code>path</code>.","Connect the socket to <code>addr</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>RawFd</code> to a <code>TcpListener</code>.","Converts a <code>RawFd</code> to a <code>TcpStream</code>.","Converts a <code>RawFd</code> to a <code>UdpSocket</code>.","Converts a <code>RawFd</code> to a <code>UnixDatagram</code>.","Converts a <code>RawFd</code> to a <code>UnixListener</code>.","Converts a <code>RawFd</code> to a <code>UnixStream</code>.","Converts a <code>RawFd</code> to a <code>TcpSocket</code>.","Creates a new <code>TcpListener</code> from a standard <code>net::TcpListener</code>.","Creates a new <code>TcpStream</code> from a standard <code>net::TcpStream</code>.","Creates a new <code>UdpSocket</code> from a standard <code>net::UdpSocket</code>.","Creates a new <code>UnixDatagram</code> from a standard …","Creates a new <code>UnixListener</code> from a standard …","Creates a new <code>UnixStream</code> from a standard <code>net::UnixStream</code>.","Returns whether or not TCP keepalive probes will be sent …","Returns the time interval between TCP keepalive probes, if …","Returns the maximum number of TCP keepalive probes that …","Returns the amount of time after which TCP keepalive …","Gets the value of <code>SO_LINGER</code> on this socket","Returns the local address of this socket","Get the value of <code>SO_RCVBUF</code> set on this socket.","Get the value of <code>SO_REUSEADDR</code> set on this socket.","Get the value of <code>SO_REUSEPORT</code> set on this socket. Only …","Get the value of <code>SO_SNDBUF</code> set on this socket.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns <code>true</code> if the address is unnamed.","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.","Listen for inbound connections, converting the socket to a …","Returns the local socket address of this listener.","Returns the socket address of the local half of this TCP …","Returns the socket address that this socket was created …","Returns the address of this socket.","Returns the local socket address of this listener.","Returns the socket address of the local half of this …","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Returns a new, empty set of TCP keepalive parameters.","Create a new IPv4 TCP socket.","Create a new IPv6 TCP socket.","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Get the value of the <code>IPV6_V6ONLY</code> option on this socket.","Create an unnamed pair of connected sockets.","Creates an unnamed pair of connected sockets.","Receives data on the socket from the remote address to …","Receives data from the socket, without removing it from …","Receives data from the socket, without removing it from …","Returns the socket address of the remote peer of this TCP …","Returns the address of this socket’s peer.","Returns the socket address of the remote half of this …","","","","","","","","","Receives data from the socket previously bound with …","Receives data from the socket.","Receives data from the socket. On success, returns the …","Receives data from the socket.","","","","","","","","","","","","","Sends data on the socket to the address previously bound …","Sends data on the socket to the socket’s peer.","Sends data on the socket to the given address. On success, …","Sends data on the socket to the specified address.","Sets the value of the <code>SO_BROADCAST</code> option for this socket.","Sets whether keepalive messages are enabled to be sent on …","Sets parameters configuring TCP keepalive probes for this …","Sets the value of <code>SO_LINGER</code> on this socket.","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the value of <code>SO_RCVBUF</code> on this socket.","Sets the value of <code>SO_REUSEADDR</code> on this socket.","Sets the value of <code>SO_REUSEPORT</code> on this socket. Only …","Sets the value of <code>SO_SNDBUF</code> on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Shuts down the read, write, or both halves of this …","Shut down the read, write, or both halves of this …","Shuts down the read, write, or both halves of this …","Get the value of the <code>SO_ERROR</code> option on this socket.","Get the value of the <code>SO_ERROR</code> option on this socket.","Get the value of the <code>SO_ERROR</code> option on this socket.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","","","","","","","","","","","","","","","","","","","","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","","","","","","","","","","Creates a Unix Datagram socket which is not bound to any …","Sets the time interval between TCP keepalive probes. This …","Sets the maximum number of TCP keepalive probes that will …","on idle connections.","","","","","","","","","","Adapter for <code>RawFd</code> providing an <code>event::Source</code> …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Unix pipe.","","","","","","Receiving end of an Unix pipe.","Sending end of an Unix pipe.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new non-blocking Unix pipe.","","","","","","","","","Set the <code>Sender</code> into or out of non-blocking mode.","Set the <code>Receiver</code> into or out of non-blocking mode.","","","","","","","","","",""],"i":[1,0,0,0,2,0,0,2,0,2,3,4,2,2,3,4,2,1,5,3,4,2,1,5,2,1,2,1,2,1,4,2,1,0,0,3,4,2,1,5,3,4,2,1,5,0,1,3,4,2,1,5,2,2,2,2,2,1,0,3,5,2,1,3,4,3,2,4,2,1,4,3,4,2,1,5,3,4,2,1,5,3,4,2,1,5,0,5,0,0,0,0,6,7,8,6,7,8,6,6,7,8,7,8,8,9,6,7,8,6,7,8,6,7,8,6,8,7,6,7,7,7,7,7,7,7,6,8,9,9,8,7,8,7,6,7,8,6,7,8,6,7,8,6,0,0,0,0,0,0,0,0,0,10,11,12,10,13,14,15,11,16,17,10,14,15,11,17,12,10,13,14,15,11,16,17,18,12,10,13,14,15,11,16,17,18,14,18,18,13,14,15,16,17,18,10,13,14,15,11,16,17,13,13,16,16,12,10,13,14,15,11,16,17,18,12,10,13,14,15,11,16,17,18,10,13,14,15,11,16,17,10,13,14,15,11,16,17,17,17,17,17,17,17,17,17,17,12,10,13,14,15,11,16,17,18,10,13,14,15,11,16,17,12,14,14,14,14,17,10,13,14,15,11,16,14,14,14,18,17,17,13,14,15,16,13,14,14,13,15,16,13,13,16,16,13,13,16,16,14,15,14,15,10,13,14,15,11,16,10,13,14,15,11,16,14,15,14,15,14,17,17,17,14,14,14,13,17,17,17,17,10,13,14,13,15,16,10,13,14,15,11,16,18,12,10,13,14,15,11,16,17,18,12,10,13,14,15,11,16,17,18,10,13,14,12,10,13,14,15,11,16,17,18,15,18,18,18,13,13,16,16,13,13,16,16,19,0,19,19,19,19,19,19,0,19,19,19,19,19,0,0,20,21,20,21,20,21,20,21,20,20,20,21,20,20,21,21,21,20,21,20,21,20,21,0,21,21,21,21,20,21,20,21,20,21,20,21,20,21,20,21,20,20,20,20],"f":[null,null,null,null,null,null,null,null,null,[[["interest",3],["interest",3]],["interest",3]],[[["poll",3]],["rawfd",6]],[[["registry",3]],["rawfd",6]],[[["interest",3],["interest",3]],["interest",3]],[[["interest",3],["interest",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["interest",3]],["interest",3]],[[["token",3]],["token",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["interest",3],["interest",3]],["ordering",4]],[[["token",3],["token",3]],["ordering",4]],[[["registry",3],["",0]],["result",6]],[[["interest",3],["interest",3]],["bool",0]],[[["token",3],["token",3]],["bool",0]],null,null,[[["poll",3],["formatter",3]],["result",6]],[[["registry",3],["formatter",3]],["result",6]],[[["interest",3],["formatter",3]],["result",6]],[[["token",3],["formatter",3]],["result",6]],[[["waker",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[["token",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["interest",3]],["bool",0]],[[["interest",3]],["bool",0]],[[["interest",3]],["bool",0]],[[["interest",3]],["bool",0]],[[["interest",3],["interest",3]],["bool",0]],[[["token",3],["token",3]],["bool",0]],null,[[],["result",6,[["poll",3]]]],[[["registry",3],["token",3]],["result",6,[["waker",3]]]],[[["interest",3],["interest",3]],["option",4,[["ordering",4]]]],[[["token",3],["token",3]],["option",4,[["ordering",4]]]],[[["poll",3],["events",3],["option",4,[["duration",3]]]],["result",6]],[[["registry",3],["",0],["token",3],["interest",3]],["result",6]],[[["poll",3]],["registry",3]],[[["interest",3],["interest",3]],["option",4,[["interest",3]]]],[[["registry",3],["",0],["token",3],["interest",3]],["result",6]],[[["",0]]],[[["",0]]],[[["registry",3]],["result",6,[["registry",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["waker",3]],["result",6]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["events",3]],["usize",0]],[[["events",3]]],[[["event",3]],["event",3]],[[["iter",3]],["iter",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["iter",3]],["usize",0]],[[["",0],["registry",3]],["result",6]],[[["events",3],["formatter",3]],["result",6]],[[["event",3],["formatter",3]],["result",6]],[[["iter",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["events",3]]],[[]],[[["event",3]],["bool",0]],[[["events",3]],["bool",0]],[[["event",3]],["bool",0]],[[["event",3]],["bool",0]],[[["event",3]],["bool",0]],[[["event",3]],["bool",0]],[[["event",3]],["bool",0]],[[["event",3]],["bool",0]],[[["event",3]],["bool",0]],[[["events",3]],["iter",3]],[[["iter",3]],["option",4]],[[["",0],["registry",3],["token",3],["interest",3]],["result",6]],[[["",0],["registry",3],["token",3],["interest",3]],["result",6]],[[["iter",3]]],[[["",0]]],[[["",0]]],[[["event",3]],["token",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0]],["events",3]],null,null,null,null,null,null,null,null,null,[[["tcplistener",3]],["result",6]],[[["unixlistener",3]],["result",6]],[[["socketaddr",3]],["option",4,[["path",3]]]],[[["tcplistener",3]],["rawfd",6]],[[["tcpstream",3]],["rawfd",6]],[[["udpsocket",3]],["rawfd",6]],[[["unixdatagram",3]],["rawfd",6]],[[["unixlistener",3]],["rawfd",6]],[[["unixstream",3]],["rawfd",6]],[[["tcpsocket",3]],["rawfd",6]],[[["socketaddr",4]],["result",6,[["tcplistener",3]]]],[[["socketaddr",4]],["result",6,[["udpsocket",3]]]],[[["asref",8,[["path",3]]]],["result",6,[["unixdatagram",3]]]],[[["asref",8,[["path",3]]]],["result",6,[["unixlistener",3]]]],[[["tcpsocket",3],["socketaddr",4]],["result",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[["tcpkeepalive",3]],["tcpkeepalive",3]],[[["",0],["",0]]],[[["socketaddr",4]],["result",6,[["tcpstream",3]]]],[[["udpsocket",3],["socketaddr",4]],["result",6]],[[["unixdatagram",3],["asref",8,[["path",3]]]],["result",6]],[[["asref",8,[["path",3]]]],["result",6,[["unixstream",3]]]],[[["tcpsocket",3],["socketaddr",4]],["result",6,[["tcpstream",3]]]],[[],["tcpkeepalive",3]],[[["tcplistener",3],["registry",3]],["result",6]],[[["tcpstream",3],["registry",3]],["result",6]],[[["udpsocket",3],["registry",3]],["result",6]],[[["unixdatagram",3],["registry",3]],["result",6]],[[["unixlistener",3],["registry",3]],["result",6]],[[["unixstream",3],["registry",3]],["result",6]],[[["tcpsocket",3]]],[[["tcpstream",3]],["result",6]],[[["tcpstream",3]],["result",6]],[[["unixstream",3]],["result",6]],[[["unixstream",3]],["result",6]],[[["socketaddr",3],["formatter",3]],["result",6]],[[["tcplistener",3],["formatter",3]],["result",6]],[[["tcpstream",3],["formatter",3]],["result",6]],[[["udpsocket",3],["formatter",3]],["result",6]],[[["unixdatagram",3],["formatter",3]],["result",6]],[[["unixlistener",3],["formatter",3]],["result",6]],[[["unixstream",3],["formatter",3]],["result",6]],[[["tcpsocket",3],["formatter",3]],["result",6]],[[["tcpkeepalive",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rawfd",6]],["tcplistener",3]],[[["rawfd",6]],["tcpstream",3]],[[["rawfd",6]],["udpsocket",3]],[[["rawfd",6]],["unixdatagram",3]],[[["rawfd",6]],["unixlistener",3]],[[["rawfd",6]],["unixstream",3]],[[["rawfd",6]],["tcpsocket",3]],[[["tcplistener",3]],["tcplistener",3]],[[["tcpstream",3]],["tcpstream",3]],[[["udpsocket",3]],["udpsocket",3]],[[["unixdatagram",3]],["unixdatagram",3]],[[["unixlistener",3]],["unixlistener",3]],[[["unixstream",3]],["unixstream",3]],[[["tcpsocket",3]],["result",6,[["bool",0]]]],[[["tcpsocket",3]],["result",6,[["option",4,[["duration",3]]]]]],[[["tcpsocket",3]],["result",6,[["option",4,[["u32",0]]]]]],[[["tcpsocket",3]],["result",6,[["option",4,[["duration",3]]]]]],[[["tcpsocket",3]],["result",6,[["option",4,[["duration",3]]]]]],[[["tcpsocket",3]],["result",6,[["socketaddr",4]]]],[[["tcpsocket",3]],["result",6,[["u32",0]]]],[[["tcpsocket",3]],["result",6,[["bool",0]]]],[[["tcpsocket",3]],["result",6,[["bool",0]]]],[[["tcpsocket",3]],["result",6,[["u32",0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tcplistener",3]],["rawfd",6]],[[["tcpstream",3]],["rawfd",6]],[[["udpsocket",3]],["rawfd",6]],[[["unixdatagram",3]],["rawfd",6]],[[["unixlistener",3]],["rawfd",6]],[[["unixstream",3]],["rawfd",6]],[[["tcpsocket",3]],["rawfd",6]],[[["socketaddr",3]],["bool",0]],[[["udpsocket",3],["ipv4addr",3],["ipv4addr",3]],["result",6]],[[["udpsocket",3],["ipv6addr",3],["u32",0]],["result",6]],[[["udpsocket",3],["ipv4addr",3],["ipv4addr",3]],["result",6]],[[["udpsocket",3],["ipv6addr",3],["u32",0]],["result",6]],[[["tcpsocket",3],["u32",0]],["result",6,[["tcplistener",3]]]],[[["tcplistener",3]],["result",6,[["socketaddr",4]]]],[[["tcpstream",3]],["result",6,[["socketaddr",4]]]],[[["udpsocket",3]],["result",6,[["socketaddr",4]]]],[[["unixdatagram",3]],["result",6,[["socketaddr",3]]]],[[["unixlistener",3]],["result",6,[["socketaddr",3]]]],[[["unixstream",3]],["result",6,[["socketaddr",3]]]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[["udpsocket",3]],["result",6,[["u32",0]]]],[[],["tcpkeepalive",3]],[[],["result",6,[["tcpsocket",3]]]],[[],["result",6,[["tcpsocket",3]]]],[[["tcpstream",3]],["result",6,[["bool",0]]]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[],["result",6]],[[],["result",6]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["udpsocket",3]],["result",6,[["usize",0]]]],[[["udpsocket",3]],["result",6]],[[["tcpstream",3]],["result",6,[["socketaddr",4]]]],[[["unixdatagram",3]],["result",6,[["socketaddr",3]]]],[[["unixstream",3]],["result",6,[["socketaddr",3]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["udpsocket",3]],["result",6,[["usize",0]]]],[[["unixdatagram",3]],["result",6,[["usize",0]]]],[[["udpsocket",3]],["result",6]],[[["unixdatagram",3]],["result",6]],[[["tcplistener",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["tcpstream",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["udpsocket",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["unixdatagram",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["unixlistener",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["unixstream",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["tcplistener",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["tcpstream",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["udpsocket",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["unixdatagram",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["unixlistener",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["unixstream",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["udpsocket",3]],["result",6,[["usize",0]]]],[[["unixdatagram",3]],["result",6,[["usize",0]]]],[[["udpsocket",3],["socketaddr",4]],["result",6,[["usize",0]]]],[[["unixdatagram",3],["asref",8,[["path",3]]]],["result",6,[["usize",0]]]],[[["udpsocket",3],["bool",0]],["result",6]],[[["tcpsocket",3],["bool",0]],["result",6]],[[["tcpsocket",3],["tcpkeepalive",3]],["result",6]],[[["tcpsocket",3],["option",4,[["duration",3]]]],["result",6]],[[["udpsocket",3],["bool",0]],["result",6]],[[["udpsocket",3],["bool",0]],["result",6]],[[["udpsocket",3],["u32",0]],["result",6]],[[["tcpstream",3],["bool",0]],["result",6]],[[["tcpsocket",3],["u32",0]],["result",6]],[[["tcpsocket",3],["bool",0]],["result",6]],[[["tcpsocket",3],["bool",0]],["result",6]],[[["tcpsocket",3],["u32",0]],["result",6]],[[["tcplistener",3],["u32",0]],["result",6]],[[["tcpstream",3],["u32",0]],["result",6]],[[["udpsocket",3],["u32",0]],["result",6]],[[["tcpstream",3],["shutdown",4]],["result",6]],[[["unixdatagram",3],["shutdown",4]],["result",6]],[[["unixstream",3],["shutdown",4]],["result",6]],[[["tcplistener",3]],["result",6,[["option",4,[["error",3]]]]]],[[["tcpstream",3]],["result",6,[["option",4,[["error",3]]]]]],[[["udpsocket",3]],["result",6,[["option",4,[["error",3]]]]]],[[["unixdatagram",3]],["result",6,[["option",4,[["error",3]]]]]],[[["unixlistener",3]],["result",6,[["option",4,[["error",3]]]]]],[[["unixstream",3]],["result",6,[["option",4,[["error",3]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tcplistener",3]],["result",6,[["u32",0]]]],[[["tcpstream",3]],["result",6,[["u32",0]]]],[[["udpsocket",3]],["result",6,[["u32",0]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",6,[["unixdatagram",3]]]],[[["tcpkeepalive",3],["duration",3]],["tcpkeepalive",3]],[[["tcpkeepalive",3],["u32",0]],["tcpkeepalive",3]],[[["tcpkeepalive",3],["duration",3]],["tcpkeepalive",3]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["sourcefd",3],["registry",3]],["result",6]],[[["sourcefd",3],["formatter",3]],["result",6]],[[]],[[]],null,[[["sourcefd",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["sourcefd",3],["registry",3],["token",3],["interest",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["sender",3]],["rawfd",6]],[[["receiver",3]],["rawfd",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sender",3],["registry",3]],["result",6]],[[["receiver",3],["registry",3]],["result",6]],[[["sender",3]],["result",6]],[[["sender",3]],["result",6]],[[["sender",3],["formatter",3]],["result",6]],[[["receiver",3],["formatter",3]],["result",6]],[[["childstdin",3]],["sender",3]],[[]],[[["childstdout",3]],["receiver",3]],[[["childstderr",3]],["receiver",3]],[[]],[[["rawfd",6]],["sender",3]],[[["rawfd",6]],["receiver",3]],[[]],[[]],[[["sender",3]],["rawfd",6]],[[["receiver",3]],["rawfd",6]],[[],["result",6]],[[["receiver",3]],["result",6,[["usize",0]]]],[[["receiver",3]],["result",6,[["usize",0]]]],[[["receiver",3]],["result",6,[["usize",0]]]],[[["receiver",3]],["result",6,[["usize",0]]]],[[["sender",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["receiver",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["sender",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["receiver",3],["registry",3],["token",3],["interest",3]],["result",6]],[[["sender",3],["bool",0]],["result",6]],[[["receiver",3],["bool",0]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["sender",3]],["result",6,[["usize",0]]]],[[["sender",3]],["result",6,[["usize",0]]]],[[["sender",3]],["result",6,[["usize",0]]]],[[["sender",3]],["result",6,[["usize",0]]]]],"p":[[3,"Token"],[3,"Interest"],[3,"Poll"],[3,"Registry"],[3,"Waker"],[3,"Events"],[3,"Event"],[3,"Iter"],[8,"Source"],[3,"TcpListener"],[3,"UnixListener"],[3,"SocketAddr"],[3,"TcpStream"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixStream"],[3,"TcpSocket"],[3,"TcpKeepalive"],[3,"SourceFd"],[3,"Sender"],[3,"Receiver"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","t":[5,5],"n":["get","get_physical"],"q":["num_cpus",""],"d":["Returns the number of available CPUs of the current system.","Returns the number of physical cores of the current system."],"i":[0,0],"f":[[[],["usize",0]],[[],["usize",0]]],"p":[]},\
"once_cell":{"doc":"Overview","t":[0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","drop","fmt","fmt","fmt","from","from","from","get","get","get","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","new","new","new","set","set","set","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["once_cell","","","once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["“First one wins” flavor of <code>OnceCell</code>.","","","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the underlying value.","Gets the underlying value.","Gets a reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","","","","","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","","","",""],"i":[0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,4,5,4,5,4,4,4,5,5,5,4,4,5,5,4,4,4,5,4,4,4,4,4,4,5,4,5,4,5,4,4,4,4,5,4,5,4,5,0,0,6,7,6,7,6,6,6,7,7,7,6,6,7,7,6,6,6,7,6,6,6,6,6,7,6,7,6,7,6,6,6,6,7,6,7,6,7],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[],["oncebox",3]],[[["oncebox",3]]],[[["oncenonzerousize",3],["formatter",3]],["result",6]],[[["oncebool",3],["formatter",3]],["result",6]],[[["oncebox",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["oncenonzerousize",3]],["option",4,[["nonzerousize",3]]]],[[["oncebool",3]],["option",4,[["bool",0]]]],[[["oncebox",3]],["option",4]],[[["oncenonzerousize",3]],["nonzerousize",3]],[[["oncebool",3]],["bool",0]],[[["oncebox",3]],["",0]],[[["oncenonzerousize",3]],["result",4,[["nonzerousize",3]]]],[[["oncebool",3]],["result",4,[["bool",0]]]],[[["oncebox",3]],["result",4]],[[]],[[]],[[]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[],["oncebox",3]],[[["oncenonzerousize",3],["nonzerousize",3]],["result",4]],[[["oncebool",3],["bool",0]],["result",4]],[[["oncebox",3],["box",3]],["result",4,[["box",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["oncecell",3,[["clone",8]]]],["oncecell",3,[["clone",8]]]],[[["",0],["",0]]],[[],["oncecell",3]],[[],["lazy",3,[["default",8]]]],[[["lazy",3,[["fnonce",8]]]],["",0]],[[["lazy",3,[["fnonce",8]]]],["",0]],[[["oncecell",3,[["partialeq",8]]],["oncecell",3]],["bool",0]],[[["oncecell",3,[["debug",8]]],["formatter",3]],["result",6]],[[["lazy",3,[["debug",8]]],["formatter",3]],["result",6]],[[["lazy",3]],["",0]],[[]],[[["never",0]]],[[],["oncecell",3]],[[]],[[["oncecell",3]],["option",4]],[[["oncecell",3]],["option",4]],[[["oncecell",3]],["",0]],[[["oncecell",3]],["result",4]],[[["oncecell",3]],["",0]],[[]],[[]],[[["oncecell",3]],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[["oncecell",3]],["result",4]],[[["oncecell",3]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["oncecell",3,[["clone",8]]]],["oncecell",3,[["clone",8]]]],[[["",0],["",0]]],[[],["oncecell",3]],[[],["lazy",3,[["default",8]]]],[[["lazy",3,[["fnonce",8]]]],["",0]],[[["lazy",3,[["fnonce",8]]]],["",0]],[[["oncecell",3,[["partialeq",8]]],["oncecell",3,[["partialeq",8]]]],["bool",0]],[[["oncecell",3,[["debug",8]]],["formatter",3]],["result",6]],[[["lazy",3,[["debug",8]]],["formatter",3]],["result",6]],[[["lazy",3]],["",0]],[[],["oncecell",3]],[[]],[[["never",0]]],[[]],[[["oncecell",3]],["option",4]],[[["oncecell",3]],["option",4]],[[["oncecell",3]],["",0]],[[["oncecell",3]],["result",4]],[[]],[[]],[[["oncecell",3]],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[["oncecell",3]],["result",4]],[[["oncecell",3]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceBox"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]},\
"parking_lot":{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","t":[3,13,6,6,13,6,6,6,6,6,6,6,13,3,4,13,3,3,3,3,6,6,6,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Condvar","Done","FairMutex","FairMutexGuard","InProgress","MappedFairMutexGuard","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","New","Once","OnceState","Poisoned","RawFairMutex","RawMutex","RawRwLock","RawThreadId","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","WaitTimeoutResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump_exclusive","bump_shared","bump_upgradable","call_once","call_once_force","clone","clone","clone_into","clone_into","const_fair_mutex","const_mutex","const_reentrant_mutex","const_rwlock","default","default","done","downgrade","downgrade_to_upgradable","downgrade_upgradable","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_locked","is_locked","is_locked","lock","lock","lock_api","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","ne","new","new","nonzero_thread_id","notify_all","notify_one","poisoned","state","timed_out","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade","try_upgrade_for","try_upgrade_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","upgrade","wait","wait_for","wait_until"],"q":["parking_lot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Condition Variable","A closure has completed successfully.","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","A thread is currently executing a closure.","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, which …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A closure has not been executed yet","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure was executed but panicked.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","A type indicating whether a timed wait on a condition …","","","","","","","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once</code> except ignores …","","","","","Creates a new fair mutex in an unlocked state ready for …","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","Returns whether the associated <code>Once</code> has successfully …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new condition variable which is ready to be …","Creates a new <code>Once</code> value.","","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Returns whether the associated <code>Once</code> has been poisoned.","Returns the current state of this <code>Once</code>.","Returns whether the wait was known to have timed out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …"],"i":[0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,4,5,6,6,6,3,3,8,1,8,1,0,0,0,0,2,3,1,6,6,6,8,1,2,3,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,4,5,6,4,5,0,6,6,6,6,8,2,3,7,2,2,1,3,8,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,4,5,6,6,6,4,5,6,6,6,6,6,6,4,5,6,6,6,6,6,6,2,3,4,5,6,7,8,1,4,5,6,6,4,5,6,6,6,6,6,2,2,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rawfairmutex",3]]],[[["rawmutex",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["once",3]]],[[["once",3]]],[[["waittimeoutresult",3]],["waittimeoutresult",3]],[[["oncestate",4]],["oncestate",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["fairmutex",6]],[[],["mutex",6]],[[],["reentrantmutex",6]],[[],["rwlock",6]],[[],["condvar",3]],[[],["once",3]],[[["oncestate",4]],["bool",0]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["waittimeoutresult",3],["waittimeoutresult",3]],["bool",0]],[[["oncestate",4],["oncestate",4]],["bool",0]],[[["condvar",3],["formatter",3]],["result",6]],[[["once",3],["formatter",3]],["result",6]],[[["waittimeoutresult",3],["formatter",3]],["result",6]],[[["oncestate",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rawfairmutex",3]],["bool",0]],[[["rawmutex",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawfairmutex",3]]],[[["rawmutex",3]]],null,[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["waittimeoutresult",3],["waittimeoutresult",3]],["bool",0]],[[],["condvar",3]],[[],["once",3]],[[["rawthreadid",3]],["nonzerousize",3]],[[["condvar",3]],["usize",0]],[[["condvar",3]],["bool",0]],[[["oncestate",4]],["bool",0]],[[["once",3]],["oncestate",4]],[[["waittimeoutresult",3]],["bool",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["rawfairmutex",3]],["bool",0]],[[["rawmutex",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3],["duration",3]],["bool",0]],[[["rawrwlock",3],["instant",6]],["bool",0]],[[["rawfairmutex",3]],["bool",0]],[[["rawmutex",3],["duration",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawfairmutex",3]],["bool",0]],[[["rawmutex",3],["instant",6]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3],["duration",3]],["bool",0]],[[["rawrwlock",3],["instant",6]],["bool",0]],[[["rawrwlock",3]],["bool",0]],[[["rawrwlock",3],["duration",3]],["bool",0]],[[["rawrwlock",3],["instant",6]],["bool",0]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["rawfairmutex",3]]],[[["rawmutex",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawfairmutex",3]]],[[["rawmutex",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["rawrwlock",3]]],[[["condvar",3],["mutexguard",6]]],[[["condvar",3],["mutexguard",6],["duration",3]],["waittimeoutresult",3]],[[["condvar",3],["mutexguard",6],["instant",6]],["waittimeoutresult",3]]],"p":[[4,"OnceState"],[3,"Condvar"],[3,"Once"],[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"],[3,"WaitTimeoutResult"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your own …","t":[12,12,13,17,17,4,13,4,3,13,13,4,13,3,13,13,13,13,13,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,12,12,5,5],"n":["0","0","Abort","DEFAULT_PARK_TOKEN","DEFAULT_UNPARK_TOKEN","FilterOp","Invalid","ParkResult","ParkToken","RequeueAll","RequeueOne","RequeueOp","Skip","SpinWait","Stop","TimedOut","Unpark","UnparkOne","UnparkOneRequeueRest","UnparkResult","UnparkToken","Unparked","be_fair","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadlock","default","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","have_more_threads","into","into","into","into","into","into","into","is_unparked","ne","ne","ne","ne","new","park","requeued_threads","reset","spin","spin_no_yield","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpark_all","unpark_filter","unpark_one","unpark_requeue","unparked_threads","0","acquire_resource","release_resource"],"q":["parking_lot_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","parking_lot_core::ParkResult","parking_lot_core::deadlock",""],"d":["","","Abort the operation without doing anything.","A default park token to use.","A default unpark token to use.","Operation that <code>unpark_filter</code> should perform for each …","The validation callback returned false.","Result of a park operation.","A value associated with a parked thread which can be used …","Requeue all threads onto the target queue.","Requeue one thread and leave the rest parked on the …","Operation that <code>unpark_requeue</code> should perform.","Don’t unpark the thread and continue scanning the list …","A counter used to perform exponential backoff in spin …","Don’t unpark the thread and stop scanning the list of …","The timeout expired.","Unpark the thread and continue scanning the list of parked …","Unpark one thread and leave the rest parked. No requeuing …","Unpark one thread and requeue the rest onto the target …","Result of an unpark operation.","A value which is passed from an unparker to a parked …","We were unparked by another thread with the given token.","This is set to true on average once every 0.5ms for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","[Experimental] Deadlock detection","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether there are any threads remaining in the queue. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if we were unparked by another thread.","","","","","Creates a new <code>SpinWait</code>.","Parks the current thread in the queue associated with the …","The number of threads that were requeued.","Resets a <code>SpinWait</code> to its initial state.","Spins until the sleep threshold has been reached.","Spins without yielding the thread to the OS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unparks all threads in the queue associated with the given …","Unparks a number of threads from the front of the queue …","Unparks one thread from the queue associated with the …","Removes all threads from the queue associated with <code>key_from</code>…","The number of threads that were unparked.","","Acquire a resource identified by key in the deadlock …","Release a resource identified by key in the deadlock …"],"i":[1,2,3,0,0,0,4,0,0,3,3,0,5,0,5,4,5,3,3,0,0,4,6,4,6,3,5,1,2,7,4,6,3,5,1,2,7,4,6,3,5,1,2,4,6,3,5,1,2,0,6,7,4,6,3,5,1,2,4,6,3,5,1,2,4,6,3,5,1,2,7,6,4,6,3,5,1,2,7,4,4,6,1,2,7,0,6,7,7,7,4,6,3,5,1,2,4,6,3,5,1,2,7,4,6,3,5,1,2,7,4,6,3,5,1,2,7,0,0,0,0,6,8,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parkresult",4]],["parkresult",4]],[[["unparkresult",3]],["unparkresult",3]],[[["requeueop",4]],["requeueop",4]],[[["filterop",4]],["filterop",4]],[[["unparktoken",3]],["unparktoken",3]],[[["parktoken",3]],["parktoken",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["unparkresult",3]],[[],["spinwait",3]],[[["parkresult",4],["parkresult",4]],["bool",0]],[[["unparkresult",3],["unparkresult",3]],["bool",0]],[[["requeueop",4],["requeueop",4]],["bool",0]],[[["filterop",4],["filterop",4]],["bool",0]],[[["unparktoken",3],["unparktoken",3]],["bool",0]],[[["parktoken",3],["parktoken",3]],["bool",0]],[[["parkresult",4],["formatter",3]],["result",6]],[[["unparkresult",3],["formatter",3]],["result",6]],[[["requeueop",4],["formatter",3]],["result",6]],[[["filterop",4],["formatter",3]],["result",6]],[[["unparktoken",3],["formatter",3]],["result",6]],[[["parktoken",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["parkresult",4]],["bool",0]],[[["parkresult",4],["parkresult",4]],["bool",0]],[[["unparkresult",3],["unparkresult",3]],["bool",0]],[[["unparktoken",3],["unparktoken",3]],["bool",0]],[[["parktoken",3],["parktoken",3]],["bool",0]],[[],["spinwait",3]],[[["usize",0],["fnonce",8],["fnonce",8],["fnonce",8],["parktoken",3],["option",4,[["instant",6]]]],["parkresult",4]],null,[[["spinwait",3]]],[[["spinwait",3]],["bool",0]],[[["spinwait",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0],["unparktoken",3]],["usize",0]],[[["usize",0],["fnmut",8],["fnonce",8]],["unparkresult",3]],[[["usize",0],["fnonce",8]],["unparkresult",3]],[[["usize",0],["usize",0],["fnonce",8],["fnonce",8]],["unparkresult",3]],null,null,[[["usize",0]]],[[["usize",0]]]],"p":[[3,"UnparkToken"],[3,"ParkToken"],[4,"RequeueOp"],[4,"ParkResult"],[4,"FilterOp"],[3,"UnparkResult"],[3,"SpinWait"],[13,"Unparked"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":[14],"n":["pin_project"],"q":["pin_project_lite"],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[null],"p":[]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the compiler…","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[1,2,2,0,0,3,0,3,1,0,0,3,2,2,0,3,0,0,0,0,4,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,7,10,6,7,3,8,2,4,1,9,10,6,7,3,8,2,4,1,9,10,9,6,8,2,1,9,9,6,6,10,10,10,10,5,5,6,6,7,3,3,8,8,2,4,4,1,9,9,10,10,5,6,6,6,7,7,3,3,3,3,3,8,2,4,1,9,10,6,6,6,9,10,10,10,10,10,10,10,10,10,10,5,6,7,3,8,2,4,1,9,10,6,6,10,10,7,7,7,6,8,4,9,9,7,3,8,4,9,10,4,5,3,8,4,9,10,8,8,8,10,10,6,7,3,8,2,4,1,9,10,5,6,3,8,4,9,10,0,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,10,10,10,10,10,10,10,10,10,7,10,10,11,12,13,14,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["punct",3]],["char",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["literal",3]],[[],["span",3]],[[["char",0]],["literal",3]],[[["tokenstream",3]],["tokenstream",3]],[[["span",3]],["span",3]],[[["tokentree",4]],["tokentree",4]],[[["group",3]],["group",3]],[[["delimiter",4]],["delimiter",4]],[[["punct",3]],["punct",3]],[[["spacing",4]],["spacing",4]],[[["ident",3]],["ident",3]],[[["literal",3]],["literal",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ident",3],["ident",3]],["ordering",4]],[[],["tokenstream",3]],[[["group",3]],["delimiter",4]],[[["delimiter",4],["delimiter",4]],["bool",0]],[[["spacing",4],["spacing",4]],["bool",0]],[[["ident",3],["",0]],["bool",0]],[[["ident",3],["ident",3]],["bool",0]],[[["tokenstream",3],["intoiterator",8]]],[[["tokenstream",3],["intoiterator",8]]],[[["f32",0]],["literal",3]],[[["f32",0]],["literal",3]],[[["f64",0]],["literal",3]],[[["f64",0]],["literal",3]],[[["lexerror",3],["formatter",3]],["result",6]],[[["lexerror",3],["formatter",3]],["result",6]],[[["tokenstream",3],["formatter",3]],["result",6]],[[["tokenstream",3],["formatter",3]],["result",6]],[[["span",3],["formatter",3]],["result",6]],[[["tokentree",4],["formatter",3]],["result",6]],[[["tokentree",4],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["delimiter",4],["formatter",3]],["result",6]],[[["punct",3],["formatter",3]],["result",6]],[[["punct",3],["formatter",3]],["result",6]],[[["spacing",4],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[]],[[["tokenstream",3]],["tokenstream",3]],[[["tokentree",4]],["tokenstream",3]],[[]],[[["span",3]],["span",3]],[[]],[[["group",3]],["tokentree",4]],[[["ident",3]],["tokentree",4]],[[["punct",3]],["tokentree",4]],[[["literal",3]],["tokentree",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["tokenstream",3]],[[["intoiterator",8]],["tokenstream",3]],[[["str",0]],["result",4,[["tokenstream",3],["lexerror",3]]]],[[["ident",3],["",0]]],[[["i128",0]],["literal",3]],[[["i128",0]],["literal",3]],[[["i16",0]],["literal",3]],[[["i16",0]],["literal",3]],[[["i32",0]],["literal",3]],[[["i32",0]],["literal",3]],[[["i64",0]],["literal",3]],[[["i64",0]],["literal",3]],[[["i8",0]],["literal",3]],[[["i8",0]],["literal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenstream",3]],["intoiter",3]],[[["tokenstream",3]],["bool",0]],[[["isize",0]],["literal",3]],[[["isize",0]],["literal",3]],[[["span",3],["span",3]],["option",4,[["span",3]]]],[[["span",3],["span",3]],["span",3]],[[],["span",3]],[[],["tokenstream",3]],[[["delimiter",4],["tokenstream",3]],["group",3]],[[["char",0],["spacing",4]],["punct",3]],[[["str",0],["span",3]],["ident",3]],[[["ident",3],["ident",3]],["option",4,[["ordering",4]]]],[[["span",3],["span",3]],["span",3]],[[["tokentree",4],["span",3]]],[[["group",3],["span",3]]],[[["punct",3],["span",3]]],[[["ident",3],["span",3]]],[[["literal",3],["span",3]]],[[["punct",3]],["spacing",4]],[[["lexerror",3]],["span",3]],[[["tokentree",4]],["span",3]],[[["group",3]],["span",3]],[[["punct",3]],["span",3]],[[["ident",3]],["span",3]],[[["literal",3]],["span",3]],[[["group",3]],["span",3]],[[["group",3]],["span",3]],[[["group",3]],["tokenstream",3]],[[["str",0]],["literal",3]],[[["literal",3],["rangebounds",8,[["usize",0]]]],["option",4,[["span",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u128",0]],["literal",3]],[[["u128",0]],["literal",3]],[[["u16",0]],["literal",3]],[[["u16",0]],["literal",3]],[[["u32",0]],["literal",3]],[[["u32",0]],["literal",3]],[[["u64",0]],["literal",3]],[[["u64",0]],["literal",3]],[[["u8",0]],["literal",3]],[[["u8",0]],["literal",3]],[[["span",3]],["span",3]],[[["usize",0]],["literal",3]],[[["usize",0]],["literal",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3]],["intoiter",3]],[[["",0],["",0]]],[[["intoiter",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["intoiter",3]],["option",4,[["tokentree",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Spacing"],[4,"Delimiter"],[4,"TokenTree"],[3,"Punct"],[3,"LexError"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Ident"],[3,"Literal"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,2,0,3,3,0,0,2,2,3,3,3],"f":[null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],null,[[],["tokenstream",3]],[[],["tokenstream",3]],null,null,[[["",0]],["option",4,[["span",3]]]],[[["",0]],["option",4,[["span",3]]]],[[["",0]],["tokenstream",3]],[[["",0]],["tokenstream",3]],[[["",0],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"regex":{"doc":"This crate provides a library for parsing, compiling, and …","tn":["0","CaptureLocations","CaptureMatches","CaptureNames","Captures","CompiledTooBig","Error","Match","Matches","NoExpand","Regex","RegexBuilder","RegexSet","RegexSetBuilder","Replacer","ReplacerRef","SetMatches","SetMatchesIntoIter","SetMatchesIter","Split","SplitN","SubCaptureMatches","Syntax","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","by_ref","by_ref","bytes","capture_locations","capture_names","captures","captures_iter","captures_len","captures_read","captures_read_at","case_insensitive","case_insensitive","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","description","dfa_size_limit","dfa_size_limit","dot_matches_new_line","dot_matches_new_line","empty","end","eq","eq","escape","expand","find","find_at","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get","get","ignore_whitespace","ignore_whitespace","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_match","is_match","is_match_at","iter","iter","len","len","len","len","matched","matched_any","matches","multi_line","multi_line","name","ne","ne","nest_limit","nest_limit","new","new","new","new","next","next","next","next","next","next","next","next","next_back","next_back","no_expansion","no_expansion","no_expansion","no_expansion","octal","octal","patterns","range","replace","replace_all","replace_append","replace_append","replace_append","replacen","shortest_match","shortest_match_at","size_hint","size_hint","size_hint","size_hint","size_limit","size_limit","split","splitn","start","swap_greed","swap_greed","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode","unicode","0","0","0","CaptureLocations","CaptureMatches","CaptureNames","Captures","Match","Matches","NoExpand","Regex","RegexBuilder","RegexSet","RegexSetBuilder","Replacer","ReplacerRef","SetMatches","SetMatchesIntoIter","SetMatchesIter","Split","SplitN","SubCaptureMatches","as_bytes","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","by_ref","by_ref","capture_locations","capture_names","captures","captures_iter","captures_len","captures_read","captures_read_at","case_insensitive","case_insensitive","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","dfa_size_limit","dfa_size_limit","dot_matches_new_line","dot_matches_new_line","empty","end","eq","expand","find","find_at","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get","get","ignore_whitespace","ignore_whitespace","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_match","is_match","is_match_at","iter","iter","len","len","len","len","matched","matched_any","matches","multi_line","multi_line","name","ne","nest_limit","nest_limit","new","new","new","new","next","next","next","next","next","next","next","next","next_back","next_back","no_expansion","no_expansion","no_expansion","no_expansion","octal","octal","patterns","range","replace","replace_all","replace_append","replace_append","replace_append","replacen","shortest_match","shortest_match_at","size_hint","size_hint","size_hint","size_hint","size_limit","size_limit","split","splitn","start","swap_greed","swap_greed","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode","unicode"],"q":["regexregex::Error","","regex::bytesd":["","CaptureLocations is a low level representation of the raw …","An iterator that yields all non-overlapping capture groups …","An iterator over the names of all possible captures.","Captures represents a group of captured strings for a …","The compiled program exceeded the set size limit. The …","An error that occurred during parsing or compiling a …","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a …","<code>NoExpand</code> indicates literal string replacement.","A compiled regular expression for matching Unicode strings.","A configurable builder for a regular expression.","Match multiple (possibly overlapping) regular expressions …","A configurable builder for a set of regular expressions.","Replacer describes types that can be used to replace …","By-reference adaptor for a <code>Replacer</code>","A set of matches returned by a regex set.","An owned iterator over the set of matches from a regex set.","A borrowed iterator over the set of matches from a regex …","Yields all substrings delimited by a regular expression …","Yields at most <code>N</code> substrings delimited by a regular …","An iterator that yields all capturing matches in the order …","A syntax error.","Returns the matched text.","Returns the original string of this regex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the builder and compile the regular expression.","Consume the builder and compile the regular expressions …","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.","Match regular expressions on arbitrary bytes.","Returns an empty set of capture locations that can be …","Returns an iterator over the capture names.","Returns the capture groups corresponding to the …","Returns an iterator over all the non-overlapping capture …","Returns the number of captures.","This is like <code>captures</code>, but uses <code>CaptureLocations</code> instead of","Returns the same as captures, but starts the search at the …","Set the value for the case insensitive (<code>i</code>) flag.","Set the value for the case insensitive (<code>i</code>) flag.","","","","","","","","","","","","","","","","","","","","","","","Set the approximate size of the cache used by the DFA.","Set the approximate size of the cache used by the DFA.","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …","Create a new empty regex set.","Returns the ending byte offset of the match in the …","","","Escapes all regular expression meta characters in <code>text</code>.","Expands all instances of <code>$name</code> in <code>replacement</code> to the …","Returns the start and end byte range of the leftmost-first …","Returns the same as find, but starts the search at the …","Returns an iterator for each successive non-overlapping …","","","","","","","","","","","Shows the original regular expression.","Shows the original regular expression.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempts to parse a string into a regular expression","Returns the match associated with the capture group at …","Returns the start and end positions of the Nth capture …","Set the value for the ignore whitespace (<code>x</code>) flag.","Set the value for the ignore whitespace (<code>x</code>) flag.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns <code>true</code> if this set contains no regular expressions.","Returns true if and only if one of the regexes in this set …","Returns true if and only if there is a match for the regex …","Returns the same as is_match, but starts the search at the …","An iterator that yields all capturing matches in the order …","Returns an iterator over indexes in the regex that matched.","Returns the number of captured groups.","Returns the total number of regular expressions in this …","The total number of regexes in the set that created these …","Returns the total number of capturing groups.","Whether the regex at the given index matched.","Whether this set contains any matches.","Returns the set of regular expressions that match in the …","Set the value for the multi-line matching (<code>m</code>) flag.","Set the value for the multi-line matching (<code>m</code>) flag.","Returns the match for the capture group named <code>name</code>. If <code>name</code>…","","","Set the nesting limit for this parser.","Set the nesting limit for this parser.","Create a new regular expression builder with the given …","Create a new regular expression builder with the given …","Create a new regex set with the given regular expressions.","Compiles a regular expression. Once compiled, it can be …","","","","","","","","","","","Return a fixed unchanging replacement string.","Return a fixed unchanging replacement string.","","","Whether to support octal syntax or not.","Whether to support octal syntax or not.","Returns the patterns that this set will match on.","Returns the range over the starting and ending byte …","Replaces the leftmost-first match with the replacement …","Replaces all non-overlapping matches in <code>text</code> with the …","Appends text to <code>dst</code> to replace the current match.","","","Replaces at most <code>limit</code> non-overlapping matches in <code>text</code> …","Returns the end location of a match in the text given.","Returns the same as shortest_match, but starts the search …","","","","","Set the approximate size limit of the compiled regular …","Set the approximate size limit of the compiled regular …","Returns an iterator of substrings of <code>text</code> delimited by a …","Returns an iterator of at most <code>limit</code> substrings of <code>text</code> …","Returns the starting byte offset of the match in the …","Set the value for the greedy swap (<code>U</code>) flag.","Set the value for the greedy swap (<code>U</code>) flag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value for the Unicode (<code>u</code>) flag.","Set the value for the Unicode (<code>u</code>) flag.","","","","CaptureLocations is a low level representation of the raw …","An iterator that yields all non-overlapping capture groups …","An iterator over the names of all possible captures.","Captures represents a group of captured byte strings for a …","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a …","<code>NoExpand</code> indicates literal byte string replacement.","A compiled regular expression for matching arbitrary bytes.","A configurable builder for a regular expression.","Match multiple (possibly overlapping) regular expressions …","A configurable builder for a set of regular expressions.","Replacer describes types that can be used to replace …","By-reference adaptor for a <code>Replacer</code>","A set of matches returned by a regex set.","An owned iterator over the set of matches from a regex set.","A borrowed iterator over the set of matches from a regex …","Yields all substrings delimited by a regular expression …","Yields at most <code>N</code> substrings delimited by a regular …","An iterator that yields all capturing matches in the order …","Returns the matched text.","Returns the original string of this regex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the builder and compile the regular expression.","Consume the builder and compile the regular expressions …","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.","Returns an empty set of capture locations that can be …","Returns an iterator over the capture names.","Returns the capture groups corresponding to the …","Returns an iterator over all the non-overlapping capture …","Returns the number of captures.","This is like <code>captures</code>, but uses <code>CaptureLocations</code> instead of","Returns the same as <code>captures_read</code>, but starts the search …","Set the value for the case insensitive (<code>i</code>) flag.","Set the value for the case insensitive (<code>i</code>) flag.","","","","","","","","","","","","","","","","","","","","Set the approximate size of the cache used by the DFA.","Set the approximate size of the cache used by the DFA.","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …","Create a new empty regex set.","Returns the ending byte offset of the match in the …","","Expands all instances of <code>$name</code> in <code>replacement</code> to the …","Returns the start and end byte range of the leftmost-first …","Returns the same as find, but starts the search at the …","Returns an iterator for each successive non-overlapping …","","","","","Shows the original regular expression.","Shows the original regular expression.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempts to parse a string into a regular expression","Returns the match associated with the capture group at …","Returns the start and end positions of the Nth capture …","Set the value for the ignore whitespace (<code>x</code>) flag.","Set the value for the ignore whitespace (<code>x</code>) flag.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns <code>true</code> if this set contains no regular expressions.","Returns true if and only if there is a match for the regex …","Returns true if and only if one of the regexes in this set …","Returns the same as is_match, but starts the search at the …","An iterator that yields all capturing matches in the order …","Returns an iterator over indexes in the regex that matched.","Returns the number of captured groups.","Returns the total number of capturing groups.","Returns the total number of regular expressions in this …","The total number of regexes in the set that created these …","Whether the regex at the given index matched.","Whether this set contains any matches.","Returns the set of regular expressions that match in the …","Set the value for the multi-line matching (<code>m</code>) flag.","Set the value for the multi-line matching (<code>m</code>) flag.","Returns the match for the capture group named <code>name</code>. If <code>name</code>…","","Set the nesting limit for this parser.","Set the nesting limit for this parser.","Create a new regular expression builder with the given …","Create a new regular expression builder with the given …","Compiles a regular expression. Once compiled, it can be …","Create a new regex set with the given regular expressions.","","","","","","","","","","","Return a fixed unchanging replacement byte string.","Return a fixed unchanging replacement byte string.","","","Whether to support octal syntax or not.","Whether to support octal syntax or not.","Returns the patterns that this set will match on.","Returns the range over the starting and ending byte …","Replaces the leftmost-first match with the replacement …","Replaces all non-overlapping matches in <code>text</code> with the …","Appends text to <code>dst</code> to replace the current match.","","","Replaces at most <code>limit</code> non-overlapping matches in <code>text</code> …","Returns the end location of a match in the text given.","Returns the same as shortest_match, but starts the search …","","","","","Set the approximate size limit of the compiled regular …","Set the approximate size limit of the compiled regular …","Returns an iterator of substrings of <code>text</code> delimited by a …","Returns an iterator of at most <code>limit</code> substrings of <code>text</code> …","Returns the starting byte offset of the match in the …","Set the value for the greedy swap (<code>U</code>) flag.","Set the value for the greedy swap (<code>U</code>) flag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value for the Unicode (<code>u</code>) flag.","Set the value for the Unicode (<code>u</code>) flag."],"i":[1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,6,7,20,20,0,4,4,4,4,4,4,4,6,7,2,8,9,11,3,4,12,15,16,1,2,8,9,11,3,4,12,15,16,1,12,2,6,7,6,7,8,3,2,3,0,5,4,4,4,5,2,2,6,7,8,9,10,11,3,4,4,12,13,14,15,16,17,18,19,1,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,4,5,15,6,7,5,5,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,9,9,10,11,12,13,14,16,17,18,8,8,4,4,5,9,5,8,9,15,9,9,8,6,7,5,2,3,6,7,6,7,8,4,10,11,12,13,14,16,17,18,10,11,20,20,19,1,6,7,8,3,4,4,20,19,1,4,4,4,10,11,12,14,6,7,4,4,3,6,7,2,8,9,11,3,4,12,15,16,1,2,4,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,5,2,6,7,8,9,10,11,3,4,12,13,14,15,16,17,18,19,1,6,7,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,27,28,41,41,25,25,25,25,25,25,25,27,28,24,25,33,34,35,23,37,38,40,24,25,33,34,35,23,37,38,40,33,27,28,27,28,37,24,24,26,25,25,25,26,27,28,24,25,25,29,30,31,32,33,34,35,36,23,37,38,39,40,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,25,26,34,27,28,26,26,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,29,30,31,32,33,35,38,38,39,40,37,25,37,25,26,38,26,34,37,38,38,38,37,27,28,26,24,27,28,27,28,25,37,29,30,31,32,33,35,39,40,39,40,41,41,36,23,27,28,37,24,25,25,41,36,23,25,25,25,32,33,39,40,27,28,25,25,24,27,28,24,25,33,34,35,23,37,38,40,25,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,26,27,28,24,25,29,30,31,32,33,34,35,36,23,37,38,39,40,27,28],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["match",3]],["str",0]],[[["regex",3]],["strregexbuilder",3]],["result",4,[["regex",3],["error",4]]]],[[["regexsetbuilder",3]],["result",4,[["regexset",3],["error",4]]]],[[["",0]],["replacerref",3]],[[["",0]],["replacerref",3]],null,[[["regex",3]],["capturelocations",3]],[[["regex",3]],["capturenames",3]],[[["regex",3],["str",0]],["option",4,[["captures",3]]]],[[["regex",3],["str",0]],["capturematches",3]],[[["regex",3]],["usize",0]],[[["regex",3],["capturelocations",3],["str",0]],["option",4,[["match",3]]]],[[["regex",3],["capturelocations",3],["str",0],["usize",0]],["option",4,[["match",3]]]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["error",4]],["error",4]],[[["regexset",3]],["regexset",3]],[[["setmatches",3]],["setmatches",3]],[[["setmatchesiter",3]],["setmatchesiter",3]],[[["match",3]],["match",3]],[[["regex",3]],["regex",3]],[[["capturenames",3]],["capturenames",3]],[[["capturelocations",3]],["capturelocations",3]],[[["subcapturematches",3]],["subcapturematches",3]],[[["noexpand",3]],["noexpand",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["capturenames",3]],["usize",0]],[[["error",4]],["str",0]],[[["regexbuilder",3],["usize",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["usize",0]],["regexsetbuilder",3]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[],["regexset",3]],[[["match",3]],["usize",0]],[[["error",4],["error",4]],["bool",0]],[[["match",3],["match",3]],["bool",0]],[[["str",0]],["string",3]],[[["captures",3],["str",0],["string",3]]],[[["regex",3],["str",0]],["option",4,[["match",3]]]],[[["regex",3],["str",0],["usize",0]],["option",4,[["match",3]]]],[[["regex",3],["str",0]],["matches",3]],[[["captures",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["regexbuilder",3],["formatter",3]],["result",6]],[[["regexsetbuilder",3],["formatter",3]],["result",6]],[[["regexset",3],["formatter",3]],["result",6]],[[["setmatches",3],["formatter",3]],["result",6]],[[["setmatchesintoiter",3],["formatter",3]],["result",6]],[[["setmatchesiter",3],["formatter",3]],["result",6]],[[["match",3],["formatter",3]],["result",6]],[[["regex",3],["formatter",3]],["result",6]],[[["regex",3],["formatter",3]],["result",6]],[[["capturenames",3],["formatter",3]],["result",6]],[[["split",3],["formatter",3]],["result",6]],[[["splitn",3],["formatter",3]],["result",6]],[[["capturelocations",3],["formatter",3]],["result",6]],[[["subcapturematches",3],["formatter",3]],["result",6]],[[["capturematches",3],["formatter",3]],["result",6]],[[["matches",3],["formatter",3]],["result",6]],[[["replacerref",3,[["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["noexpand",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["regex",3],["error",4]]]],[[["captures",3],["usize",0]],["option",4,[["match",3]]]],[[["capturelocations",3],["usize",0]],["option",4]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["captures",3],["str",0]],["str",0]],[[["captures",3],["usize",0]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["setmatches",3]]],[[["setmatches",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["regexset",3]],["bool",0]],[[["regexset",3],["str",0]],["bool",0]],[[["regex",3],["str",0]],["bool",0]],[[["regex",3],["str",0],["usize",0]],["bool",0]],[[["captures",3]],["subcapturematches",3]],[[["setmatches",3]],["setmatchesiter",3]],[[["captures",3]],["usize",0]],[[["regexset",3]],["usize",0]],[[["setmatches",3]],["usize",0]],[[["capturelocations",3]],["usize",0]],[[["setmatches",3],["usize",0]],["bool",0]],[[["setmatches",3]],["bool",0]],[[["regexset",3],["str",0]],["setmatches",3]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["captures",3],["str",0]],["option",4,[["match",3]]]],[[["error",4],["error",4]],["bool",0]],[[["match",3],["match",3]],["bool",0]],[[["regexbuilder",3],["u32",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["u32",0]],["regexsetbuilder",3]],[[["str",0]],["regexbuilder",3]],[[],["regexsetbuilder",3]],[[],["result",4,[["regexset",3],["error",4]]]],[[["str",0]],["result",4,[["regex",3],["error",4]]]],[[["setmatchesintoiter",3]],["option",4,[["usize",0]]]],[[["setmatchesiter",3]],["option",4,[["usize",0]]]],[[["capturenames",3]],["option",4,[["option",4,[["str",0]]]]]],[[["split",3]],["option",4,[["str",0]]]],[[["splitn",3]],["option",4,[["str",0]]]],[[["subcapturematches",3]],["option",4,[["option",4,[["match",3]]]]]],[[["capturematches",3]],["option",4,[["captures",3]]]],[[["matches",3]],["option",4,[["match",3]]]],[[["setmatchesintoiter",3]],["option",4,[["usize",0]]]],[[["setmatchesiter",3]],["option",4,[["usize",0]]]],[[["",0]],["option",4,[["cow",4,[["str",0]]]]]],[[["",0]],["option",4,[["cow",4,[["str",0]]]]]],[[["replacerref",3,[["",26,[["replacer",8],["sized",8]]]]]],["option",4,[["cow",4,[["str",0]]]]]],[[["noexpand",3]],["option",4,[["cow",4,[["str",0]]]]]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["regexset",3]]],[[["match",3]],["range",3,[["usize",0]]]],[[["regex",3],["str",0],["replacer",8]],["cow",4,[["str",0]]]],[[["regex",3],["str",0],["replacer",8]],["cow",4,[["str",0]]]],[[["",0],["captures",3],["string",3]]],[[["replacerref",3,[["",26,[["replacer",8],["sized",8]]]]],["captures",3],["string",3]]],[[["noexpand",3],["captures",3],["string",3]]],[[["regex",3],["str",0],["usize",0],["replacer",8]],["cow",4,[["str",0]]]],[[["regex",3],["str",0]],["option",4,[["usize",0]]]],[[["regex",3],["str",0],["usize",0]],["option",4,[["usize",0]]]],[[["setmatchesintoiter",3]]],[[["setmatchesiter",3]]],[[["capturenames",3]]],[[["splitn",3]]],[[["regexbuilder",3],["usize",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["usize",0]],["regexsetbuilder",3]],[[["regex",3],["str",0]],["split",3]],[[["regex",3],["str",0],["usize",0]],["splitn",3]],[[["match",3]],["usize",0]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["match",3]]],[[["regex",3]],["strregexbuilder",3]],["result",4,[["regex",3],["error",4]]]],[[["regexsetbuilder",3]],["result",4,[["regexset",3],["error",4]]]],[[["",0]],["replacerref",3]],[[["",0]],["replacerref",3]],[[["regex",3]],["capturelocations",3]],[[["regex",3]],["capturenames",3]],[[["regex",3]],["option",4,[["captures",3]]]],[[["regex",3]],["capturematches",3]],[[["regex",3]],["usize",0]],[[["regex",3],["capturelocations",3]],["option",4,[["match",3]]]],[[["regex",3],["capturelocations",3],["usize",0]],["option",4,[["match",3]]]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["match",3]],["match",3]],[[["regex",3]],["regex",3]],[[["capturenames",3]],["capturenames",3]],[[["capturelocations",3]],["capturelocations",3]],[[["subcapturematches",3]],["subcapturematches",3]],[[["noexpand",3]],["noexpand",3]],[[["regexset",3]],["regexset",3]],[[["setmatches",3]],["setmatches",3]],[[["setmatchesiter",3]],["setmatchesiter",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["capturenames",3]],["usize",0]],[[["regexbuilder",3],["usize",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["usize",0]],["regexsetbuilder",3]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[],["regexset",3]],[[["match",3]],["usize",0]],[[["match",3],["match",3]],["bool",0]],[[["captures",3],["vec",3]]],[[["regex",3]],["option",4,[["match",3]]]],[[["regex",3],["usize",0]],["option",4,[["match",3]]]],[[["regex",3]],["matches",3]],[[["captures",3],["formatter",3]],["result",6]],[[["regexbuilder",3],["formatter",3]],["result",6]],[[["regexsetbuilder",3],["formatter",3]],["result",6]],[[["match",3],["formatter",3]],["result",6]],[[["regex",3],["formatter",3]],["result",6]],[[["regex",3],["formatter",3]],["result",6]],[[["matches",3],["formatter",3]],["result",6]],[[["capturematches",3],["formatter",3]],["result",6]],[[["split",3],["formatter",3]],["result",6]],[[["splitn",3],["formatter",3]],["result",6]],[[["capturenames",3],["formatter",3]],["result",6]],[[["capturelocations",3],["formatter",3]],["result",6]],[[["subcapturematches",3],["formatter",3]],["result",6]],[[["replacerref",3,[["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["noexpand",3],["formatter",3]],["result",6]],[[["regexset",3],["formatter",3]],["result",6]],[[["setmatches",3],["formatter",3]],["result",6]],[[["setmatchesintoiter",3],["formatter",3]],["result",6]],[[["setmatchesiter",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["regex",3],["error",4]]]],[[["captures",3],["usize",0]],["option",4,[["match",3]]]],[[["capturelocations",3],["usize",0]],["option",4]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["captures",3],["str",0]]],[[["captures",3],["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["setmatches",3]]],[[["setmatches",3]]],[[]],[[]],[[["regexset",3]],["bool",0]],[[["regex",3]],["bool",0]],[[["regexset",3]],["bool",0]],[[["regex",3],["usize",0]],["bool",0]],[[["captures",3]],["subcapturematches",3]],[[["setmatches",3]],["setmatchesiter",3]],[[["captures",3]],["usize",0]],[[["capturelocations",3]],["usize",0]],[[["regexset",3]],["usize",0]],[[["setmatches",3]],["usize",0]],[[["setmatches",3],["usize",0]],["bool",0]],[[["setmatches",3]],["bool",0]],[[["regexset",3]],["setmatches",3]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["captures",3],["str",0]],["option",4,[["match",3]]]],[[["match",3],["match",3]],["bool",0]],[[["regexbuilder",3],["u32",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["u32",0]],["regexsetbuilder",3]],[[["str",0]],["regexbuilder",3]],[[],["regexsetbuilder",3]],[[["str",0]],["result",4,[["regex",3],["error",4]]]],[[],["result",4,[["regexset",3],["error",4]]]],[[["matches",3]],["option",4,[["match",3]]]],[[["capturematches",3]],["option",4,[["captures",3]]]],[[["split",3]],["option",4]],[[["splitn",3]],["option",4]],[[["capturenames",3]],["option",4,[["option",4,[["str",0]]]]]],[[["subcapturematches",3]],["option",4,[["option",4,[["match",3]]]]]],[[["setmatchesintoiter",3]],["option",4,[["usize",0]]]],[[["setmatchesiter",3]],["option",4,[["usize",0]]]],[[["setmatchesintoiter",3]],["option",4,[["usize",0]]]],[[["setmatchesiter",3]],["option",4,[["usize",0]]]],[[["",0]],["option",4,[["cow",4]]]],[[["",0]],["option",4,[["cow",4]]]],[[["replacerref",3,[["",26,[["replacer",8],["sized",8]]]]]],["option",4,[["cow",4]]]],[[["noexpand",3]],["option",4,[["cow",4]]]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["regexset",3]]],[[["match",3]],["range",3,[["usize",0]]]],[[["regex",3],["replacer",8]],["cow",4]],[[["regex",3],["replacer",8]],["cow",4]],[[["",0],["captures",3],["vec",3]]],[[["replacerref",3,[["",26,[["replacer",8],["sized",8]]]]],["captures",3],["vec",3]]],[[["noexpand",3],["captures",3],["vec",3]]],[[["regex",3],["usize",0],["replacer",8]],["cow",4]],[[["regex",3]],["option",4,[["usize",0]]]],[[["regex",3],["usize",0]],["option",4,[["usize",0]]]],[[["splitn",3]]],[[["capturenames",3]]],[[["setmatchesintoiter",3]]],[[["setmatchesiter",3]]],[[["regexbuilder",3],["usize",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["usize",0]],["regexsetbuilder",3]],[[["regex",3]],["split",3]],[[["regex",3],["usize",0]],["splitn",3]],[[["match",3]],["usize",0]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["regexbuilder",3],["bool",0]],["regexbuilder",3]],[[["regexsetbuilder",3],["bool",0]],["regexsetbuilder",3]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"Match"],[3,"Regex"],[3,"Captures"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"CaptureLocations"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[3,"ReplacerRef"],[8,"Replacer"],[13,"Syntax"],[13,"CompiledTooBig"],[3,"NoExpand"],[3,"Match"],[3,"Regex"],[3,"Captures"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"CaptureLocations"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[8,"Replacer"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","t":[4,13,3,3,6,13,3,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,0,12,12,13,13,3,13,13,13,3,13,4,4,13,13,13,13,13,13,13,13,13,3,13,13,13,4,13,3,4,3,13,3,4,13,13,4,3,4,4,3,3,13,3,4,4,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,16,3,4,13,13,13,13,13,13,4,13,13,13,13,13,13,3,13,3,4,13,13,3,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,3,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,16,13,13,3,13,13,13,13,13,3,13,13,13,13,4,13,3,4,3,13,13,13,3,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,3,13,13,13,13,13,13,13,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,0,11,11,11,0,11,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,13,13,3,4,13,3,3,3,3,3,3,13,13,13,13,13,16,3,4,13,3,13,4,3,4,13,4,13,13,13,16,13,3,13,4,4,13,13,13,13,13,13,13,13,13,13,13,8,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Error","Parse","Parser","ParserBuilder","Result","Translate","UnicodeWordError","allow_invalid_utf8","ast","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","case_insensitive","clone","clone","clone","clone_into","clone_into","clone_into","default","description","dot_matches_new_line","eq","escape","escape_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hir","ignore_whitespace","into","into","into","into","is_meta_character","is_word_byte","is_word_character","multi_line","ne","nest_limit","new","new","octal","parse","swap_greed","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_is_word_character","type_id","type_id","type_id","type_id","unicode","utf8","0","0","Alnum","Alpha","Alternation","Alternation","Ascii","Ascii","Assertion","Assertion","AssertionKind","Ast","AtLeast","Bell","BinaryOp","Blank","Bounded","Bracketed","Bracketed","CaptureIndex","CaptureLimitExceeded","CaptureName","CaptureName","CarriageReturn","CaseInsensitive","Class","Class","ClassAscii","ClassAsciiKind","ClassBracketed","ClassEscapeInvalid","ClassPerl","ClassPerlKind","ClassRangeInvalid","ClassRangeLiteral","ClassSet","ClassSetBinaryOp","ClassSetBinaryOpKind","ClassSetItem","ClassSetRange","ClassSetUnion","ClassUnclosed","ClassUnicode","ClassUnicodeKind","ClassUnicodeOpKind","Cntrl","Colon","Comment","Concat","Concat","DecimalEmpty","DecimalInvalid","Difference","Digit","Digit","Dot","DotMatchesNewLine","Empty","Empty","EndLine","EndText","Equal","Err","Error","ErrorKind","EscapeHexEmpty","EscapeHexInvalid","EscapeHexInvalidDigit","EscapeUnexpectedEof","EscapeUnrecognized","Exactly","Flag","Flag","FlagDanglingNegation","FlagDuplicate","FlagRepeatedNegation","FlagUnexpectedEof","FlagUnrecognized","Flags","Flags","FlagsItem","FlagsItemKind","FormFeed","Graph","Group","Group","GroupKind","GroupNameDuplicate","GroupNameEmpty","GroupNameInvalid","GroupNameUnexpectedEof","GroupUnclosed","GroupUnopened","HexBrace","HexFixed","HexLiteralKind","IgnoreWhitespace","Intersection","Item","LineFeed","Literal","Literal","Literal","LiteralKind","Lower","MultiLine","Named","NamedValue","Negation","NestLimitExceeded","NonCapturing","NotEqual","NotWordBoundary","Octal","OneLetter","OneOrMore","Output","Perl","Perl","Position","Print","Punct","Punctuation","Range","Range","Repetition","Repetition","RepetitionCountDecimalEmpty","RepetitionCountInvalid","RepetitionCountUnclosed","RepetitionKind","RepetitionMissing","RepetitionOp","RepetitionRange","SetFlags","Space","Space","Space","Span","Special","SpecialLiteralKind","StartLine","StartText","SwapGreed","SymmetricDifference","Tab","Unicode","Unicode","Unicode","UnicodeClassInvalid","UnicodeLong","UnicodeShort","Union","UnsupportedBackreference","UnsupportedLookAround","Upper","Verbatim","VerticalTab","Visitor","WithComments","Word","Word","WordBoundary","X","Xdigit","ZeroOrMore","ZeroOrOne","add_item","ast","ast","ast","asts","asts","auxiliary_span","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","c","capture_index","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","column","comment","comments","description","digits","drop","drop","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","flag_state","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_name","greedy","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ast","into_ast","into_item","is_capturing","is_empty","is_empty","is_equal","is_negated","is_negation","is_one_line","is_valid","is_valid","items","items","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","lhs","line","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","negated","negated","negated","negated","new","new","offset","op","parse","partial_cmp","partial_cmp","pattern","print","push","rhs","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","splat","start","start","start","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","visit","visit_alternation_in","visit_alternation_in","visit_class_set_binary_op_in","visit_class_set_binary_op_in","visit_class_set_binary_op_post","visit_class_set_binary_op_post","visit_class_set_binary_op_pre","visit_class_set_binary_op_pre","visit_class_set_item_post","visit_class_set_item_post","visit_class_set_item_pre","visit_class_set_item_pre","visit_post","visit_post","visit_pre","visit_pre","with_end","with_start","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","name","op","value","0","original","original","original","0","0","0","0","0","0","0","0","0","0","0","1","Parser","ParserBuilder","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","ignore_whitespace","into","into","nest_limit","new","new","octal","parse","parse_with_comments","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Printer","borrow","borrow_mut","fmt","from","into","new","print","try_from","try_into","type_id","Alternation","Anchor","Anchor","Ascii","AsciiNegate","AtLeast","Bounded","Byte","Bytes","CaptureIndex","CaptureName","CaseFoldError","Class","Class","ClassBytes","ClassBytesIter","ClassBytesRange","ClassUnicode","ClassUnicodeIter","ClassUnicodeRange","Concat","Empty","EmptyClassNotAllowed","EndLine","EndText","Err","Error","ErrorKind","Exactly","Group","Group","GroupKind","Hir","HirKind","InvalidUtf8","Literal","Literal","NonCapturing","OneOrMore","Output","Range","Repetition","Repetition","RepetitionKind","RepetitionRange","StartLine","StartText","Unicode","Unicode","Unicode","UnicodeCaseUnavailable","UnicodeNegate","UnicodeNotAllowed","UnicodePerlClassNotFound","UnicodePropertyNotFound","UnicodePropertyValueNotFound","Visitor","WordBoundary","WordBoundary","ZeroOrMore","ZeroOrOne","alternation","anchor","any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_fold_simple","case_fold_simple","case_fold_simple","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","concat","default","default","description","difference","difference","dot","drop","empty","empty","empty","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","greedy","group","has_subexprs","hir","hir","intersect","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_kind","is_all_ascii","is_all_ascii","is_all_assertions","is_alternation_literal","is_always_utf8","is_always_utf8","is_anchored_end","is_anchored_start","is_any_anchored_end","is_any_anchored_start","is_empty","is_line_anchored_end","is_line_anchored_start","is_literal","is_match_empty","is_match_empty","is_negated","is_unicode","iter","iter","kind","kind","kind","kind","literal","literal","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","negate","negate","negate","new","new","new","new","next","next","partial_cmp","partial_cmp","pattern","print","push","push","ranges","ranges","repetition","span","start","start","start","start","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","translate","try_case_fold_simple","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","visit","visit_alternation_in","visit_alternation_in","visit_post","visit_post","visit_pre","visit_pre","word_boundary","0","0","0","index","name","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","Literal","Literals","add","add_byte_class","add_char_class","all_complete","any_complete","as_ref","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","contains_empty","cross_add","cross_product","cut","cut","deref","deref_mut","empty","empty","eq","eq","fmt","fmt","from","from","into","into","is_cut","is_empty","limit_class","limit_size","literals","longest_common_prefix","longest_common_suffix","min_len","ne","new","partial_cmp","prefixes","reverse","set_limit_class","set_limit_size","suffixes","to_empty","to_owned","to_owned","trim_suffix","try_from","try_from","try_into","try_into","type_id","type_id","unambiguous_prefixes","unambiguous_suffixes","union","union_prefixes","union_suffixes","Printer","borrow","borrow_mut","fmt","from","into","new","print","try_from","try_into","type_id","Translator","TranslatorBuilder","allow_invalid_utf8","borrow","borrow","borrow_mut","borrow_mut","build","case_insensitive","clone","clone","clone_into","clone_into","default","dot_matches_new_line","fmt","fmt","from","from","into","into","multi_line","new","new","swap_greed","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","unicode","Four","One","Three","Two","Utf8Range","Utf8Sequence","Utf8Sequences","as_slice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","end","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","len","matches","matches","ne","ne","new","next","partial_cmp","partial_cmp","reverse","start","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","0"],"q":["regex_syntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","regex_syntax::Error","","regex_syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","regex_syntax::ast::Ast","","","","","","","","","","regex_syntax::ast::Class","","","regex_syntax::ast::ClassSet","","regex_syntax::ast::ClassSetItem","","","","","","","","regex_syntax::ast::ClassUnicodeKind","","","","","regex_syntax::ast::ErrorKind","","","","regex_syntax::ast::FlagsItemKind","regex_syntax::ast::GroupKind","","","regex_syntax::ast::LiteralKind","","","regex_syntax::ast::RepetitionKind","regex_syntax::ast::RepetitionRange","","","","regex_syntax::ast::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","regex_syntax::ast::print","","","","","","","","","","","regex_syntax::hirregex_syntax::hir::Class","","regex_syntax::hir::GroupKind","","","regex_syntax::hir::HirKind","","","","","","","","regex_syntax::hir::Literal","","regex_syntax::hir::RepetitionKind","regex_syntax::hir::RepetitionRange","","","","regex_syntax::hir::literal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","regex_syntax::hir::print","","","","","","","","","","","regex_syntax::hir::translate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","regex_syntax::utf8","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","regex_syntax::utf8::Utf8Sequence","","",""],"d":["This error type encompasses any error that can be returned …","An error that occurred while translating concrete syntax …","A convenience parser for regular expressions.","A builder for a regular expression parser.","A type alias for dealing with errors returned by this …","An error that occurred while translating abstract syntax …","An error that occurs when the Unicode-aware <code>\\\\w</code> class is …","When enabled, the parser will permit the construction of a …","Defines an abstract syntax for regular expressions.","","","","","","","","","Build a parser from this configuration with the given …","Enable or disable the case insensitive flag by default.","","","","","","","","","Enable or disable the “dot matches any character” flag …","","Escapes all regular expression meta characters in <code>text</code>.","Escapes all meta characters in <code>text</code> and writes the result …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Defines a high-level intermediate representation for …","Enable verbose mode in the regular expression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the give character has significance in a …","Returns true if and only if the given character is an …","Returns true if and only if the given character is a …","Enable or disable the multi-line matching flag by default.","","Set the nesting limit for this parser.","Create a new parser builder with a default configuration.","Create a new parser with a default configuration.","Whether to support octal syntax or not.","Parse the regular expression into a high level intermediate","Enable or disable the “swap greed” flag by default.","","","","","","","","","","","","","","Returns true if and only if the given character is a …","","","","","Enable or disable the Unicode flag (<code>u</code>) by default.","Converts ranges of Unicode scalar values to equivalent …","","","<code>[0-9A-Za-z]</code>","<code>[A-Za-z]</code>","An alternation of regular expressions.","An alternation of regular expressions.","<code>[\\\\x00-\\\\x7F]</code>","An ASCII character class, e.g., <code>[:alnum:]</code> or <code>[:punct:]</code>.","A single zero-width assertion.","A single zero-width assertion.","An assertion kind.","An abstract syntax tree for a single regular expression.","<code>{m,}</code>","Bell, spelled <code>\\\\a</code> (<code>\\\\x07</code>).","A single binary operation (i.e., &amp;&amp;, – or ~~).","<code>[ \\\\t]</code>","<code>{m,n}</code>","A bracketed character class set, which may contain zero or …","A bracketed character class set, which may contain zero or …","<code>(a)</code>","The capturing group limit was exceeded.","A capture name.","<code>(?P&lt;name&gt;a)</code>","Carriage return, spelled <code>\\\\r</code> (<code>\\\\x0D</code>).","<code>i</code>","A single character class expression.","A single character class. This includes all forms of …","An ASCII character class.","The available ASCII character classes.","A bracketed character class, e.g., <code>[a-z0-9]</code>.","An invalid escape sequence was found in a character class …","A Perl character class.","The available Perl character classes.","An invalid character class range was found. An invalid …","An invalid range boundary was found in a character class. …","A character class set.","A Unicode character class set operation.","The type of a Unicode character class set operation.","A single component of a character class set.","A single character class range in a set.","A union of items inside a character class set.","An opening <code>[</code> was found with no corresponding closing <code>]</code>.","A Unicode character class.","The available forms of Unicode character classes.","The type of op used in a Unicode character class.","<code>[\\\\x00-\\\\x1F\\\\x7F]</code>","A property set to a specific value using a colon, e.g., …","A comment from a regular expression with an associated …","A concatenation of regular expressions.","A concatenation of regular expressions.","Note that this error variant is no longer used. Namely, a …","An invalid decimal number was given where one was expected.","The difference of two sets, e.g., <code>\\\\pN--[0-9]</code>.","Decimal numbers.","<code>[0-9]</code>","The “any character” class.","<code>s</code>","An empty regex that matches everything.","An empty item.","<code>$</code>","<code>\\\\z</code>","A property set to a specific value, e.g., <code>\\\\p{scx=Katakana}</code>.","An error that visiting an AST might return.","An error that occurred while parsing a regular expression …","The type of an error that occurred while building an AST.","A bracketed hex literal was empty.","A bracketed hex literal did not correspond to a Unicode …","An invalid hexadecimal digit was found.","EOF was found before an escape sequence was completed.","An unrecognized escape sequence.","<code>{m}</code>","A single flag.","A single flag in a group.","A dangling negation was used when setting flags, e.g., <code>i-</code>.","A flag was used twice, e.g., <code>i-i</code>.","The negation operator was used twice, e.g., <code>-i-s</code>.","Expected a flag but got EOF, e.g., <code>(?</code>.","Unrecognized flag, e.g., <code>a</code>.","A group of flags.","A set of flags, e.g., <code>(?is)</code>.","A single item in a group of flags.","The kind of an item in a group of flags.","Form feed, spelled <code>\\\\f</code> (<code>\\\\x0C</code>).","<code>[!-~]</code>","A grouped regular expression.","A grouped regular expression.","The kind of a group.","A duplicate capture name was found.","A capture group name is empty, e.g., <code>(?P&lt;&gt;abc)</code>.","An invalid character was seen for a capture group name. …","A closing <code>&gt;</code> could not be found for a capture group name.","An unclosed group, e.g., <code>(ab</code>.","An unopened group, e.g., <code>ab)</code>.","The literal is written as a hex code with a bracketed …","The literal is written as a hex code with a fixed number …","The type of a Unicode hex literal.","<code>x</code>","The intersection of two sets, e.g., <code>\\\\pN&amp;&amp;[a-z]</code>.","An item, which can be a single literal, range, nested …","Line feed, spelled <code>\\\\n</code> (<code>\\\\x0A</code>).","A single literal expression.","A single character literal, which includes escape …","A single literal.","The kind of a single literal expression.","<code>[a-z]</code>","<code>m</code>","A binary property, general category or script. The string …","A property name and an associated value.","A negation operator applied to all subsequent flags in the …","The nest limit was exceeded. The limit stored here is the …","<code>(?:a)</code> and <code>(?i:a)</code>","A property that isn’t a particular value, e.g., …","<code>\\\\B</code>","The literal is written as an octal escape, e.g., <code>\\\\141</code>.","A one letter abbreviated class, e.g., <code>\\\\pN</code>.","<code>+</code>","The result of visiting an AST.","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.","A single position in a regular expression.","<code>[ -~]</code>","<code>[!-/:-@\\\\[-</code>{-~]`","The literal is written as an escape because it is …","A range between two literals.","<code>{m,n}</code>","A repetition operation applied to a regular expression.","A repetition operator applied to an arbitrary regular …","An opening <code>{</code> was not followed by a valid decimal value. …","The range provided in a counted repetition operator is …","An opening <code>{</code> was found with no corresponding closing <code>}</code>.","The kind of a repetition operator.","A repetition operator was applied to a missing …","The repetition operator itself.","A range repetition operator.","A group of flags that is not applied to a particular …","Space, spelled <code>\\\\ </code> (<code>\\\\x20</code>). Note that this can only appear …","Whitespace.","<code>[\\\\t\\\\n\\\\v\\\\f\\\\r ]</code>","Span represents the position information of a single AST …","The literal is written as a specially recognized escape, …","The type of a special literal.","<code>^</code>","<code>\\\\A</code>","<code>U</code>","The symmetric difference of two sets. The symmetric …","Tab, spelled <code>\\\\t</code> (<code>\\\\x09</code>).","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.","<code>u</code>","The Unicode class is not valid. This typically occurs when …","A <code>\\\\U</code> prefix. When used without brackets, this form is …","A <code>\\\\u</code> prefix. When used without brackets, this form is …","A union of items.","When octal support is disabled, this error is produced …","When syntax similar to PCRE’s look-around is used, this …","<code>[A-Z]</code>","The literal is written verbatim, e.g., <code>a</code> or <code>☃</code>.","Vertical tab, spelled <code>\\\\v</code> (<code>\\\\x0B</code>).","A trait for visiting an abstract syntax tree (AST) in …","An abstract syntax tree for a singular expression along …","Word characters.","<code>[0-9A-Za-z_]</code>","<code>\\\\b</code>","A <code>\\\\x</code> prefix. When used without brackets, this form is …","<code>[0-9A-Fa-f]</code>","<code>*</code>","<code>?</code>","Add the given item to this sequence of flags.","The actual ast.","The regular expression under repetition.","The regular expression in this group.","The alternate regular expressions.","The concatenation regular expressions.","Return an auxiliary span. This span exists only for some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this literal was written as a <code>\\\\x</code> hex escape, then this …","The Unicode scalar value corresponding to this literal.","Returns the capture index of this group, if this is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The approximate column number, starting at <code>1</code>.","The comment text, starting with the first character …","All comments found in the original regular expression.","","The number of digits that must be used with this literal …","","","The end byte offset.","The end of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …","Returns the state of the given flag in this set.","If this group is non-capturing, then this returns the …","The actual sequence of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the corresponding ClassAsciiKind variant for the …","Whether this operation was applied greedily or not.","The capture index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return this alternation as an AST.","Return this concatenation as an AST.","Return this union as a character class set item.","Returns true if and only if this group is capturing.","Returns true if and only if this span is empty. That is, …","Return true if and only if this Ast is empty.","Whether the op is an equality op or not.","Returns true if this class has been negated.","Returns true if and only if this item is a negation …","Returns true if and only if this span occurs on a single …","Returns true if and only if this character class range is …","Returns true if and only if this repetition range is valid.","The sequence of items that make up this union.","A sequence of flag items. Each item is either a flag or a …","Return the type of this error.","The kind of this literal.","The kind of Perl class.","The kind of ASCII class.","The kind of Unicode class.","The type of this set. A set is either a normal union of …","The type of this set operation.","The assertion kind, e.g., <code>\\\\b</code> or <code>^</code>.","The type of operation.","The kind of this group.","The kind of this item.","The left hand side of the operation.","The line number, starting at <code>1</code>.","The capture name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the class is negated or not. e.g., <code>\\\\d</code> is not …","Whether the class is negated or not. e.g., <code>[[:alpha:]]</code> is …","Whether this class is negated or not.","Whether this class is negated or not. e.g., <code>[a]</code> is not …","Create a new span with the given positions.","Create a new position with the given information.","The absolute offset of this position, starting at <code>0</code> from …","The actual operation.","This module provides a regular expression parser.","","","The original pattern string in which this error occurred.","This module provides a regular expression printer for <code>Ast</code>.","Push a new item in this union.","The right hand side of the operation.","Return the span at which this error occurred.","Return the span of this abstract syntax tree.","Return the span of this character class.","Return the span of this character class set.","Return the span of this character class set item.","The span of this comment, including the beginning <code>#</code> and …","The span of this alternation.","The span of this concatenation.","The span of this literal.","The span of this class.","The span of this class.","The span of this class.","The span of this class.","The span of this range.","The span of the items in this operation. e.g., the <code>a-z0-9</code> …","The span of this operation. e.g., the <code>a-z--[h-p]</code> in …","The span of this assertion.","The span of this operation.","The span of this operator. This includes things like <code>+</code>, <code>*?</code> …","The span of this group.","The span of this capture name.","The span of these flags, including the grouping …","The span of this group of flags.","The span of this item.","Create a new span using the given position as the start …","This method is called before beginning traversal of the …","This method is called before beginning traversal of the …","The start byte offset.","The start of this rangeuild a set from a union.","Executes an implementation of <code>Visitor</code> in constant stack …","This method is called between child nodes of an <code>Alternation</code>…","This method is called between child nodes of an <code>Alternation</code>…","This method is called between the left hand and right hand …","This method is called between the left hand and right hand …","This method is called on every <code>ClassSetBinaryOp</code> after …","This method is called on every <code>ClassSetBinaryOp</code> after …","This method is called on every <code>ClassSetBinaryOp</code> before …","This method is called on every <code>ClassSetBinaryOp</code> before …","This method is called on every <code>ClassSetItem</code> after …","This method is called on every <code>ClassSetItem</code> after …","This method is called on every <code>ClassSetItem</code> before …","This method is called on every <code>ClassSetItem</code> before …","This method is called on an <code>Ast</code> after descending all of …","This method is called on an <code>Ast</code> after descending all of …","This method is called on an <code>Ast</code> before descending into …","This method is called on an <code>Ast</code> before descending into …","Create a new span by replacing the ending the position …","Create a new span by replacing the starting the position …","","","","","","","","","","","","","","","","","","","","","","","","","","The property name (which may be empty).","The type of Unicode op used to associate <code>name</code> with <code>value</code>.","The property value (which may be empty).","","The position of the original flag. The error position …","The position of the original negation operator. The error …","The position of the initial occurrence of the capture …","","","","","","","","","","","","","A regular expression parser.","A builder for a regular expression parser.","","","","","Build a parser from this configuration with the given …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Enable verbose mode in the regular expression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the nesting limit for this parser.","Create a new parser builder with a default configuration.","Create a new parser with a default configuration.","Whether to support octal syntax or not.","Parse the regular expression into an abstract syntax tree.","Parse the regular expression and return an abstract syntax …","","","","","","","","","A printer for a regular expression abstract syntax tree.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new printer.","Print the given <code>Ast</code> to the given writer. The writer must …","","","","An alternation of expressions. An alternation always has …","The high-level intermediate representation for an anchor …","An anchor assertion. An anchor assertion match always has …","Match an ASCII-only word boundary. That is, this matches a …","Match an ASCII-only negation of a word boundary.","Matches a sub-expression at least this many times.","Matches a sub-expression at least <code>m</code> times and at most <code>n</code> …","A single character represented by an arbitrary byte.","A set of characters represented by arbitrary bytes (one …","A normal unnamed capturing group.","A named capturing group.","An error that occurs when Unicode-aware simple case …","The high-level intermediate representation of a character …","A single character class that matches any of the …","A set of characters represented by arbitrary bytes (where …","An iterator over all ranges in a byte character class.","A single range of characters represented by arbitrary …","A set of characters represented by Unicode scalar values.","An iterator over all ranges in a Unicode character class.","A single range of characters represented by Unicode scalar …","A concatenation of expressions. A concatenation always has …","The empty regular expression, which matches everything, …","This occurs when the translator attempts to construct a …","Match the end of a line or the end of text. Specifically, …","Match the end of text. Specifically, this matches at the …","An error that visiting an HIR might return.","An error that can occur while translating an <code>Ast</code> to a <code>Hir</code>.","The type of an error that occurred while building an <code>Hir</code>.","Matches a sub-expression exactly this many times.","The high-level intermediate representation for a group.","A possibly capturing group, which contains a child …","The kind of group.","A high-level intermediate representation (HIR) for a …","The kind of an arbitrary <code>Hir</code> expression.","This error occurs when translating a pattern that could …","The high-level intermediate representation of a literal.","A single literal character that matches exactly this …","A non-capturing group.","Matches a sub-expression one or more times.","The result of visiting an HIR.","Matches a sub-expression within a bounded range of times.","The high-level intermediate representation of a repetition …","A repetition operation applied to a child expression.","The kind of a repetition operator.","The kind of a counted repetition operator.","Match the beginning of a line or the beginning of text. …","Match the beginning of text. Specifically, this matches at …","A single character represented by a Unicode scalar value.","A set of characters represented by Unicode scalar values.","Match a Unicode-aware word boundary. That is, this matches …","This occurs when the Unicode simple case mapping tables …","Match a Unicode-aware negation of a word boundary.","This error occurs when a Unicode feature is used when …","This occurs when a Unicode-aware Perl character class (<code>\\\\w</code>, …","This occurs when an unrecognized Unicode property name …","This occurs when an unrecognized Unicode property value …","A trait for visiting the high-level IR (HIR) in depth …","The high-level intermediate representation for a …","A word boundary assertion, which may or may not be Unicode …","Matches a sub-expression zero or more times.","Matches a sub-expression zero or one times.","Returns the alternation of the given expressions.","Creates an anchor assertion HIR expression.","Build an HIR expression for <code>(?s).</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply Unicode simple case folding to this character class, …","Expand this character class such that it contains all case …","Expand this character class such that it contains all case …","Creates a class HIR expression.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the concatenation of the given expressions.","","","","Subtract the given character class from this character …","Subtract the given byte class from this byte class, in …","Build an HIR expression for <code>.</code>.","","Returns an empty HIR expression.","Create a new class with no ranges.","Create a new class with no ranges.","Return the end of this range.","Return the end of this range.","","","","","","","","","","","","","","","","","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether this repetition operator is greedy or not. A …","Creates a group HIR expression.","Returns true if and only if this kind has any (including …","The expression inside the capturing group, which may be …","The expression being repeated.","Intersect this character class with the given character …","Intersect this byte class with the given byte class, in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes ownership of this HIR expression and returns its …","Returns true if and only if this character class will …","Returns true if and only if this character class will …","Returns true if and only if this entire HIR expression is …","Return true if and only if this HIR is either a simple …","Return true if and only if this HIR will always match …","Returns true if and only if this character class will only …","Return true if and only if this HIR is required to match …","Return true if and only if this HIR is required to match …","Return true if and only if this HIR contains any …","Return true if and only if this HIR contains any …","Return true if and only if this HIR is the empty regular …","Return true if and only if this HIR is required to match …","Return true if and only if this HIR is required to match …","Return true if and only if this HIR is a simple literal. …","Return true if and only if the empty string is part of the …","Returns true if and only if this repetition operator makes …","Returns true if and only if this word boundary assertion …","Returns true if and only if this literal corresponds to a …","Return an iterator over all ranges in this class.","Return an iterator over all ranges in this class.","Return the type of this error.","Returns a reference to the underlying HIR kind.","The kind of this group. If it is a capturing group, then …","The kind of this repetition operator.","Provides routines for extracting literal prefixes and …","Creates a literal HIR expression.","","","","","","","","","","","","","","","Negate this character class in place.","Negate this character class.","Negate this byte class.","Create a new class from a sequence of ranges.","Create a new Unicode scalar value range for a character …","Create a new class from a sequence of ranges.","Create a new byte range for a character class.","","","","","The original pattern string in which this error occurred.","This module provides a regular expression printer for <code>Hir</code>.","Add a new range to this set.","Add a new range to this set.","Return the underlying ranges as a slice.","Return the underlying ranges as a slice.","Creates a repetition HIR expression.","Return the span at which this error occurred.","This method is called before beginning traversal of the …","This method is called before beginning traversal of the …","Return the start of this range.","Return the start of this range.","Compute the symmetric difference of the given character …","Compute the symmetric difference of the given byte …","","","","","","","","","","","","","","","","","","","","","","Defines a translator that converts an <code>Ast</code> to an <code>Hir</code>.","Expand this character class such that it contains all case …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Union this character class with the given character class, …","Union this byte class with the given byte class, in place.","Executes an implementation of <code>Visitor</code> in constant stack …","This method is called between child nodes of an …","This method is called between child nodes of an …","This method is called on an <code>Hir</code> after descending all of …","This method is called on an <code>Hir</code> after descending all of …","This method is called on an <code>Hir</code> before descending into …","This method is called on an <code>Hir</code> before descending into …","Creates a word boundary assertion HIR expression.","","","","The capture index of the group.","The name of the group.","","","","","","","","","","","","","","","","A single member of a set of literals extracted from a …","A set of literal byte strings extracted from a regular …","Adds the given literal to this set.","Extends each literal in this set with the byte class given.","Extends each literal in this set with the character class …","Returns true if all members in this set are complete.","Returns true if any member in this set is complete.","","","","","","Clears this set of all members.","","","","","","Returns true if this set contains an empty literal.","Extends each literal in this set with the bytes given.","Extends this set with another set.","Cuts every member of this set. When a member is cut, it …","Cuts this literal.","","","Returns a new empty set of literals using default limits.","Returns a new complete empty literal.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this literal was “cut.”","Returns true if this set is empty or if all of its members …","Get the character class size limit for this set.","Get the approximate size limit (in bytes) of this set.","Returns the set of literals as a slice. Its order is …","Returns the longest common prefix of all members in this …","Returns the longest common suffix of all members in this …","Returns the length of the smallest literal.","","Returns a new complete literal with the bytes given.","","Returns a set of literal prefixes extracted from the given …","Reverses all members in place.","Limits the size of character(or byte) classes considered.","Set the approximate size limit (in bytes) of this set.","Returns a set of literal suffixes extracted from the given …","Returns a new empty set of literals using this set’s …","","","Returns a new set of literals with the given number of …","","","","","","","Returns a new set of prefixes of this set of literals that …","Returns a new set of suffixes of this set of literals that …","Unions this set with another set.","Unions the prefixes from the given expression to this set.","Unions the suffixes from the given expression to this set.","A printer for a regular expression’s high-level …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new printer.","Print the given <code>Ast</code> to the given writer. The writer must …","","","","A translator maps abstract syntax to a high level …","A builder for constructing an AST-&gt;HIR translator.","When enabled, translation will permit the construction of …","","","","","Build a translator using the current configuration.","Enable or disable the case insensitive flag (<code>i</code>) by default.","","","","","","Enable or disable the “dot matches any character” flag …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Enable or disable the multi-line matching flag (<code>m</code>) by …","Create a new translator builder with a default c …","Create a new translator using the default configuration.","Enable or disable the “swap greed” flag (<code>U</code>) by default.","","","Translate the given abstract syntax tree (AST) into a high …","","","","","","","Enable or disable the Unicode flag (<code>u</code>) by default.","Four successive byte ranges.","One byte range.","Three successive byte ranges.","Two successive byte ranges.","A single inclusive range of UTF-8 bytes.","Utf8Sequence represents a sequence of byte ranges.","An iterator over ranges of matching UTF-8 byte sequences.","Returns the underlying sequence of byte ranges as a slice.","","","","","","","","","","","","","End of byte range (inclusive).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of byte ranges in this sequence.","Returns true if and only if a prefix of <code>bytes</code> matches this …","Returns true if and only if the given byte is in this …","","","Create a new iterator over UTF-8 byte ranges for the …","","","","Reverses the ranges in this sequence.","Start of byte range (inclusive).","","","","","","","","","","","","","","",""],"i":[0,1,0,0,0,1,0,2,0,1,2,3,4,1,2,3,4,2,2,1,2,3,1,2,3,2,1,2,1,0,0,1,1,2,3,4,4,1,1,1,2,3,4,0,2,1,2,3,4,0,0,0,2,1,2,2,3,2,3,2,1,2,3,1,4,1,2,3,4,1,2,3,4,0,1,2,3,4,2,0,5,6,7,7,0,8,7,9,0,8,0,0,10,11,12,7,10,13,9,14,15,0,14,11,16,0,8,0,0,0,15,0,0,15,15,0,0,0,0,0,0,15,0,0,0,7,17,0,0,8,15,15,18,19,7,8,16,8,9,20,20,17,21,0,0,15,15,15,15,15,10,0,22,15,15,15,15,15,0,8,0,0,11,7,0,8,0,15,15,15,15,15,15,23,23,0,16,18,12,11,0,8,9,0,7,16,24,24,22,15,14,17,20,23,24,25,21,13,9,0,7,7,23,9,25,0,8,15,15,15,0,15,0,0,0,11,19,7,0,23,0,20,20,16,18,11,13,9,16,15,26,26,9,15,15,7,23,11,0,0,19,7,20,26,7,25,25,27,28,29,30,31,32,33,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,37,37,30,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,34,35,35,36,28,33,26,8,12,34,42,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,21,27,30,48,33,33,15,15,34,35,28,36,8,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,7,29,47,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,31,32,43,30,34,8,17,40,22,34,42,10,43,27,33,37,38,39,40,41,44,45,46,30,49,44,35,47,33,15,34,35,28,36,8,31,32,37,23,13,38,39,40,24,41,12,9,42,43,44,45,29,46,25,10,30,14,47,48,27,49,22,38,39,40,41,34,35,35,29,0,34,35,33,0,43,44,33,8,13,12,9,36,31,32,37,38,39,40,41,42,43,44,45,29,46,30,47,48,27,49,34,21,21,34,42,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,33,15,8,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,33,15,34,35,28,36,8,31,32,37,23,11,26,13,38,19,39,7,40,24,17,41,12,9,42,43,44,18,45,20,29,46,25,10,30,14,47,48,27,49,22,16,12,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,34,34,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,90,0,0,91,92,91,92,91,91,92,91,92,91,91,92,91,92,91,91,92,91,91,92,91,92,92,91,92,91,92,91,92,91,92,0,93,93,93,93,93,93,93,93,93,93,94,0,94,95,95,96,96,97,98,99,99,0,0,94,0,0,0,0,0,0,94,94,100,101,101,102,0,0,96,0,94,0,0,0,100,0,94,99,103,102,103,0,94,0,0,101,101,97,98,95,100,95,100,100,100,100,0,0,94,103,103,104,104,104,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,98,106,109,104,105,100,104,94,97,98,106,108,109,111,101,95,112,99,113,103,96,105,100,104,94,97,98,106,108,109,111,101,95,112,99,113,103,96,108,111,104,108,111,105,106,109,104,104,104,106,109,108,111,105,100,104,94,97,98,106,108,109,111,101,95,112,99,113,103,96,102,105,105,100,100,104,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,114,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,113,104,94,112,113,106,109,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,107,110,104,106,109,104,104,104,98,104,104,104,104,94,104,104,104,104,113,95,97,106,109,105,104,112,113,0,104,105,104,94,97,98,106,108,109,111,112,99,113,103,96,98,106,109,106,108,109,111,107,110,108,111,105,0,106,109,106,109,104,105,102,102,108,111,106,109,105,100,104,94,97,98,106,108,109,111,101,95,112,99,113,103,96,105,100,104,114,0,106,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,105,100,104,94,97,98,106,107,108,109,110,111,101,95,112,99,113,103,96,114,106,109,0,102,102,102,102,102,102,104,115,116,117,118,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,0,0,133,133,133,133,133,134,133,134,133,134,133,133,134,133,134,134,133,133,133,133,134,134,134,133,134,133,134,133,134,133,134,133,134,134,133,133,133,133,133,133,133,133,134,134,133,133,133,133,133,133,133,134,133,133,134,133,134,133,134,133,133,133,133,133,0,135,135,135,135,135,135,135,135,135,135,0,0,136,136,137,136,137,136,136,136,137,136,137,136,136,136,137,136,137,136,137,136,136,137,136,136,137,137,136,137,136,137,136,137,136,138,138,138,138,0,0,0,138,138,139,140,138,139,140,138,139,138,139,138,139,139,138,139,138,139,140,138,139,140,138,139,140,138,140,138,138,139,138,139,140,140,138,139,138,139,138,139,138,139,140,138,139,140,138,139,140,141,142,143,144],"f":[null,null,null,null,null,null,null,[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parserbuilder",3]],["parser",3]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[["error",4]],["error",4]],[[["parserbuilder",3]],["parserbuilder",3]],[[["parser",3]],["parser",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["parserbuilder",3]],[[["error",4]],["str",0]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[["error",4],["error",4]],["bool",0]],[[["str",0]],["string",3]],[[["str",0],["string",3]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["parserbuilder",3],["formatter",3]],["result",6]],[[["parser",3],["formatter",3]],["result",6]],[[["unicodeworderror",3],["formatter",3]],["result",6]],[[["unicodeworderror",3],["formatter",3]],["result",6]],[[["error",3]],["error",4]],[[["error",3]],["error",4]],[[]],[[]],[[]],[[]],null,[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[]],[[]],[[]],[[]],[[["char",0]],["bool",0]],[[["u8",0]],["bool",0]],[[["char",0]],["bool",0]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[["error",4],["error",4]],["bool",0]],[[["parserbuilder",3],["u32",0]],["parserbuilder",3]],[[],["parserbuilder",3]],[[],["parser",3]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[["parser",3],["str",0]],["result",6,[["hir",3]]]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["char",0]],["result",4,[["bool",0],["unicodeworderror",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["flags",3],["flagsitem",3]],["option",4,[["usize",0]]]],null,null,null,null,null,[[["error",3]],["option",4,[["span",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["literal",3]],["option",4,[["u8",0]]]],null,[[["group",3]],["option",4,[["u32",0]]]],[[["error",3]],["error",3]],[[["errorkind",4]],["errorkind",4]],[[["span",3]],["span",3]],[[["position",3]],["position",3]],[[["withcomments",3]],["withcomments",3]],[[["comment",3]],["comment",3]],[[["ast",4]],["ast",4]],[[["alternation",3]],["alternation",3]],[[["concat",3]],["concat",3]],[[["literal",3]],["literal",3]],[[["literalkind",4]],["literalkind",4]],[[["specialliteralkind",4]],["specialliteralkind",4]],[[["hexliteralkind",4]],["hexliteralkind",4]],[[["class",4]],["class",4]],[[["classperl",3]],["classperl",3]],[[["classperlkind",4]],["classperlkind",4]],[[["classascii",3]],["classascii",3]],[[["classasciikind",4]],["classasciikind",4]],[[["classunicode",3]],["classunicode",3]],[[["classunicodekind",4]],["classunicodekind",4]],[[["classunicodeopkind",4]],["classunicodeopkind",4]],[[["classbracketed",3]],["classbracketed",3]],[[["classset",4]],["classset",4]],[[["classsetitem",4]],["classsetitem",4]],[[["classsetrange",3]],["classsetrange",3]],[[["classsetunion",3]],["classsetunion",3]],[[["classsetbinaryop",3]],["classsetbinaryop",3]],[[["classsetbinaryopkind",4]],["classsetbinaryopkind",4]],[[["assertion",3]],["assertion",3]],[[["assertionkind",4]],["assertionkind",4]],[[["repetition",3]],["repetition",3]],[[["repetitionop",3]],["repetitionop",3]],[[["repetitionkind",4]],["repetitionkind",4]],[[["repetitionrange",4]],["repetitionrange",4]],[[["group",3]],["group",3]],[[["groupkind",4]],["groupkind",4]],[[["capturename",3]],["capturename",3]],[[["setflags",3]],["setflags",3]],[[["flags",3]],["flags",3]],[[["flagsitem",3]],["flagsitem",3]],[[["flagsitemkind",4]],["flagsitemkind",4]],[[["flag",4]],["flagspan",3],["span",3]],["ordering",4]],[[["position",3],["position",3]],["ordering",4]],null,null,null,[[["error",3]],["str",0]],[[["hexliteralkind",4]],["u32",0]],[[["ast",4]]],[[["classset",4]]],null,null,[[["error",3],["error",3]],["bool",0]],[[["errorkind",4],["errorkind",4]],["bool",0]],[[["span",3],["span",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["withcomments",3],["withcomments",3]],["bool",0]],[[["comment",3],["comment",3]],["bool",0]],[[["ast",4],["ast",4]],["bool",0]],[[["alternation",3],["alternation",3]],["bool",0]],[[["concat",3],["concat",3]],["bool",0]],[[["literal",3],["literal",3]],["bool",0]],[[["literalkind",4],["literalkind",4]],["bool",0]],[[["specialliteralkind",4],["specialliteralkind",4]],["bool",0]],[[["hexliteralkind",4],["hexliteralkind",4]],["bool",0]],[[["class",4],["class",4]],["bool",0]],[[["classperl",3],["classperl",3]],["bool",0]],[[["classperlkind",4],["classperlkind",4]],["bool",0]],[[["classascii",3],["classascii",3]],["bool",0]],[[["classasciikind",4],["classasciikind",4]],["bool",0]],[[["classunicode",3],["classunicode",3]],["bool",0]],[[["classunicodekind",4],["classunicodekind",4]],["bool",0]],[[["classunicodeopkind",4],["classunicodeopkind",4]],["bool",0]],[[["classbracketed",3],["classbracketed",3]],["bool",0]],[[["classset",4],["classset",4]],["bool",0]],[[["classsetitem",4],["classsetitem",4]],["bool",0]],[[["classsetrange",3],["classsetrange",3]],["bool",0]],[[["classsetunion",3],["classsetunion",3]],["bool",0]],[[["classsetbinaryop",3],["classsetbinaryop",3]],["bool",0]],[[["classsetbinaryopkind",4],["classsetbinaryopkind",4]],["bool",0]],[[["assertion",3],["assertion",3]],["bool",0]],[[["assertionkind",4],["assertionkind",4]],["bool",0]],[[["repetition",3],["repetition",3]],["bool",0]],[[["repetitionop",3],["repetitionop",3]],["bool",0]],[[["repetitionkind",4],["repetitionkind",4]],["bool",0]],[[["repetitionrange",4],["repetitionrange",4]],["bool",0]],[[["group",3],["group",3]],["bool",0]],[[["groupkind",4],["groupkind",4]],["bool",0]],[[["capturename",3],["capturename",3]],["bool",0]],[[["setflags",3],["setflags",3]],["bool",0]],[[["flags",3],["flags",3]],["bool",0]],[[["flagsitem",3],["flagsitem",3]],["bool",0]],[[["flagsitemkind",4],["flagsitemkind",4]],["bool",0]],[[["flag",4],["flag",4]],["bool",0]],[[],["result",4]],[[["flags",3],["flag",4]],["option",4,[["bool",0]]]],[[["group",3]],["option",4,[["flags",3]]]],null,[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["errorkind",4],["formatter",3]],["result",6]],[[["errorkind",4],["formatter",3]],["result",6]],[[["span",3],["formatter",3]],["result",6]],[[["position",3],["formatter",3]],["result",6]],[[["withcomments",3],["formatter",3]],["result",6]],[[["comment",3],["formatter",3]],["result",6]],[[["ast",4],["formatter",3]],["result",6]],[[["ast",4],["formatter",3]],["result",6]],[[["alternation",3],["formatter",3]],["result",6]],[[["concat",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[["literalkind",4],["formatter",3]],["result",6]],[[["specialliteralkind",4],["formatter",3]],["result",6]],[[["hexliteralkind",4],["formatter",3]],["result",6]],[[["class",4],["formatter",3]],["result",6]],[[["classperl",3],["formatter",3]],["result",6]],[[["classperlkind",4],["formatter",3]],["result",6]],[[["classascii",3],["formatter",3]],["result",6]],[[["classasciikind",4],["formatter",3]],["result",6]],[[["classunicode",3],["formatter",3]],["result",6]],[[["classunicodekind",4],["formatter",3]],["result",6]],[[["classunicodeopkind",4],["formatter",3]],["result",6]],[[["classbracketed",3],["formatter",3]],["result",6]],[[["classset",4],["formatter",3]],["result",6]],[[["classsetitem",4],["formatter",3]],["result",6]],[[["classsetrange",3],["formatter",3]],["result",6]],[[["classsetunion",3],["formatter",3]],["result",6]],[[["classsetbinaryop",3],["formatter",3]],["result",6]],[[["classsetbinaryopkind",4],["formatter",3]],["result",6]],[[["assertion",3],["formatter",3]],["result",6]],[[["assertionkind",4],["formatter",3]],["result",6]],[[["repetition",3],["formatter",3]],["result",6]],[[["repetitionop",3],["formatter",3]],["result",6]],[[["repetitionkind",4],["formatter",3]],["result",6]],[[["repetitionrange",4],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["groupkind",4],["formatter",3]],["result",6]],[[["capturename",3],["formatter",3]],["result",6]],[[["setflags",3],["formatter",3]],["result",6]],[[["flags",3],["formatter",3]],["result",6]],[[["flagsitem",3],["formatter",3]],["result",6]],[[["flagsitemkind",4],["formatter",3]],["result",6]],[[["flag",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["option",4,[["classasciikind",4]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["alternation",3]],["ast",4]],[[["concat",3]],["ast",4]],[[["classsetunion",3]],["classsetitem",4]],[[["group",3]],["bool",0]],[[["span",3]],["bool",0]],[[["ast",4]],["bool",0]],[[["classunicodeopkind",4]],["bool",0]],[[["classunicode",3]],["bool",0]],[[["flagsitemkind",4]],["bool",0]],[[["span",3]],["bool",0]],[[["classsetrange",3]],["bool",0]],[[["repetitionrange",4]],["bool",0]],null,null,[[["error",3]],["errorkind",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["error",3],["error",3]],["bool",0]],[[["errorkind",4],["errorkind",4]],["bool",0]],[[["span",3],["span",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["withcomments",3],["withcomments",3]],["bool",0]],[[["comment",3],["comment",3]],["bool",0]],[[["ast",4],["ast",4]],["bool",0]],[[["alternation",3],["alternation",3]],["bool",0]],[[["concat",3],["concat",3]],["bool",0]],[[["literal",3],["literal",3]],["bool",0]],[[["literalkind",4],["literalkind",4]],["bool",0]],[[["class",4],["class",4]],["bool",0]],[[["classperl",3],["classperl",3]],["bool",0]],[[["classascii",3],["classascii",3]],["bool",0]],[[["classunicode",3],["classunicode",3]],["bool",0]],[[["classunicodekind",4],["classunicodekind",4]],["bool",0]],[[["classbracketed",3],["classbracketed",3]],["bool",0]],[[["classset",4],["classset",4]],["bool",0]],[[["classsetitem",4],["classsetitem",4]],["bool",0]],[[["classsetrange",3],["classsetrange",3]],["bool",0]],[[["classsetunion",3],["classsetunion",3]],["bool",0]],[[["classsetbinaryop",3],["classsetbinaryop",3]],["bool",0]],[[["assertion",3],["assertion",3]],["bool",0]],[[["repetition",3],["repetition",3]],["bool",0]],[[["repetitionop",3],["repetitionop",3]],["bool",0]],[[["repetitionkind",4],["repetitionkind",4]],["bool",0]],[[["repetitionrange",4],["repetitionrange",4]],["bool",0]],[[["group",3],["group",3]],["bool",0]],[[["groupkind",4],["groupkind",4]],["bool",0]],[[["capturename",3],["capturename",3]],["bool",0]],[[["setflags",3],["setflags",3]],["bool",0]],[[["flags",3],["flags",3]],["bool",0]],[[["flagsitem",3],["flagsitem",3]],["bool",0]],[[["flagsitemkind",4],["flagsitemkind",4]],["bool",0]],null,null,null,null,[[["position",3],["position",3]],["span",3]],[[["usize",0],["usize",0],["usize",0]],["position",3]],null,null,null,[[["span",3],["span",3]],["option",4,[["ordering",4]]]],[[["position",3],["position",3]],["option",4,[["ordering",4]]]],[[["error",3]],["str",0]],null,[[["classsetunion",3],["classsetitem",4]]],null,[[["error",3]],["span",3]],[[["ast",4]],["span",3]],[[["class",4]],["span",3]],[[["classset",4]],["span",3]],[[["classsetitem",4]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["position",3]],["span",3]],[[["",0]]],[[["",0]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["classsetunion",3]],["classset",4]],[[["ast",4],["visitor",8]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0],["classsetbinaryop",3]],["result",4]],[[["",0],["classsetbinaryop",3]],["result",4]],[[["",0],["classsetbinaryop",3]],["result",4]],[[["",0],["classsetbinaryop",3]],["result",4]],[[["",0],["classsetbinaryop",3]],["result",4]],[[["",0],["classsetbinaryop",3]],["result",4]],[[["",0],["classsetitem",4]],["result",4]],[[["",0],["classsetitem",4]],["result",4]],[[["",0],["classsetitem",4]],["result",4]],[[["",0],["classsetitem",4]],["result",4]],[[["",0],["ast",4]],["result",4]],[[["",0],["ast",4]],["result",4]],[[["",0],["ast",4]],["result",4]],[[["",0],["ast",4]],["result",4]],[[["span",3],["position",3]],["span",3]],[[["span",3],["position",3]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parserbuilder",3]],["parser",3]],[[["parserbuilder",3]],["parserbuilder",3]],[[["parser",3]],["parser",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["parserbuilder",3]],[[["parserbuilder",3],["formatter",3]],["result",6]],[[["parser",3],["formatter",3]],["result",6]],[[]],[[]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[]],[[]],[[["parserbuilder",3],["u32",0]],["parserbuilder",3]],[[],["parserbuilder",3]],[[],["parser",3]],[[["parserbuilder",3],["bool",0]],["parserbuilder",3]],[[["parser",3],["str",0]],["result",4,[["ast",4],["error",3]]]],[[["parser",3],["str",0]],["result",4,[["withcomments",3],["error",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["printer",3],["formatter",3]],["result",6]],[[]],[[]],[[],["printer",3]],[[["printer",3],["ast",4],["write",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,[["hir",3]]]],["hir",3]],[[["anchor",4]],["hir",3]],[[["bool",0]],["hirclass",4]]],[[["classunicode",3]]],[[["classbytes",3]]],[[["class",4]],["hir",3]],[[["error",3]],["error",3]],[[["errorkind",4]],["errorkind",4]],[[["hir",3]],["hir",3]],[[["hirkind",4]],["hirkind",4]],[[["literal",4]],["literal",4]],[[["class",4]],["class",4]],[[["classunicode",3]],["classunicode",3]],[[["classunicoderange",3]],["classunicoderange",3]],[[["classbytes",3]],["classbytes",3]],[[["classbytesrange",3]],["classbytesrange",3]],[[["anchor",4]],["anchor",4]],[[["wordboundary",4]],["wordboundary",4]],[[["group",3]],["group",3]],[[["groupkind",4]],["groupkind",4]],[[["repetition",3]],["repetition",3]],[[["repetitionkind",4]],["repetitionkind",4]],[[["repetitionrange",4]],["repetitionrange",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["classunicoderange",3],["classunicoderange",3]],["ordering",4]],[[["classbytesrange",3],["classbytesrange",3]],["ordering",4]],[[["vec",3,[["hir",3]]]],["hir",3]],[[],["classunicoderange",3]],[[],["classbytesrange",3]],[[["error",3]],["str",0]],[[["classunicode",3],["classunicode",3]]],[[["classbytes",3],["classbytes",3]]],[[["bool",0]],["hir",3]],[[["hir",3]]],[[],["hir",3]],[[],["classunicode",3]],[[],["classbytes",3]],[[["classunicoderange",3]],["char",0]],[[["classbytesrange",3]],["u8",0]],[[["error",3],["error",3]],["bool",0]],[[["errorkind",4],["errorkind",4]],["bool",0]],[[["hir",3],["hir",3]],["bool",0]],[[["hirkind",4],["hirkind",4]],["bool",0]],[[["literal",4],["literal",4]],["bool",0]],[[["class",4],["class",4]],["bool",0]],[[["classunicode",3],["classunicode",3]],["bool",0]],[[["classunicoderange",3],["classunicoderange",3]],["bool",0]],[[["classbytes",3],["classbytes",3]],["bool",0]],[[["classbytesrange",3],["classbytesrange",3]],["bool",0]],[[["anchor",4],["anchor",4]],["bool",0]],[[["wordboundary",4],["wordboundary",4]],["bool",0]],[[["group",3],["group",3]],["bool",0]],[[["groupkind",4],["groupkind",4]],["bool",0]],[[["repetition",3],["repetition",3]],["bool",0]],[[["repetitionkind",4],["repetitionkind",4]],["bool",0]],[[["repetitionrange",4],["repetitionrange",4]],["bool",0]],[[],["result",4]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["errorkind",4],["formatter",3]],["result",6]],[[["errorkind",4],["formatter",3]],["result",6]],[[["hir",3],["formatter",3]],["result",6]],[[["hir",3],["formatter",3]],["result",6]],[[["hirkind",4],["formatter",3]],["result",6]],[[["literal",4],["formatter",3]],["result",6]],[[["class",4],["formatter",3]],["result",6]],[[["classunicode",3],["formatter",3]],["result",6]],[[["classunicodeiter",3],["formatter",3]],["result",6]],[[["classunicoderange",3],["formatter",3]],["result",6]],[[["classbytes",3],["formatter",3]],["result",6]],[[["classbytesiter",3],["formatter",3]],["result",6]],[[["classbytesrange",3],["formatter",3]],["result",6]],[[["anchor",4],["formatter",3]],["result",6]],[[["wordboundary",4],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["groupkind",4],["formatter",3]],["result",6]],[[["repetition",3],["formatter",3]],["result",6]],[[["repetitionkind",4],["formatter",3]],["result",6]],[[["repetitionrange",4],["formatter",3]],["result",6]],[[["casefolderror",3],["formatter",3]],["result",6]],[[["casefolderror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["group",3]],["hir",3]],[[["hirkind",4]],["bool",0]],null,null,[[["classunicode",3],["classunicode",3]]],[[["classbytes",3],["classbytes",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hir",3]],["hirkind",4]],[[["classunicode",3]],["bool",0]],[[["classbytes",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["class",4]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hirkind",4]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["hir",3]],["bool",0]],[[["repetition",3]],["bool",0]],[[["wordboundary",4]],["bool",0]],[[["literal",4]],["bool",0]],[[["classunicode",3]],["classunicodeiter",3]],[[["classbytes",3]],["classbytesiter",3]],[[["error",3]],["errorkind",4]],[[["hir",3]],["hirkind",4]],null,null,null,[[["literal",4]],["hir",3]],[[["error",3],["error",3]],["bool",0]],[[["hir",3],["hir",3]],["bool",0]],[[["hirkind",4],["hirkind",4]],["bool",0]],[[["literal",4],["literal",4]],["bool",0]],[[["class",4],["class",4]],["bool",0]],[[["classunicode",3],["classunicode",3]],["bool",0]],[[["classunicoderange",3],["classunicoderange",3]],["bool",0]],[[["classbytes",3],["classbytes",3]],["bool",0]],[[["classbytesrange",3],["classbytesrange",3]],["bool",0]],[[["group",3],["group",3]],["bool",0]],[[["groupkind",4],["groupkind",4]],["bool",0]],[[["repetition",3],["repetition",3]],["bool",0]],[[["repetitionkind",4],["repetitionkind",4]],["bool",0]],[[["repetitionrange",4],["repetitionrange",4]],["bool",0]],[[["class",4]]],[[["classunicode",3]]],[[["classbytes",3]]],[[],["classunicode",3]],[[["char",0],["char",0]],["classunicoderange",3]],[[],["classbytes",3]],[[["u8",0],["u8",0]],["classbytesrange",3]],[[["classunicodeiter",3]],["option",4,[["classunicoderange",3]]]],[[["classbytesiter",3]],["option",4,[["classbytesrange",3]]]],[[["classunicoderange",3],["classunicoderange",3]],["option",4,[["ordering",4]]]],[[["classbytesrange",3],["classbytesrange",3]],["option",4,[["ordering",4]]]],[[["error",3]],["str",0]],null,[[["classunicode",3],["classunicoderange",3]]],[[["classbytes",3],["classbytesrange",3]]],[[["classunicode",3]]],[[["classbytes",3]]],[[["repetition",3]],["hir",3]],[[["error",3]],["span",3]],[[["",0]]],[[["",0]]],[[["classunicoderange",3]],["char",0]],[[["classbytesrange",3]],["u8",0]],[[["classunicode",3],["classunicode",3]]],[[["classbytes",3],["classbytes",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[["classunicode",3]],["result",4,[["casefolderror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["classunicode",3],["classunicode",3]]],[[["classbytes",3],["classbytes",3]]],[[["hir",3],["visitor",8]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0],["hir",3]],["result",4]],[[["",0],["hir",3]],["result",4]],[[["",0],["hir",3]],["result",4]],[[["",0],["hir",3]],["result",4]],[[["wordboundary",4]],["hir",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["literals",3],["literal",3]],["bool",0]],[[["literals",3],["classbytes",3]],["bool",0]],[[["literals",3],["classunicode",3]],["bool",0]],[[["literals",3]],["bool",0]],[[["literals",3]],["bool",0]],[[["literal",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["literals",3]]],[[["literals",3]],["literals",3]],[[["literal",3]],["literal",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["literal",3],["literal",3]],["ordering",4]],[[["literals",3]],["bool",0]],[[["literals",3]],["bool",0]],[[["literals",3],["literals",3]],["bool",0]],[[["literals",3]]],[[["literal",3]]],[[["literal",3]],["vec",3]],[[["literal",3]],["vec",3]],[[],["literals",3]],[[],["literal",3]],[[["literals",3],["literals",3]],["bool",0]],[[["literal",3],["literal",3]],["bool",0]],[[["literals",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["literal",3]],["bool",0]],[[["literals",3]],["bool",0]],[[["literals",3]],["usize",0]],[[["literals",3]],["usize",0]],[[["literals",3]]],[[["literals",3]]],[[["literals",3]]],[[["literals",3]],["option",4,[["usize",0]]]],[[["literals",3],["literals",3]],["bool",0]],[[["vec",3,[["u8",0]]]],["literal",3]],[[["literal",3],["literal",3]],["option",4,[["ordering",4]]]],[[["hir",3]],["literals",3]],[[["literals",3]]],[[["literals",3],["usize",0]],["literals",3]],[[["literals",3],["usize",0]],["literals",3]],[[["hir",3]],["literals",3]],[[["literals",3]],["literals",3]],[[["",0]]],[[["",0]]],[[["literals",3],["usize",0]],["option",4,[["literals",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["literals",3]],["literals",3]],[[["literals",3]],["literals",3]],[[["literals",3],["literals",3]],["bool",0]],[[["literals",3],["hir",3]],["bool",0]],[[["literals",3],["hir",3]],["bool",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["printer",3],["formatter",3]],["result",6]],[[]],[[]],[[],["printer",3]],[[["printer",3],["hir",3],["write",8]],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["translatorbuilder",3],["bool",0]],["translatorbuilder",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["translatorbuilder",3]],["translator",3]],[[["translatorbuilder",3],["bool",0]],["translatorbuilder",3]],[[["translatorbuilder",3]],["translatorbuilder",3]],[[["translator",3]],["translator",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["translatorbuilder",3]],[[["translatorbuilder",3],["bool",0]],["translatorbuilder",3]],[[["translatorbuilder",3],["formatter",3]],["result",6]],[[["translator",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["translatorbuilder",3],["bool",0]],["translatorbuilder",3]],[[],["translatorbuilder",3]],[[],["translator",3]],[[["translatorbuilder",3],["bool",0]],["translatorbuilder",3]],[[["",0]]],[[["",0]]],[[["translator",3],["str",0],["ast",4]],["result",4,[["hir",3],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["translatorbuilder",3],["bool",0]],["translatorbuilder",3]],null,null,null,null,null,null,null,[[["utf8sequence",4]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["utf8sequence",4]],["utf8sequence",4]],[[["utf8range",3]],["utf8range",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["utf8sequence",4],["utf8sequence",4]],["ordering",4]],[[["utf8range",3],["utf8range",3]],["ordering",4]],null,[[["utf8sequence",4],["utf8sequence",4]],["bool",0]],[[["utf8range",3],["utf8range",3]],["bool",0]],[[["utf8sequence",4],["formatter",3]],["result",6]],[[["utf8range",3],["formatter",3]],["result",6]],[[["utf8sequences",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["utf8sequence",4]]],[[]],[[["utf8sequence",4]],["usize",0]],[[["utf8sequence",4]],["bool",0]],[[["utf8range",3],["u8",0]],["bool",0]],[[["utf8sequence",4],["utf8sequence",4]],["bool",0]],[[["utf8range",3],["utf8range",3]],["bool",0]],[[["char",0],["char",0]],["utf8sequences",3]],[[["utf8sequences",3]],["option",4]],[[["utf8sequence",4],["utf8sequence",4]],["option",4,[["ordering",4]]]],[[["utf8range",3],["utf8range",3]],["option",4,[["ordering",4]]]],[[["utf8sequence",4]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null],"p":[[4,"Error"],[3,"ParserBuilder"],[3,"Parser"],[3,"UnicodeWordError"],[13,"Parse"],[13,"Translate"],[4,"ClassAsciiKind"],[4,"Ast"],[4,"ClassSetItem"],[4,"RepetitionRange"],[4,"SpecialLiteralKind"],[4,"ClassSet"],[4,"Class"],[4,"GroupKind"],[4,"ErrorKind"],[4,"Flag"],[4,"ClassUnicodeOpKind"],[4,"ClassSetBinaryOpKind"],[4,"ClassPerlKind"],[4,"AssertionKind"],[8,"Visitor"],[4,"FlagsItemKind"],[4,"LiteralKind"],[4,"ClassUnicodeKind"],[4,"RepetitionKind"],[4,"HexLiteralKind"],[3,"Flags"],[3,"WithComments"],[3,"Repetition"],[3,"Group"],[3,"Alternation"],[3,"Concat"],[3,"Error"],[3,"Span"],[3,"Position"],[3,"Comment"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"RepetitionOp"],[3,"CaptureName"],[3,"SetFlags"],[3,"FlagsItem"],[13,"Empty"],[13,"Flags"],[13,"Literal"],[13,"Dot"],[13,"Assertion"],[13,"Class"],[13,"Repetition"],[13,"Group"],[13,"Alternation"],[13,"Concat"],[13,"Unicode"],[13,"Perl"],[13,"Bracketed"],[13,"Item"],[13,"BinaryOp"],[13,"Empty"],[13,"Literal"],[13,"Range"],[13,"Ascii"],[13,"Unicode"],[13,"Perl"],[13,"Bracketed"],[13,"Union"],[13,"OneLetter"],[13,"Named"],[13,"NamedValue"],[13,"NestLimitExceeded"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[13,"Flag"],[13,"CaptureIndex"],[13,"CaptureName"],[13,"NonCapturing"],[13,"HexFixed"],[13,"HexBrace"],[13,"Special"],[13,"Range"],[13,"Exactly"],[13,"AtLeast"],[13,"Bounded"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[4,"HirKind"],[4,"WordBoundary"],[4,"RepetitionRange"],[4,"Literal"],[4,"Class"],[4,"GroupKind"],[4,"ErrorKind"],[4,"Anchor"],[8,"Visitor"],[4,"RepetitionKind"],[3,"Hir"],[3,"Error"],[3,"ClassUnicode"],[3,"ClassUnicodeIter"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesIter"],[3,"ClassBytesRange"],[3,"Group"],[3,"Repetition"],[3,"CaseFoldError"],[13,"Unicode"],[13,"Bytes"],[13,"CaptureIndex"],[13,"CaptureName"],[13,"Literal"],[13,"Class"],[13,"Anchor"],[13,"WordBoundary"],[13,"Repetition"],[13,"Group"],[13,"Concat"],[13,"Alternation"],[13,"Unicode"],[13,"Byte"],[13,"Range"],[13,"Exactly"],[13,"AtLeast"],[13,"Bounded"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[4,"Utf8Sequence"],[3,"Utf8Range"],[3,"Utf8Sequences"],[13,"One"],[13,"Two"],[13,"Three"],[13,"Four"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["scopeguard",3]],["",0]],[[["scopeguard",3]],["",0]],[[["scopeguard",3]]],[[["scopeguard",3],["formatter",3]],["result",6]],[[["always",4],["formatter",3]],["result",6]],[[]],[[]],[[],["scopeguard",3,[["always",4]]]],[[]],[[]],[[["scopeguard",3]]],[[],["bool",0]],[[],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"signal_hook_registry":{"doc":"Backend of the signal-hook crate.","t":[17,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,5],"n":["FORBIDDEN","SigId","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","hash","into","ne","partial_cmp","register","register_sigaction","register_signal_unchecked","register_unchecked","to_owned","try_from","try_into","type_id","unregister"],"q":["signal_hook_registry","","","","","","","","","","","","","","","","","","","","","",""],"d":["List of forbidden signals.","An ID of registered action.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Registers an arbitrary action for the given signal.","Register a signal action.","Register a signal action without checking for forbidden …","Register a signal action without checking for forbidden …","","","","","Removes a previously installed action."],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["sigid",3]],["sigid",3]],[[["",0],["",0]]],[[["sigid",3],["sigid",3]],["ordering",4]],[[["sigid",3],["sigid",3]],["bool",0]],[[["sigid",3],["formatter",3]],["result",6]],[[]],[[["sigid",3],["",0]]],[[]],[[["sigid",3],["sigid",3]],["bool",0]],[[["sigid",3],["sigid",3]],["option",4,[["ordering",4]]]],[[["c_int",6]],["result",4,[["sigid",3],["error",3]]]],[[["c_int",6]],["result",4,[["sigid",3],["error",3]]]],[[["c_int",6]],["result",4,[["sigid",3],["error",3]]]],[[["c_int",6]],["result",4,[["sigid",3],["error",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["sigid",3]],["bool",0]]],"p":[[3,"SigId"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":[13,8,13,4,3,3,16,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":["smallvec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smallvec::CollectionAllocErr"],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[1,0,1,0,0,0,2,0,0,3,3,3,3,4,3,3,3,4,5,3,3,4,1,5,3,3,4,1,3,3,3,4,3,4,3,3,3,3,3,3,3,3,5,3,4,3,3,3,5,3,4,1,1,5,3,3,3,3,3,4,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,3,4,1,3,3,5,3,3,3,4,3,3,5,3,3,5,4,5,4,3,3,3,3,3,3,3,3,3,3,3,2,5,4,0,3,3,3,4,6,1,3,5,3,4,1,3,5,3,4,1,3,3,5,3,4,1,3,7],"f":[null,null,null,null,null,null,null,null,null,[[["smallvec",3,[["array",8]]],["smallvec",3]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["intoiter",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["intoiter",3,[["array",8]]]]],[[["",0]],["",0]],[[["smallvec",3,[["array",8]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["smallvec",3,[["array",8]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["smallvec",3,[["array",8]]]],["usize",0]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]],["smallvec",3,[["array",8]]]],[[["intoiter",3,[["",26,[["array",8],["clone",8]]]]]],["intoiter",3,[["",26,[["array",8],["clone",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["smallvec",3,[["array",8]]],["smallvec",3]],["ordering",4]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[],["smallvec",3,[["array",8]]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]],["drain",3,[["array",8]]]],[[["drain",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]]]],[[["intoiter",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]],["smallvec",3]],["bool",0]],[[["smallvec",3,[["array",8]]],["intoiterator",8]]],[[["smallvec",3,[["array",8]]]]],[[["drain",3,[["array",8]]],["formatter",3]],["result",6]],[[["smallvec",3,[["array",8]]],["formatter",3]],["result",6]],[[["intoiter",3,[["array",8]]],["formatter",3]],["result",6]],[[["collectionallocerr",4],["formatter",3]],["result",6]],[[["collectionallocerr",4],["formatter",3]],["result",6]],[[]],[[["array",8]],["smallvec",3,[["array",8]]]],[[],["smallvec",3,[["array",8]]]],[[["vec",3]],["smallvec",3,[["array",8]]]],[[["never",0]]],[[]],[[]],[[["layouterr",6]],["collectionallocerr",4]],[[]],[[["array",8]],["smallvec",3,[["array",8]]]],[[["array",8],["usize",0]],["smallvec",3,[["array",8]]]],[[["maybeuninit",19,[["array",8]]],["usize",0]],["smallvec",3,[["array",8]]]],[[["usize",0]],["smallvec",3,[["array",8]]]],[[["intoiterator",8]],["smallvec",3,[["array",8]]]],[[["usize",0],["usize",0]],["smallvec",3,[["array",8]]]],[[],["smallvec",3,[["array",8]]]],[[["vec",3]],["smallvec",3,[["array",8]]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["",0]]],[[["smallvec",3,[["array",8]]],["sliceindex",8]]],[[["smallvec",3,[["array",8]]],["sliceindex",8]]],[[["smallvec",3,[["array",8]]]],["usize",0]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["usize",0],["intoiterator",8]]],[[]],[[]],[[]],[[]],[[["smallvec",3,[["array",8]]]],["box",3]],[[["smallvec",3,[["array",8]]]],["result",4,[["array",8],["smallvec",3,[["array",8]]]]]],[[]],[[["smallvec",3]]],[[["smallvec",3]]],[[["smallvec",3,[["array",8]]]]],[[]],[[["smallvec",3,[["array",8]]]],["vec",3]],[[["smallvec",3,[["array",8]]]],["bool",0]],[[["drain",3,[["array",8]]]],["usize",0]],[[["smallvec",3,[["array",8]]]],["usize",0]],[[],["smallvec",3,[["array",8]]]],[[["drain",3,[["array",8]]]],["option",4]],[[["intoiter",3,[["array",8]]]],["option",4]],[[["drain",3,[["array",8]]]],["option",4]],[[["intoiter",3,[["array",8]]]],["option",4]],[[["smallvec",3,[["array",8]]],["smallvec",3]],["option",4,[["ordering",4]]]],[[["smallvec",3,[["array",8]]]],["option",4]],[[["smallvec",3,[["array",8]]]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]],["fnmut",8]]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["smallvec",3,[["array",8]]]]],[[],["usize",0]],[[["drain",3,[["array",8]]]]],[[["intoiter",3,[["array",8]]]]],null,[[["smallvec",3,[["array",8]]]],["bool",0]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[["",0]]],[[["",0]]],[[["",0]],["smallvec",3]],[[["",0]],["string",3]],[[["smallvec",3,[["array",8]]],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["smallvec",3,[["array",8]]],["usize",0]],["result",4,[["collectionallocerr",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["smallvec",3,[["array",8]]],["usize",0]],["result",4,[["collectionallocerr",4]]]],[[["smallvec",3,[["array",8]]],["usize",0]],["result",4,[["collectionallocerr",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0]],["smallvec",3,[["array",8]]]],null],"p":[[4,"CollectionAllocErr"],[8,"Array"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"syn":{"doc":"github crates-io docs-rs","t":[3,13,13,13,13,3,3,13,13,13,13,13,4,3,6,13,13,3,4,13,3,13,13,13,13,13,13,13,3,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,4,3,3,3,13,13,3,13,13,13,13,13,13,3,4,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,3,13,3,3,4,3,3,3,13,13,13,4,13,4,3,3,3,3,13,13,4,4,4,3,13,13,13,13,13,13,3,13,13,13,3,4,3,3,3,3,13,3,13,13,13,13,13,4,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,13,3,13,13,13,13,3,13,4,13,13,13,3,3,3,3,3,3,3,3,13,13,13,3,13,13,13,13,13,13,13,13,4,13,13,4,4,13,3,3,13,13,13,3,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,13,13,13,13,4,3,3,3,3,13,13,3,13,13,4,13,3,13,13,13,13,13,13,13,13,13,13,6,13,4,13,13,13,13,13,3,13,13,13,13,4,13,4,13,13,13,13,13,13,14,13,13,13,3,4,4,3,3,3,3,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,13,4,13,13,13,13,13,13,13,13,3,3,3,3,3,4,3,3,13,13,13,13,13,13,13,13,3,3,3,4,3,4,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,12,12,12,12,12,12,12,14,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,14,14,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,11,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,11,14,11,11,11,11,14,5,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,18,10,3,3,3,16,8,3,6,8,8,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,13,3,3,3,3,4,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Block","Bool","BoundLifetimes","Box","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Enum","Eq","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericMethodArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMacro2","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro2","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","Method","Method","MethodCall","MethodTurbofish","Mod","Mul","MulEq","Name","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatBox","PatIdent","PatLit","PatMacro","PatOr","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemEq","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Semi","Shl","ShlEq","Shr","ShrEq","Signature","Slice","Slice","Static","Static","Stmt","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubEq","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","box_token","box_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","constness","content","continue_token","crate_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","discriminant","dot2_token","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","else_branch","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","hi","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","left","len","len","len","let_token","let_token","lhs_ty","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","lo","loop_token","lt_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","macro_token","make_where_clause","match_token","member","member","member","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","op","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_str","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","qself","question_token","raw","receiver","receiver","reference","rename","rename","rest","return_token","rhs_ty","right","right","right","rules","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","where_clause","where_token","while_token","without_plus","without_plus","without_plus","yield_tokenursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","0","0","1","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["synsyn::AttrStyle","syn::BinOp","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Data","","","syn::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Fields","","syn::FnArg","","syn::ForeignItem","","","","","syn::GenericArgument","","","","","syn::GenericMethodArgument","","syn::GenericParam","","","syn::ImplItem","","","","","syn::Item","","","","","","","","","","","","","","","","","syn::Lit","","","","","","","","syn::MacroDelimiter","","","syn::Member","","syn::Meta","","","syn::NestedMeta","","syn::Pat","","","","","","","","","","","","","","","","syn::PathArguments","","syn::RangeLimits","","syn::ReturnType","","syn::Stmt","","","","","syn::StrStyle","syn::TraitBoundModifier","syn::TraitItem","","","","","syn::Type","","","","","","","","","","","","","","","syn::TypeParamBound","","syn::UnOp","","","syn::UseTree","","","","","syn::Visibility","","","syn::WherePredicate","","","syn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::punctuated::Pair","","","syn::spanned","","syn::tokend":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0...10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation …","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: …","A binding (equality constraint) on an associated type: the …","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","A box pattern: <code>box v</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expr without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","An individual generic argument to a method, like <code>T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","A word of Rust code, which may be a keyword or legal …","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","A macro invocation within an impl block.","A method within an impl block.","An associated type within an impl block.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A 2.0-style declarative macro introduced by the <code>macro</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in the type position.","A macro in pattern position.","A 2.0-style declarative macro introduced by the <code>macro</code> …","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A trait method within the definition of a trait.","A method within an impl block.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>::&lt;&gt;</code> explicit type parameters passed to a method call: …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A box pattern: <code>box v</code>.","A pattern that binds a new variable: …","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A path pattern like <code>Color::Red</code>, optionally qualified with a","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method, whether taken …","The <code>self</code> argument of an associated method, whether taken …","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A reference pattern: <code>&amp;mut var</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","Expression with trailing semicolon.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice type: <code>[T]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A statement, usually ending in a semicolon.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A macro invocation within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A type argument.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A particular type is returned.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","Data within the struct or enum.","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of the field.","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Generics required to complete the definition.","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","Name of the struct or enum.","","","","","","","","","","","","","","","","<code>(A, B)</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the …","","","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","Name or index of the field.","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","","","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parses the content of the attribute, consisting of the …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the identifier that begins this structured meta …","","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","Trait this impl implementsype of the fieldeturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","Visibility of the field.","","","","","","","","","","","","","","","","","","","","Visibility of the struct or enum.","","","","In some positions, types may not contain the <code>+</code> character, …cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","If the cursor is pointing at an <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","Returns the <code>Span</code> of the next token in the parse stream, or …","The source location of the error.","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Borrows the punctuation from this punctuated pair, unless …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","","","","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,2,0,0,3,4,3,3,3,0,0,0,3,4,0,0,3,0,5,1,1,1,1,1,1,0,3,6,0,3,7,8,8,3,6,6,3,3,6,9,3,10,11,12,13,14,5,0,0,5,3,15,16,0,0,0,0,17,18,0,1,1,12,19,20,1,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,3,0,0,0,0,0,0,6,12,22,0,3,0,0,0,0,0,12,1,0,0,0,0,23,3,23,4,1,9,0,7,3,12,0,0,0,0,0,0,4,0,3,4,16,24,6,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,11,25,20,5,0,26,0,27,3,7,0,0,0,0,0,0,0,0,21,3,1,0,3,12,22,13,14,4,7,12,0,3,28,0,0,27,0,0,13,14,3,0,12,1,1,23,26,29,30,1,18,0,4,28,2,18,1,7,24,3,8,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,3,23,4,7,0,0,0,0,0,4,16,0,3,7,0,15,0,31,3,4,7,1,1,23,3,7,16,0,3,0,21,1,1,1,1,0,4,7,12,22,0,6,0,3,12,19,7,1,1,0,25,12,12,0,0,0,0,0,0,0,4,3,3,3,4,7,7,0,0,3,10,11,20,12,22,13,14,17,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,3,12,19,29,29,30,3,12,0,0,0,0,0,0,0,0,3,12,22,13,14,6,4,7,0,0,0,0,0,0,3,7,3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,33,51,52,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,100,56,138,139,56,62,140,141,140,141,49,58,78,82,93,114,50,63,69,83,86,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,159,87,88,159,160,101,111,177,184,189,59,123,148,44,76,91,32,94,100,165,172,174,132,0,145,53,66,74,175,183,131,0,60,0,124,49,50,127,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,38,41,162,42,52,80,85,154,87,88,89,159,160,90,98,100,106,109,111,113,135,137,189,86,65,83,155,155,89,90,109,113,182,33,97,61,151,92,0,0,119,155,156,2,87,89,109,110,111,94,113,114,115,138,51,76,130,132,56,62,40,122,184,175,176,180,182,36,183,53,79,185,131,133,65,91,172,142,142,38,30,153,147,54,67,87,89,161,90,98,101,102,113,115,188,59,60,45,63,64,66,67,44,71,35,74,75,77,80,81,84,85,90,98,113,125,0,92,186,86,51,76,99,103,171,173,132,142,142,142,38,30,153,140,141,33,34,63,156,142,142,142,142,142,142,142,143,48,144,38,145,24,26,26,26,26,146,147,27,27,27,51,29,29,29,148,149,52,16,16,16,16,150,151,152,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,153,41,10,85,154,86,9,155,11,11,11,11,87,87,88,89,156,25,25,25,157,28,158,20,20,20,20,159,160,161,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,23,23,23,23,23,162,163,46,164,165,22,22,22,22,22,105,106,107,108,13,13,13,13,13,109,110,111,112,14,14,14,14,14,113,114,115,116,33,31,31,31,117,118,6,6,6,6,6,6,6,6,166,167,168,169,140,140,141,141,170,15,138,8,119,119,119,119,19,19,19,19,171,172,173,1,18,174,21,120,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,187,43,43,2,5,42,188,189,190,47,73,39,91,94,99,100,101,102,103,111,115,33,119,187,64,176,41,155,156,42,47,86,142,38,30,153,129,38,51,52,87,89,90,91,92,95,96,97,98,99,100,101,102,103,162,163,46,106,107,109,111,113,115,33,119,124,43,188,189,65,94,177,152,63,66,153,120,50,33,34,190,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,29,29,29,29,2,187,32,94,100,165,118,29,29,58,60,61,63,69,83,104,187,127,54,55,57,29,74,175,67,120,161,117,88,160,36,155,156,157,159,34,155,73,129,147,68,129,69,41,155,156,42,47,70,95,108,112,116,179,126,96,155,44,62,85,137,40,97,157,50,35,98,106,117,182,36,124,37,154,186,121,148,146,142,38,88,6,166,167,168,169,140,141,170,55,57,81,50,50,50,33,34,190,155,146,149,152,39,40,71,79,157,33,34,180,185,133,190,0,0,0,142,38,26,146,147,27,51,148,149,16,3,53,54,55,49,57,58,59,60,39,45,50,61,62,63,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,166,167,168,169,140,141,170,138,119,1,18,174,21,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,17,7,187,43,5,42,188,189,190,0,142,145,145,138,138,0,145,0,145,187,52,145,0,0,52,166,174,3,142,38,63,67,86,120,123,37,134,135,137,26,145,146,147,152,72,76,157,138,181,128,132,134,47,145,158,150,152,0,72,181,128,77,35,33,40,117,92,46,76,75,161,54,55,57,96,187,117,94,97,74,90,92,95,98,99,101,102,104,105,106,107,108,109,110,111,112,113,115,116,171,120,175,142,38,6,166,167,168,169,140,141,170,118,93,105,110,114,142,142,142,143,48,144,38,38,145,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,153,153,41,10,85,154,86,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,6,166,166,167,167,168,168,169,169,140,140,141,141,170,170,138,119,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,153,170,0,155,164,182,98,106,174,99,171,145,124,6,166,167,168,169,140,141,100,65,73,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,38,140,141,142,143,48,144,38,145,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,119,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,0,145,138,94,100,101,104,162,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,78,40,52,45,80,89,90,98,102,106,109,113,115,121,135,188,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,155,155,102,107,111,115,178,136,103,173,149,142,82,94,100,33,34,104,166,167,168,169,170,170,33,34,91,172,52,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,119,155,158,83,4,184,17,84,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,342,343,344,345,346,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,0,0,385,385,386,385,386,386,386,386,386,386,385,386,386,386,385,386,386,386,385,385,386,386,386,386,386,385,386,385,386,385,386,0,387,387,387,0,0,0,388,0,0,0,0,0,0,0,389,390,389,391,392,393,390,389,391,392,393,389,391,393,391,393,393,389,391,0,389,390,389,391,393,389,389,393,393,389,390,389,391,392,393,393,390,389,391,392,393,393,393,393,389,389,393,393,394,389,388,392,388,388,389,390,389,389,389,389,393,389,393,391,393,389,393,390,389,391,392,393,390,389,391,392,393,390,389,391,392,393,0,395,396,0,0,0,0,0,0,0,0,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,397,398,400,401,402,396,397,398,400,401,402,396,397,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,398,399,400,401,402,403,397,396,396,397,397,397,397,397,397,398,399,400,401,402,403,397,396,398,399,400,401,402,403,398,399,400,401,402,403,397,397,397,397,397,397,397,396,397,397,397,398,399,400,401,402,403,397,396,397,398,400,401,402,396,397,396,397,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,396,396,404,405,404,0,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,506,507,508,509,407,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["typegenerics",3]],["turbofish",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["litint",3]],["str",0]],[[["litfloat",3]],["str",0]],[[["litint",3]],["result",6]],[[["litfloat",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3]],["ident",3]],[[["implgenerics",3]],["implgenerics",3]],[[["typegenerics",3]],["typegenerics",3]],[[["turbofish",3]],["turbofish",3]],[[["lifetime",3]],["lifetime",3]],[[["attribute",3]],["attribute",3]],[[["attrstyle",4]],["attrstyle",4]],[[["meta",4]],["meta",4]],[[["metalist",3]],["metalist",3]],[[["metanamevalue",3]],["metanamevalue",3]],[[["nestedmeta",4]],["nestedmeta",4]],[[["variant",3]],["variant",3]],[[["fields",4]],["fields",4]],[[["fieldsnamed",3]],["fieldsnamed",3]],[[["fieldsunnamed",3]],["fieldsunnamed",3]],[[["field",3]],["field",3]],[[["visibility",4]],["visibility",4]],[[["vispublic",3]],["vispublic",3]],[[["viscrate",3]],["viscrate",3]],[[["visrestricted",3]],["visrestricted",3]],[[["expr",4]],["expr",4]],[[["exprarray",3]],["exprarray",3]],[[["exprassign",3]],["exprassign",3]],[[["exprassignop",3]],["exprassignop",3]],[[["exprasync",3]],["exprasync",3]],[[["exprawait",3]],["exprawait",3]],[[["exprbinary",3]],["exprbinary",3]],[[["exprblock",3]],["exprblock",3]],[[["exprbox",3]],["exprbox",3]],[[["exprbreak",3]],["exprbreak",3]],[[["exprcall",3]],["exprcall",3]],[[["exprcast",3]],["exprcast",3]],[[["exprclosure",3]],["exprclosure",3]],[[["exprcontinue",3]],["exprcontinue",3]],[[["exprfield",3]],["exprfield",3]],[[["exprforloop",3]],["exprforloop",3]],[[["exprgroup",3]],["exprgroup",3]],[[["exprif",3]],["exprif",3]],[[["exprindex",3]],["exprindex",3]],[[["exprlet",3]],["exprlet",3]],[[["exprlit",3]],["exprlit",3]],[[["exprloop",3]],["exprloop",3]],[[["exprmacro",3]],["exprmacro",3]],[[["exprmatch",3]],["exprmatch",3]],[[["exprmethodcall",3]],["exprmethodcall",3]],[[["exprparen",3]],["exprparen",3]],[[["exprpath",3]],["exprpath",3]],[[["exprrange",3]],["exprrange",3]],[[["exprreference",3]],["exprreference",3]],[[["exprrepeat",3]],["exprrepeat",3]],[[["exprreturn",3]],["exprreturn",3]],[[["exprstruct",3]],["exprstruct",3]],[[["exprtry",3]],["exprtry",3]],[[["exprtryblock",3]],["exprtryblock",3]],[[["exprtuple",3]],["exprtuple",3]],[[["exprtype",3]],["exprtype",3]],[[["exprunary",3]],["exprunary",3]],[[["exprunsafe",3]],["exprunsafe",3]],[[["exprwhile",3]],["exprwhile",3]],[[["expryield",3]],["expryield",3]],[[["member",4]],["member",4]],[[["index",3]],["index",3]],[[["methodturbofish",3]],["methodturbofish",3]],[[["genericmethodargument",4]],["genericmethodargument",4]],[[["fieldvalue",3]],["fieldvalue",3]],[[["label",3]],["label",3]],[[["arm",3]],["arm",3]],[[["rangelimits",4]],["rangelimits",4]],[[["generics",3]],["generics",3]],[[["genericparam",4]],["genericparam",4]],[[["typeparam",3]],["typeparam",3]],[[["lifetimedef",3]],["lifetimedef",3]],[[["constparam",3]],["constparam",3]],[[["boundlifetimes",3]],["boundlifetimes",3]],[[["typeparambound",4]],["typeparambound",4]],[[["traitbound",3]],["traitbound",3]],[[["traitboundmodifier",4]],["traitboundmodifier",4]],[[["whereclause",3]],["whereclause",3]],[[["wherepredicate",4]],["wherepredicate",4]],[[["predicatetype",3]],["predicatetype",3]],[[["predicatelifetime",3]],["predicatelifetime",3]],[[["predicateeq",3]],["predicateeq",3]],[[["item",4]],["item",4]],[[["itemconst",3]],["itemconst",3]],[[["itemenum",3]],["itemenum",3]],[[["itemexterncrate",3]],["itemexterncrate",3]],[[["itemfn",3]],["itemfn",3]],[[["itemforeignmod",3]],["itemforeignmod",3]],[[["itemimpl",3]],["itemimpl",3]],[[["itemmacro",3]],["itemmacro",3]],[[["itemmacro2",3]],["itemmacro2",3]],[[["itemmod",3]],["itemmod",3]],[[["itemstatic",3]],["itemstatic",3]],[[["itemstruct",3]],["itemstruct",3]],[[["itemtrait",3]],["itemtrait",3]],[[["itemtraitalias",3]],["itemtraitalias",3]],[[["itemtype",3]],["itemtype",3]],[[["itemunion",3]],["itemunion",3]],[[["itemuse",3]],["itemuse",3]],[[["usetree",4]],["usetree",4]],[[["usepath",3]],["usepath",3]],[[["usename",3]],["usename",3]],[[["userename",3]],["userename",3]],[[["useglob",3]],["useglob",3]],[[["usegroup",3]],["usegroup",3]],[[["foreignitem",4]],["foreignitem",4]],[[["foreignitemfn",3]],["foreignitemfn",3]],[[["foreignitemstatic",3]],["foreignitemstatic",3]],[[["foreignitemtype",3]],["foreignitemtype",3]],[[["foreignitemmacro",3]],["foreignitemmacro",3]],[[["traititem",4]],["traititem",4]],[[["traititemconst",3]],["traititemconst",3]],[[["traititemmethod",3]],["traititemmethod",3]],[[["traititemtype",3]],["traititemtype",3]],[[["traititemmacro",3]],["traititemmacro",3]],[[["implitem",4]],["implitem",4]],[[["implitemconst",3]],["implitemconst",3]],[[["implitemmethod",3]],["implitemmethod",3]],[[["implitemtype",3]],["implitemtype",3]],[[["implitemmacro",3]],["implitemmacro",3]],[[["signature",3]],["signature",3]],[[["fnarg",4]],["fnarg",4]],[[["receiver",3]],["receiver",3]],[[["file",3]],["file",3]],[[["lit",4]],["lit",4]],[[["litstr",3]],["litstr",3]],[[["litbytestr",3]],["litbytestr",3]],[[["litbyte",3]],["litbyte",3]],[[["litchar",3]],["litchar",3]],[[["litint",3]],["litint",3]],[[["litfloat",3]],["litfloat",3]],[[["litbool",3]],["litbool",3]],[[["macro",3]],["macro",3]],[[["macrodelimiter",4]],["macrodelimiter",4]],[[["deriveinput",3]],["deriveinput",3]],[[["data",4]],["data",4]],[[["datastruct",3]],["datastruct",3]],[[["dataenum",3]],["dataenum",3]],[[["dataunion",3]],["dataunion",3]],[[["binop",4]],["binop",4]],[[["unop",4]],["unop",4]],[[["block",3]],["block",3]],[[["stmt",4]],["stmt",4]],[[["local",3]],["local",3]],[[["type",4]],["type",4]],[[["typearray",3]],["typearray",3]],[[["typebarefn",3]],["typebarefn",3]],[[["typegroup",3]],["typegroup",3]],[[["typeimpltrait",3]],["typeimpltrait",3]],[[["typeinfer",3]],["typeinfer",3]],[[["typemacro",3]],["typemacro",3]],[[["typenever",3]],["typenever",3]],[[["typeparen",3]],["typeparen",3]],[[["typepath",3]],["typepath",3]],[[["typeptr",3]],["typeptr",3]],[[["typereference",3]],["typereference",3]],[[["typeslice",3]],["typeslice",3]],[[["typetraitobject",3]],["typetraitobject",3]],[[["typetuple",3]],["typetuple",3]],[[["abi",3]],["abi",3]],[[["barefnarg",3]],["barefnarg",3]],[[["variadic",3]],["variadic",3]],[[["returntype",4]],["returntype",4]],[[["pat",4]],["pat",4]],[[["patbox",3]],["patbox",3]],[[["patident",3]],["patident",3]],[[["patlit",3]],["patlit",3]],[[["patmacro",3]],["patmacro",3]],[[["pator",3]],["pator",3]],[[["patpath",3]],["patpath",3]],[[["patrange",3]],["patrange",3]],[[["patreference",3]],["patreference",3]],[[["patrest",3]],["patrest",3]],[[["patslice",3]],["patslice",3]],[[["patstruct",3]],["patstruct",3]],[[["pattuple",3]],["pattuple",3]],[[["pattuplestruct",3]],["pattuplestruct",3]],[[["pattype",3]],["pattype",3]],[[["patwild",3]],["patwild",3]],[[["fieldpat",3]],["fieldpat",3]],[[["path",3]],["path",3]],[[["pathsegment",3]],["pathsegment",3]],[[["patharguments",4]],["patharguments",4]],[[["genericargument",4]],["genericargument",4]],[[["anglebracketedgenericarguments",3]],["anglebracketedgenericarguments",3]],[[["binding",3]],["binding",3]],[[["constraint",3]],["constraint",3]],[[["parenthesizedgenericarguments",3]],["parenthesizedgenericarguments",3]],[[["qself",3]],["qself",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ident",3],["ident",3]],["ordering",4]],[[["lifetime",3],["lifetime",3]],["ordering",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["generics",3]],["constparams",3]],[[["generics",3]],["constparamsmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["generics",3]],[[],["boundlifetimes",3]],[[],["patharguments",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["",0]],["bool",0]],[[["ident",3],["ident",3]],["bool",0]],[[["lifetime",3],["lifetime",3]],["bool",0]],[[["member",4],["member",4]],["bool",0]],[[["index",3],["index",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["lifetime",3],["formatter",3]],["result",6]],[[["member",4],["formatter",3]],["result",6]],[[["index",3],["formatter",3]],["result",6]],[[["litint",3],["formatter",3]],["result",6]],[[["litfloat",3],["formatter",3]],["result",6]],null,null,null,null,[[["extern",3]],["ident",3]],[[["underscore",3]],["ident",3]],[[["crate",3]],["ident",3]],[[["super",3]],["ident",3]],[[["selftype",3]],["ident",3]],[[["selfvalue",3]],["ident",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["metalist",3]],["meta",4]],[[]],[[["path",3]],["meta",4]],[[["metanamevalue",3]],["meta",4]],[[]],[[]],[[]],[[["lit",4]],["nestedmeta",4]],[[["meta",4]],["nestedmeta",4]],[[]],[[["fieldsunnamed",3]],["fields",4]],[[["fieldsnamed",3]],["fields",4]],[[]],[[]],[[]],[[]],[[["vispublic",3]],["visibility",4]],[[["viscrate",3]],["visibility",4]],[[["visrestricted",3]],["visibility",4]],[[]],[[]],[[]],[[]],[[["exprrepeat",3]],["expr",4]],[[["exprassignop",3]],["expr",4]],[[["exprtype",3]],["expr",4]],[[["exprunary",3]],["expr",4]],[[["exprasync",3]],["expr",4]],[[["exprunsafe",3]],["expr",4]],[[["exprwhile",3]],["expr",4]],[[["expryield",3]],["expr",4]],[[["exprmacro",3]],["expr",4]],[[["exprtryblock",3]],["expr",4]],[[["exprtry",3]],["expr",4]],[[["exprawait",3]],["expr",4]],[[["exprstruct",3]],["expr",4]],[[["exprreturn",3]],["expr",4]],[[]],[[["exprbinary",3]],["expr",4]],[[["exprassign",3]],["expr",4]],[[["exprreference",3]],["expr",4]],[[["exprblock",3]],["expr",4]],[[["exprrange",3]],["expr",4]],[[["exprbox",3]],["expr",4]],[[["exprmatch",3]],["expr",4]],[[["exprarray",3]],["expr",4]],[[["exprbreak",3]],["expr",4]],[[["exprpath",3]],["expr",4]],[[["exprcall",3]],["expr",4]],[[["exprcast",3]],["expr",4]],[[["exprclosure",3]],["expr",4]],[[["exprparen",3]],["expr",4]],[[["exprcontinue",3]],["expr",4]],[[["exprmethodcall",3]],["expr",4]],[[["exprtuple",3]],["expr",4]],[[["exprfield",3]],["expr",4]],[[["exprforloop",3]],["expr",4]],[[["exprgroup",3]],["expr",4]],[[["exprloop",3]],["expr",4]],[[["exprlet",3]],["expr",4]],[[["exprif",3]],["expr",4]],[[["exprindex",3]],["expr",4]],[[["exprlit",3]],["expr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]],["index",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lifetimedef",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[]],[[["ident",3]],["typeparam",3]],[[]],[[]],[[]],[[]],[[]],[[["traitbound",3]],["typeparambound",4]],[[["lifetime",3]],["typeparambound",4]],[[]],[[]],[[]],[[["predicateeq",3]],["wherepredicate",4]],[[["predicatelifetime",3]],["wherepredicate",4]],[[["predicatetype",3]],["wherepredicate",4]],[[]],[[]],[[]],[[]],[[["itemunion",3]],["item",4]],[[["itemtrait",3]],["item",4]],[[["itemmacro",3]],["item",4]],[[["itemimpl",3]],["item",4]],[[]],[[["itemforeignmod",3]],["item",4]],[[["itemuse",3]],["item",4]],[[["itemfn",3]],["item",4]],[[["itemmod",3]],["item",4]],[[["itemstatic",3]],["item",4]],[[["itemstruct",3]],["item",4]],[[["itemmacro2",3]],["item",4]],[[["itemtraitalias",3]],["item",4]],[[["itemtype",3]],["item",4]],[[["itemconst",3]],["item",4]],[[["itemenum",3]],["item",4]],[[["itemexterncrate",3]],["item",4]],[[["deriveinput",3]],["item",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usepath",3]],["usetree",4]],[[]],[[["usegroup",3]],["usetree",4]],[[["usename",3]],["usetree",4]],[[["userename",3]],["usetree",4]],[[["useglob",3]],["usetree",4]],[[]],[[]],[[]],[[]],[[]],[[["foreignitemtype",3]],["foreignitem",4]],[[]],[[["foreignitemfn",3]],["foreignitem",4]],[[["foreignitemstatic",3]],["foreignitem",4]],[[["foreignitemmacro",3]],["foreignitem",4]],[[]],[[]],[[]],[[]],[[["traititemmacro",3]],["traititem",4]],[[["traititemmethod",3]],["traititem",4]],[[]],[[["traititemtype",3]],["traititem",4]],[[["traititemconst",3]],["traititem",4]],[[]],[[]],[[]],[[]],[[["implitemmethod",3]],["implitem",4]],[[["implitemmacro",3]],["implitem",4]],[[]],[[["implitemtype",3]],["implitem",4]],[[["implitemconst",3]],["implitem",4]],[[]],[[]],[[]],[[]],[[]],[[["pattype",3]],["fnarg",4]],[[]],[[["receiver",3]],["fnarg",4]],[[]],[[]],[[["litbyte",3]],["lit",4]],[[["litbool",3]],["lit",4]],[[]],[[["litfloat",3]],["lit",4]],[[["litstr",3]],["lit",4]],[[["litbytestr",3]],["lit",4]],[[["litint",3]],["lit",4]],[[["litchar",3]],["lit",4]],[[]],[[]],[[]],[[]],[[["literal",3]],["litint",3]],[[]],[[]],[[["literal",3]],["litfloat",3]],[[]],[[]],[[]],[[]],[[]],[[["itemenum",3]],["deriveinput",3]],[[["itemstruct",3]],["deriveinput",3]],[[["itemunion",3]],["deriveinput",3]],[[]],[[["dataunion",3]],["data",4]],[[["datastruct",3]],["data",4]],[[["dataenum",3]],["data",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typeinfer",3]],["type",4]],[[["typepath",3]],["type",4]],[[["typeimpltrait",3]],["type",4]],[[["typeslice",3]],["type",4]],[[["typenever",3]],["type",4]],[[]],[[["typemacro",3]],["type",4]],[[["typeptr",3]],["type",4]],[[["typetuple",3]],["type",4]],[[["typearray",3]],["type",4]],[[["typereference",3]],["type",4]],[[["typebarefn",3]],["type",4]],[[["typetraitobject",3]],["type",4]],[[["typeparen",3]],["type",4]],[[["typegroup",3]],["type",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["patident",3]],["pat",4]],[[["patreference",3]],["pat",4]],[[["pattype",3]],["pat",4]],[[["pattuplestruct",3]],["pat",4]],[[["pattuple",3]],["pat",4]],[[["patstruct",3]],["pat",4]],[[["patlit",3]],["pat",4]],[[["patrest",3]],["pat",4]],[[["patwild",3]],["pat",4]],[[["patbox",3]],["pat",4]],[[["patmacro",3]],["pat",4]],[[["patpath",3]],["pat",4]],[[]],[[["patrange",3]],["pat",4]],[[["pator",3]],["pat",4]],[[["patslice",3]],["pat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["path",3]],[[]],[[],["pathsegment",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["path",3]],["option",4,[["ident",3]]]],null,null,null,null,null,null,null,null,[[["ident",3],["",0]]],[[["lifetime",3],["",0]]],[[["member",4],["",0]]],[[["index",3],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullfields",4]]],[[["fields",4]]],[[["fields",4]]],[[["fields",4]],["bool",0]],[[["patharguments",4]],["bool",0]],[[["path",3],["",0]],["bool",0]],null,null,null,null,null,[[["fields",4]],["iter",3,[["field",3]]]],[[["fields",4]],["itermut",3,[["field",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["fields",4]],["usize",0]],null,null,null,null,null,[[["receiver",3]],["option",4,[["lifetime",3]]]],null,null,null,[[["generics",3]],["lifetimes",3]],null,null,null,null,[[["generics",3]],["lifetimesmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["generics",3]],["whereclause",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0],["span",3]],["ident",3]],[[["str",0],["span",3]],["lifetime",3]],[[["lifetime",3]],["lifetimedef",3]],[[["literal",3]],["lit",4]],[[["str",0],["span",3]],["litstr",3]],[[["span",3]],["litbytestr",3]],[[["u8",0],["span",3]],["litbyte",3]],[[["char",0],["span",3]],["litchar",3]],[[["str",0],["span",3]],["litint",3]],[[["str",0],["span",3]],["litfloat",3]],[[["bool",0],["span",3]],["litbool",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["ident",3]]]],[[["parsestream",6]],["result",6,[["lifetime",3]]]],[[["parsestream",6]],["result",6,[["meta",4]]]],[[["parsestream",6]],["result",6,[["metalist",3]]]],[[["parsestream",6]],["result",6,[["metanamevalue",3]]]],[[["parsestream",6]],["result",6,[["nestedmeta",4]]]],[[["parsestream",6]],["result",6,[["variant",3]]]],[[["parsestream",6]],["result",6,[["fieldsnamed",3]]]],[[["parsestream",6]],["result",6,[["fieldsunnamed",3]]]],[[["parsestream",6]],["result",6,[["visibility",4]]]],[[["parsestream",6]],["result",6,[["expr",4]]]],[[["parsestream",6]],["result",6,[["exprarray",3]]]],[[["parsestream",6]],["result",6,[["exprassign",3]]]],[[["parsestream",6]],["result",6,[["exprassignop",3]]]],[[["parsestream",6]],["result",6,[["exprasync",3]]]],[[["parsestream",6]],["result",6,[["exprbinary",3]]]],[[["parsestream",6]],["result",6,[["exprblock",3]]]],[[["parsestream",6]],["result",6,[["exprbox",3]]]],[[["parsestream",6]],["result",6,[["exprbreak",3]]]],[[["parsestream",6]],["result",6,[["exprcall",3]]]],[[["parsestream",6]],["result",6,[["exprcast",3]]]],[[["parsestream",6]],["result",6,[["exprclosure",3]]]],[[["parsestream",6]],["result",6,[["exprcontinue",3]]]],[[["parsestream",6]],["result",6,[["exprfield",3]]]],[[["parsestream",6]],["result",6,[["exprforloop",3]]]],[[["parsestream",6]],["result",6,[["exprif",3]]]],[[["parsestream",6]],["result",6,[["exprindex",3]]]],[[["parsestream",6]],["result",6,[["exprlet",3]]]],[[["parsestream",6]],["result",6,[["exprlit",3]]]],[[["parsestream",6]],["result",6,[["exprloop",3]]]],[[["parsestream",6]],["result",6,[["exprmacro",3]]]],[[["parsestream",6]],["result",6,[["exprmatch",3]]]],[[["parsestream",6]],["result",6,[["exprmethodcall",3]]]],[[["parsestream",6]],["result",6,[["exprparen",3]]]],[[["parsestream",6]],["result",6,[["exprpath",3]]]],[[["parsestream",6]],["result",6,[["exprrange",3]]]],[[["parsestream",6]],["result",6,[["exprreference",3]]]],[[["parsestream",6]],["result",6,[["exprrepeat",3]]]],[[["parsestream",6]],["result",6,[["exprreturn",3]]]],[[["parsestream",6]],["result",6,[["exprstruct",3]]]],[[["parsestream",6]],["result",6,[["exprtry",3]]]],[[["parsestream",6]],["result",6,[["exprtryblock",3]]]],[[["parsestream",6]],["result",6,[["exprtuple",3]]]],[[["parsestream",6]],["result",6,[["exprtype",3]]]],[[["parsestream",6]],["result",6,[["exprunary",3]]]],[[["parsestream",6]],["result",6,[["exprunsafe",3]]]],[[["parsestream",6]],["result",6,[["exprwhile",3]]]],[[["parsestream",6]],["result",6,[["expryield",3]]]],[[["parsestream",6]],["result",6,[["member",4]]]],[[["parsestream",6]],["result",6,[["index",3]]]],[[["parsestream",6]],["result",6,[["fieldvalue",3]]]],[[["parsestream",6]],["result",6,[["label",3]]]],[[["parsestream",6]],["result",6,[["arm",3]]]],[[["parsestream",6]],["result",6,[["rangelimits",4]]]],[[["parsestream",6]],["result",6,[["generics",3]]]],[[["parsestream",6]],["result",6,[["genericparam",4]]]],[[["parsestream",6]],["result",6,[["typeparam",3]]]],[[["parsestream",6]],["result",6,[["lifetimedef",3]]]],[[["parsestream",6]],["result",6,[["constparam",3]]]],[[["parsestream",6]],["result",6,[["boundlifetimes",3]]]],[[["parsestream",6]],["result",6,[["typeparambound",4]]]],[[["parsestream",6]],["result",6,[["traitbound",3]]]],[[["parsestream",6]],["result",6,[["traitboundmodifier",4]]]],[[["parsestream",6]],["result",6,[["whereclause",3]]]],[[["parsestream",6]],["result",6,[["wherepredicate",4]]]],[[["parsestream",6]],["result",6,[["item",4]]]],[[["parsestream",6]],["result",6,[["itemconst",3]]]],[[["parsestream",6]],["result",6,[["itemenum",3]]]],[[["parsestream",6]],["result",6,[["itemexterncrate",3]]]],[[["parsestream",6]],["result",6,[["itemfn",3]]]],[[["parsestream",6]],["result",6,[["itemforeignmod",3]]]],[[["parsestream",6]],["result",6,[["itemimpl",3]]]],[[["parsestream",6]],["result",6,[["itemmacro",3]]]],[[["parsestream",6]],["result",6,[["itemmacro2",3]]]],[[["parsestream",6]],["result",6,[["itemmod",3]]]],[[["parsestream",6]],["result",6,[["itemstatic",3]]]],[[["parsestream",6]],["result",6,[["itemstruct",3]]]],[[["parsestream",6]],["result",6,[["itemtrait",3]]]],[[["parsestream",6]],["result",6,[["itemtraitalias",3]]]],[[["parsestream",6]],["result",6,[["itemtype",3]]]],[[["parsestream",6]],["result",6,[["itemunion",3]]]],[[["parsestream",6]],["result",6,[["itemuse",3]]]],[[["parsestream",6]],["result",6,[["usetree",4]]]],[[["parsestream",6]],["result",6,[["foreignitem",4]]]],[[["parsestream",6]],["result",6,[["foreignitemfn",3]]]],[[["parsestream",6]],["result",6,[["foreignitemstatic",3]]]],[[["parsestream",6]],["result",6,[["foreignitemtype",3]]]],[[["parsestream",6]],["result",6,[["foreignitemmacro",3]]]],[[["parsestream",6]],["result",6,[["traititem",4]]]],[[["parsestream",6]],["result",6,[["traititemconst",3]]]],[[["parsestream",6]],["result",6,[["traititemmethod",3]]]],[[["parsestream",6]],["result",6,[["traititemtype",3]]]],[[["parsestream",6]],["result",6,[["traititemmacro",3]]]],[[["parsestream",6]],["result",6,[["implitem",4]]]],[[["parsestream",6]],["result",6,[["implitemconst",3]]]],[[["parsestream",6]],["result",6,[["implitemmethod",3]]]],[[["parsestream",6]],["result",6,[["implitemtype",3]]]],[[["parsestream",6]],["result",6,[["implitemmacro",3]]]],[[["parsestream",6]],["result",6,[["signature",3]]]],[[["parsestream",6]],["result",6,[["fnarg",4]]]],[[["parsestream",6]],["result",6,[["receiver",3]]]],[[["parsestream",6]],["result",6,[["file",3]]]],[[["parsestream",6]],["result",6,[["lit",4]]]],[[["litstr",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["litstr",3]]]],[[["parsestream",6]],["result",6,[["litbytestr",3]]]],[[["parsestream",6]],["result",6,[["litbyte",3]]]],[[["parsestream",6]],["result",6,[["litchar",3]]]],[[["parsestream",6]],["result",6,[["litint",3]]]],[[["parsestream",6]],["result",6,[["litfloat",3]]]],[[["parsestream",6]],["result",6,[["litbool",3]]]],[[["parsestream",6]],["result",6,[["macro",3]]]],[[["parsestream",6]],["result",6,[["deriveinput",3]]]],[[["parsestream",6]],["result",6,[["binop",4]]]],[[["parsestream",6]],["result",6,[["unop",4]]]],[[["parsestream",6]],["result",6,[["block",3]]]],[[["parsestream",6]],["result",6,[["stmt",4]]]],[[["parsestream",6]],["result",6,[["type",4]]]],[[["parsestream",6]],["result",6,[["typearray",3]]]],[[["parsestream",6]],["result",6,[["typebarefn",3]]]],[[["parsestream",6]],["result",6,[["typegroup",3]]]],[[["parsestream",6]],["result",6,[["typeimpltrait",3]]]],[[["parsestream",6]],["result",6,[["typeinfer",3]]]],[[["parsestream",6]],["result",6,[["typemacro",3]]]],[[["parsestream",6]],["result",6,[["typenever",3]]]],[[["parsestream",6]],["result",6,[["typeparen",3]]]],[[["parsestream",6]],["result",6,[["typepath",3]]]],[[["parsestream",6]],["result",6,[["typeptr",3]]]],[[["parsestream",6]],["result",6,[["typereference",3]]]],[[["parsestream",6]],["result",6,[["typeslice",3]]]],[[["parsestream",6]],["result",6,[["typetraitobject",3]]]],[[["parsestream",6]],["result",6,[["typetuple",3]]]],[[["parsestream",6]],["result",6,[["abi",3]]]],[[["parsestream",6]],["result",6,[["barefnarg",3]]]],[[["parsestream",6]],["result",6,[["returntype",4]]]],[[["parsestream",6]],["result",6,[["pat",4]]]],[[["parsestream",6]],["result",6,[["path",3]]]],[[["parsestream",6]],["result",6,[["pathsegment",3]]]],[[["parsestream",6]],["result",6,[["genericargument",4]]]],[[["parsestream",6]],["result",6,[["anglebracketedgenericarguments",3]]]],[[["parsestream",6]],["result",6,[["binding",3]]]],[[["parsestream",6]],["result",6,[["constraint",3]]]],[[["parsestream",6]],["result",6,[["parenthesizedgenericarguments",3]]]],[[["tokenstream",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["ident",3]]]],[[["attribute",3]],["result",6,[["parse",8]]]],[[["attribute",3],["parser",8]],["result",6]],[[["macro",3]],["result",6,[["parse",8]]]],[[["macro",3],["parser",8]],["result",6]],[[["str",0]],["result",6,[["file",3]]]],[[["parsestream",6]],["result",6,[["vec",3,[["attribute",3]]]]]],null,[[["attribute",3]],["result",6,[["meta",4]]]],[[["parsestream",6]],["result",6,[["path",3]]]],[[["parsestream",6]],["result",6,[["field",3]]]],[[["parsestream",6]],["result",6,[["vec",3,[["attribute",3]]]]]],null,[[["str",0]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["field",3]]]],[[["litstr",3],["parser",8]],["result",6]],[[["parsestream",6]],["result",6,[["vec",3,[["stmt",4]]]]]],[[["parsestream",6]],["result",6,[["expr",4]]]],[[["ident",3],["ident",3]],["option",4,[["ordering",4]]]],[[["lifetime",3],["lifetime",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,[[["meta",4]],["path",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signature",3]],["option",4,[["fnarg",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["span",3]]],[[["lifetime",3],["span",3]]],[[["lit",4],["span",3]]],[[["litstr",3],["span",3]]],[[["litbytestr",3],["span",3]]],[[["litbyte",3],["span",3]]],[[["litchar",3],["span",3]]],[[["litint",3],["span",3]]],[[["litfloat",3],["span",3]]],[[["litbool",3],["span",3]]],null,null,null,null,null,[[["ident",3]],["span",3]],[[["ident",3]],["option",4,[["span",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["lifetime",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["member",4]],["option",4,[["span",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["index",3]],["option",4,[["span",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["lit",4]],["span",3]],[[["",0]],["span",3]],[[["litstr",3]],["span",3]],[[["litbytestr",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["litbyte",3]],["span",3]],[[["",0]],["span",3]],[[["litchar",3]],["span",3]],[[["litint",3]],["span",3]],[[["",0]],["span",3]],[[["litfloat",3]],["span",3]],[[["",0]],["span",3]],[[["litbool",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],null,null,null,[[["generics",3]]],null,null,null,null,null,null,null,null,null,[[["lit",4]],["str",0]],[[["litstr",3]],["str",0]],[[["litbytestr",3]],["str",0]],[[["litbyte",3]],["str",0]],[[["litchar",3]],["str",0]],[[["litint",3]],["str",0]],[[["litfloat",3]],["str",0]],null,null,nullstring",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["ident",3],["tokenstream",3]]],[[["implgenerics",3],["tokenstream",3]]],[[["typegenerics",3],["tokenstream",3]]],[[["turbofish",3],["tokenstream",3]]],[[["lifetime",3],["tokenstream",3]]],[[["attribute",3],["tokenstream",3]]],[[["meta",4],["tokenstream",3]]],[[["metalist",3],["tokenstream",3]]],[[["metanamevalue",3],["tokenstream",3]]],[[["nestedmeta",4],["tokenstream",3]]],[[["variant",3],["tokenstream",3]]],[[["fields",4],["tokenstream",3]]],[[["fieldsnamed",3],["tokenstream",3]]],[[["fieldsunnamed",3],["tokenstream",3]]],[[["field",3],["tokenstream",3]]],[[["visibility",4],["tokenstream",3]]],[[["vispublic",3],["tokenstream",3]]],[[["viscrate",3],["tokenstream",3]]],[[["visrestricted",3],["tokenstream",3]]],[[["expr",4],["tokenstream",3]]],[[["exprarray",3],["tokenstream",3]]],[[["exprassign",3],["tokenstream",3]]],[[["exprassignop",3],["tokenstream",3]]],[[["exprasync",3],["tokenstream",3]]],[[["exprawait",3],["tokenstream",3]]],[[["exprbinary",3],["tokenstream",3]]],[[["exprblock",3],["tokenstream",3]]],[[["exprbox",3],["tokenstream",3]]],[[["exprbreak",3],["tokenstream",3]]],[[["exprcall",3],["tokenstream",3]]],[[["exprcast",3],["tokenstream",3]]],[[["exprclosure",3],["tokenstream",3]]],[[["exprcontinue",3],["tokenstream",3]]],[[["exprfield",3],["tokenstream",3]]],[[["exprforloop",3],["tokenstream",3]]],[[["exprgroup",3],["tokenstream",3]]],[[["exprif",3],["tokenstream",3]]],[[["exprindex",3],["tokenstream",3]]],[[["exprlet",3],["tokenstream",3]]],[[["exprlit",3],["tokenstream",3]]],[[["exprloop",3],["tokenstream",3]]],[[["exprmacro",3],["tokenstream",3]]],[[["exprmatch",3],["tokenstream",3]]],[[["exprmethodcall",3],["tokenstream",3]]],[[["exprparen",3],["tokenstream",3]]],[[["exprpath",3],["tokenstream",3]]],[[["exprrange",3],["tokenstream",3]]],[[["exprreference",3],["tokenstream",3]]],[[["exprrepeat",3],["tokenstream",3]]],[[["exprreturn",3],["tokenstream",3]]],[[["exprstruct",3],["tokenstream",3]]],[[["exprtry",3],["tokenstream",3]]],[[["exprtryblock",3],["tokenstream",3]]],[[["exprtuple",3],["tokenstream",3]]],[[["exprtype",3],["tokenstream",3]]],[[["exprunary",3],["tokenstream",3]]],[[["exprunsafe",3],["tokenstream",3]]],[[["exprwhile",3],["tokenstream",3]]],[[["expryield",3],["tokenstream",3]]],[[["member",4],["tokenstream",3]]],[[["index",3],["tokenstream",3]]],[[["methodturbofish",3],["tokenstream",3]]],[[["genericmethodargument",4],["tokenstream",3]]],[[["fieldvalue",3],["tokenstream",3]]],[[["label",3],["tokenstream",3]]],[[["arm",3],["tokenstream",3]]],[[["generics",3],["tokenstream",3]]],[[["genericparam",4],["tokenstream",3]]],[[["typeparam",3],["tokenstream",3]]],[[["lifetimedef",3],["tokenstream",3]]],[[["constparam",3],["tokenstream",3]]],[[["boundlifetimes",3],["tokenstream",3]]],[[["typeparambound",4],["tokenstream",3]]],[[["traitbound",3],["tokenstream",3]]],[[["traitboundmodifier",4],["tokenstream",3]]],[[["whereclause",3],["tokenstream",3]]],[[["wherepredicate",4],["tokenstream",3]]],[[["predicatetype",3],["tokenstream",3]]],[[["predicatelifetime",3],["tokenstream",3]]],[[["predicateeq",3],["tokenstream",3]]],[[["item",4],["tokenstream",3]]],[[["itemconst",3],["tokenstream",3]]],[[["itemenum",3],["tokenstream",3]]],[[["itemexterncrate",3],["tokenstream",3]]],[[["itemfn",3],["tokenstream",3]]],[[["itemforeignmod",3],["tokenstream",3]]],[[["itemimpl",3],["tokenstream",3]]],[[["itemmacro",3],["tokenstream",3]]],[[["itemmacro2",3],["tokenstream",3]]],[[["itemmod",3],["tokenstream",3]]],[[["itemstatic",3],["tokenstream",3]]],[[["itemstruct",3],["tokenstream",3]]],[[["itemtrait",3],["tokenstream",3]]],[[["itemtraitalias",3],["tokenstream",3]]],[[["itemtype",3],["tokenstream",3]]],[[["itemunion",3],["tokenstream",3]]],[[["itemuse",3],["tokenstream",3]]],[[["usetree",4],["tokenstream",3]]],[[["usepath",3],["tokenstream",3]]],[[["usename",3],["tokenstream",3]]],[[["userename",3],["tokenstream",3]]],[[["useglob",3],["tokenstream",3]]],[[["usegroup",3],["tokenstream",3]]],[[["foreignitem",4],["tokenstream",3]]],[[["foreignitemfn",3],["tokenstream",3]]],[[["foreignitemstatic",3],["tokenstream",3]]],[[["foreignitemtype",3],["tokenstream",3]]],[[["foreignitemmacro",3],["tokenstream",3]]],[[["traititem",4],["tokenstream",3]]],[[["traititemconst",3],["tokenstream",3]]],[[["traititemmethod",3],["tokenstream",3]]],[[["traititemtype",3],["tokenstream",3]]],[[["traititemmacro",3],["tokenstream",3]]],[[["implitem",4],["tokenstream",3]]],[[["implitemconst",3],["tokenstream",3]]],[[["implitemmethod",3],["tokenstream",3]]],[[["implitemtype",3],["tokenstream",3]]],[[["implitemmacro",3],["tokenstream",3]]],[[["signature",3],["tokenstream",3]]],[[["fnarg",4],["tokenstream",3]]],[[["receiver",3],["tokenstream",3]]],[[["file",3],["tokenstream",3]]],[[["lit",4],["tokenstream",3]]],[[["litstr",3],["tokenstream",3]]],[[["litbytestr",3],["tokenstream",3]]],[[["litbyte",3],["tokenstream",3]]],[[["litchar",3],["tokenstream",3]]],[[["litint",3],["tokenstream",3]]],[[["litfloat",3],["tokenstream",3]]],[[["litbool",3],["tokenstream",3]]],[[["macro",3],["tokenstream",3]]],[[["deriveinput",3],["tokenstream",3]]],[[["binop",4],["tokenstream",3]]],[[["unop",4],["tokenstream",3]]],[[["block",3],["tokenstream",3]]],[[["stmt",4],["tokenstream",3]]],[[["local",3],["tokenstream",3]]],[[["type",4],["tokenstream",3]]],[[["typearray",3],["tokenstream",3]]],[[["typebarefn",3],["tokenstream",3]]],[[["typegroup",3],["tokenstream",3]]],[[["typeimpltrait",3],["tokenstream",3]]],[[["typeinfer",3],["tokenstream",3]]],[[["typemacro",3],["tokenstream",3]]],[[["typenever",3],["tokenstream",3]]],[[["typeparen",3],["tokenstream",3]]],[[["typepath",3],["tokenstream",3]]],[[["typeptr",3],["tokenstream",3]]],[[["typereference",3],["tokenstream",3]]],[[["typeslice",3],["tokenstream",3]]],[[["typetraitobject",3],["tokenstream",3]]],[[["typetuple",3],["tokenstream",3]]],[[["abi",3],["tokenstream",3]]],[[["barefnarg",3],["tokenstream",3]]],[[["variadic",3],["tokenstream",3]]],[[["returntype",4],["tokenstream",3]]],[[["pat",4],["tokenstream",3]]],[[["patbox",3],["tokenstream",3]]],[[["patident",3],["tokenstream",3]]],[[["patlit",3],["tokenstream",3]]],[[["patmacro",3],["tokenstream",3]]],[[["pator",3],["tokenstream",3]]],[[["patpath",3],["tokenstream",3]]],[[["patrange",3],["tokenstream",3]]],[[["patreference",3],["tokenstream",3]]],[[["patrest",3],["tokenstream",3]]],[[["patslice",3],["tokenstream",3]]],[[["patstruct",3],["tokenstream",3]]],[[["pattuple",3],["tokenstream",3]]],[[["pattuplestruct",3],["tokenstream",3]]],[[["pattype",3],["tokenstream",3]]],[[["patwild",3],["tokenstream",3]]],[[["fieldpat",3],["tokenstream",3]]],[[["path",3],["tokenstream",3]]],[[["pathsegment",3],["tokenstream",3]]],[[["patharguments",4],["tokenstream",3]]],[[["genericargument",4],["tokenstream",3]]],[[["anglebracketedgenericarguments",3],["tokenstream",3]]],[[["binding",3],["tokenstream",3]]],[[["constraint",3],["tokenstream",3]]],[[["parenthesizedgenericarguments",3],["tokenstream",3]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["generics",3]],["typeparams",3]],[[["generics",3]],["typeparamsmut",3]],null,null,null,null,null,null,null,null,null,[[["ident",3]],["ident",3]],null,null,null,null,null,null,[[["litstr",3]],["string",3]],[[["litbytestr",3]],["vec",3,[["u8",0]]]],[[["litbyte",3]],["u8",0]],[[["litchar",3]],["char",0]],[[["litbool",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["parsestream",6]],["result",6,[["type",4]]]],[[["parsestream",6]],["result",6,[["typetraitobject",3]]]],[[["parsestream",6]],["result",6,[["returntype",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenbuffer",3]],["cursor",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cursor",3]],["cursor",3]],[[["",0],["",0]]],[[],["cursor",3]],[[["cursor",3]],["bool",0]],[[["cursor",3],["cursor",3]],["bool",0]],[[]],[[]],[[["cursor",3],["delimiter",4]],["option",4]],[[["cursor",3]],["option",4]],[[]],[[]],[[["cursor",3]],["option",4]],[[["cursor",3]],["option",4]],[[["tokenstream",3]],["tokenbuffer",3]],[[["tokenstream",3]],["tokenbuffer",3]],[[["cursor",3]],["option",4]],[[["cursor",3]],["span",3]],[[["",0]]],[[["cursor",3]],["tokenstream",3]],[[["cursor",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["parsestream",6]],["result",6]],null,[[["",0]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,[[["parsebuffer",3],["parsebuffer",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parsebuffer",3]],["result",6]],[[["stepcursor",3]],["stepcursor",3]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["error",3],["error",3]]],[[["parsebuffer",3]],["cursor",3]],[[["stepcursor",3]]],null,[[["parsebuffer",3]]],[[["lookahead1",3]],["error",3]],[[["parsebuffer",3],["display",8]],["error",3]],[[["stepcursor",3],["display",8]],["error",3]],[[["error",3],["intoiterator",8]]],[[["parsebuffer",3],["formatter",3]],["result",6]],[[["parsebuffer",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["parsebuffer",3]],["parsebuffer",3]],[[]],[[]],[[]],[[]],[[["lexerror",3]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["tokenstream",3]],[[["error",3]]],[[["error",3]]],[[["parsebuffer",3]],["bool",0]],[[["parsebuffer",3]],["lookahead1",3]],[[["span",3],["display",8]],["error",3]],[[["totokens",8],["display",8]],["error",3]],[[["parsestream",6]],["result",6]],[[["parsebuffer",3]],["result",6,[["parse",8]]]],[[["tokenstream",3]],["result",6]],[[["parsestream",6]],["result",6,[["nothing",3]]]],[[["tokenstream",3]],["result",6]],[[["str",0]],["result",6]],[[["parsebuffer",3]],["result",6,[["punctuated",3,[["parse",8]]]]]],[[["lookahead1",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3]],["span",3]],[[["error",3]],["span",3]],[[["parsebuffer",3]],["result",6]],[[["error",3]],["tokenstream",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["punctuated",3]]],[[["punctuated",3]],["punctuated",3]],[[["pairs",3]],["pairs",3]],[[["intopairs",3]],["intopairs",3]],[[["intoiter",3]],["intoiter",3]],[[["iter",3]],["iter",3]],[[["pair",4]],["pair",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["punctuated",3]],[[["punctuated",3]],["bool",0]],[[["punctuated",3],["intoiterator",8]]],[[["punctuated",3],["intoiterator",8]]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["punctuated",3]],[[["intoiterator",8]],["punctuated",3]],[[["punctuated",3],["usize",0]]],[[["punctuated",3],["usize",0]]],[[["punctuated",3],["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["punctuated",3]]],[[["punctuated",3]]],[[["punctuated",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["punctuated",3]],["intopairs",3]],[[["pair",4]]],[[["pair",4]]],[[["punctuated",3]],["bool",0]],[[["punctuated",3]],["iter",3]],[[["punctuated",3]],["itermut",3]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["usize",0]],[[["pairs",3]],["usize",0]],[[["pairsmut",3]],["usize",0]],[[["intopairs",3]],["usize",0]],[[["intoiter",3]],["usize",0]],[[["iter",3]],["usize",0]],[[["itermut",3]],["usize",0]],[[],["punctuated",3]],[[["option",4]],["pair",4]],[[["pairs",3]],["option",4]],[[["pairsmut",3]],["option",4]],[[["intopairs",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["iter",3]],["option",4]],[[["itermut",3]],["option",4]],[[["pairs",3]],["option",4]],[[["pairsmut",3]],["option",4]],[[["intopairs",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["iter",3]],["option",4]],[[["itermut",3]],["option",4]],[[["punctuated",3]],["pairs",3]],[[["punctuated",3]],["pairsmut",3]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["punctuated",3]],["option",4,[["pair",4]]]],[[["pair",4]],["option",4]],[[["punctuated",3]]],[[["punctuated",3]]],[[["punctuated",3]]],[[["pairs",3]]],[[["pairsmut",3]]],[[["intopairs",3]]],[[["intoiter",3]]],[[["iter",3]]],[[["itermut",3]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["punctuated",3],["tokenstream",3]]],[[["pair",4],["tokenstream",3]]],[[["punctuated",3]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["pair",4]],["",0]],[[["pair",4]],["",0]],null,null,null,null,[[["",0]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["underscore",3]],["underscore",3]],[[["abstract",3]],["abstract",3]],[[["as",3]],["as",3]],[[["async",3]],["async",3]],[[["auto",3]],["auto",3]],[[["await",3]],["await",3]],[[["become",3]],["become",3]],[[["box",3]],["box",3]],[[["break",3]],["break",3]],[[["const",3]],["const",3]],[[["continue",3]],["continue",3]],[[["crate",3]],["crate",3]],[[["default",3]],["default",3]],[[["do",3]],["do",3]],[[["dyn",3]],["dyn",3]],[[["else",3]],["else",3]],[[["enum",3]],["enum",3]],[[["extern",3]],["extern",3]],[[["final",3]],["final",3]],[[["fn",3]],["fn",3]],[[["for",3]],["for",3]],[[["if",3]],["if",3]],[[["impl",3]],["impl",3]],[[["in",3]],["in",3]],[[["let",3]],["let",3]],[[["loop",3]],["loop",3]],[[["macro",3]],["macro",3]],[[["match",3]],["match",3]],[[["mod",3]],["mod",3]],[[["move",3]],["move",3]],[[["mut",3]],["mut",3]],[[["override",3]],["override",3]],[[["priv",3]],["priv",3]],[[["pub",3]],["pub",3]],[[["ref",3]],["ref",3]],[[["return",3]],["return",3]],[[["selftype",3]],["selftype",3]],[[["selfvalue",3]],["selfvalue",3]],[[["static",3]],["static",3]],[[["struct",3]],["struct",3]],[[["super",3]],["super",3]],[[["trait",3]],["trait",3]],[[["try",3]],["try",3]],[[["type",3]],["type",3]],[[["typeof",3]],["typeof",3]],[[["union",3]],["union",3]],[[["unsafe",3]],["unsafe",3]],[[["unsized",3]],["unsized",3]],[[["use",3]],["use",3]],[[["virtual",3]],["virtual",3]],[[["where",3]],["where",3]],[[["while",3]],["while",3]],[[["yield",3]],["yield",3]],[[["add",3]],["add",3]],[[["addeq",3]],["addeq",3]],[[["and",3]],["and",3]],[[["andand",3]],["andand",3]],[[["andeq",3]],["andeq",3]],[[["at",3]],["at",3]],[[["bang",3]],["bang",3]],[[["caret",3]],["caret",3]],[[["careteq",3]],["careteq",3]],[[["colon",3]],["colon",3]],[[["colon2",3]],["colon2",3]],[[["comma",3]],["comma",3]],[[["div",3]],["div",3]],[[["diveq",3]],["diveq",3]],[[["dollar",3]],["dollar",3]],[[["dot",3]],["dot",3]],[[["dot2",3]],["dot2",3]],[[["dot3",3]],["dot3",3]],[[["dotdoteq",3]],["dotdoteq",3]],[[["eq",3]],["eq",3]],[[["eqeq",3]],["eqeq",3]],[[["ge",3]],["ge",3]],[[["gt",3]],["gt",3]],[[["le",3]],["le",3]],[[["lt",3]],["lt",3]],[[["muleq",3]],["muleq",3]],[[["ne",3]],["ne",3]],[[["or",3]],["or",3]],[[["oreq",3]],["oreq",3]],[[["oror",3]],["oror",3]],[[["pound",3]],["pound",3]],[[["question",3]],["question",3]],[[["rarrow",3]],["rarrow",3]],[[["larrow",3]],["larrow",3]],[[["rem",3]],["rem",3]],[[["remeq",3]],["remeq",3]],[[["fatarrow",3]],["fatarrow",3]],[[["semi",3]],["semi",3]],[[["shl",3]],["shl",3]],[[["shleq",3]],["shleq",3]],[[["shr",3]],["shr",3]],[[["shreq",3]],["shreq",3]],[[["star",3]],["star",3]],[[["sub",3]],["sub",3]],[[["subeq",3]],["subeq",3]],[[["tilde",3]],["tilde",3]],[[["brace",3]],["brace",3]],[[["bracket",3]],["bracket",3]],[[["paren",3]],["paren",3]],[[["group",3]],["groupunderscore",3]],[[],["abstract",3]],[[],["as",3]],[[],["async",3]],[[],["auto",3]],[[],["await",3]],[[],["become",3]],[[],["box",3]],[[],["break",3]],[[],["const",3]],[[],["continue",3]],[[],["crate",3]],[[],["default",3]],[[],["do",3]],[[],["dyn",3]],[[],["else",3]],[[],["enum",3]],[[],["extern",3]],[[],["final",3]],[[],["fn",3]],[[],["for",3]],[[],["if",3]],[[],["impl",3]],[[],["in",3]],[[],["let",3]],[[],["loop",3]],[[],["macro",3]],[[],["match",3]],[[],["mod",3]],[[],["move",3]],[[],["mut",3]],[[],["override",3]],[[],["priv",3]],[[],["pub",3]],[[],["ref",3]],[[],["return",3]],[[],["selftype",3]],[[],["selfvalue",3]],[[],["static",3]],[[],["struct",3]],[[],["super",3]],[[],["trait",3]],[[],["try",3]],[[],["type",3]],[[],["typeof",3]],[[],["union",3]],[[],["unsafe",3]],[[],["unsized",3]],[[],["use",3]],[[],["virtual",3]],[[],["where",3]],[[],["while",3]],[[],["yield",3]],[[],["add",3]],[[],["addeq",3]],[[],["and",3]],[[],["andand",3]],[[],["andeq",3]],[[],["at",3]],[[],["bang",3]],[[],["caret",3]],[[],["careteq",3]],[[],["colon",3]],[[],["colon2",3]],[[],["comma",3]],[[],["div",3]],[[],["diveq",3]],[[],["dollar",3]],[[],["dot",3]],[[],["dot2",3]],[[],["dot3",3]],[[],["dotdoteq",3]],[[],["eq",3]],[[],["eqeq",3]],[[],["ge",3]],[[],["gt",3]],[[],["le",3]],[[],["lt",3]],[[],["muleq",3]],[[],["ne",3]],[[],["or",3]],[[],["oreq",3]],[[],["oror",3]],[[],["pound",3]],[[],["question",3]],[[],["rarrow",3]],[[],["larrow",3]],[[],["rem",3]],[[],["remeq",3]],[[],["fatarrow",3]],[[],["semi",3]],[[],["shl",3]],[[],["shleq",3]],[[],["shr",3]],[[],["shreq",3]],[[],["star",3]],[[],["sub",3]],[[],["subeq",3]],[[],["tilde",3]],[[],["brace",3]],[[],["bracket",3]],[[],["paren",3]],[[],["group",3]],[[["underscore",3]]],[[["add",3]]],[[["and",3]]],[[["at",3]]],[[["bang",3]]],[[["caret",3]]],[[["colon",3]]],[[["comma",3]]],[[["div",3]]],[[["dollar",3]]],[[["dot",3]]],[[["eq",3]]],[[["gt",3]]],[[["lt",3]]],[[["or",3]]],[[["pound",3]]],[[["question",3]]],[[["rem",3]]],[[["semi",3]]],[[["star",3]]],[[["sub",3]]],[[["tilde",3]]],[[["underscore",3]]],[[["add",3]]],[[["and",3]]],[[["at",3]]],[[["bang",3]]],[[["caret",3]]],[[["colon",3]]],[[["comma",3]]],[[["div",3]]],[[["dollar",3]]],[[["dot",3]]],[[["eq",3]]],[[["gt",3]]],[[["lt",3]]],[[["or",3]]],[[["pound",3]]],[[["question",3]]],[[["rem",3]]],[[["semi",3]]],[[["star",3]]],[[["sub",3]]],[[["tilde",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["parsestream",6]],["result",6,[["underscore",3]]]],[[["parsestream",6]],["result",6,[["abstract",3]]]],[[["parsestream",6]],["result",6,[["as",3]]]],[[["parsestream",6]],["result",6,[["async",3]]]],[[["parsestream",6]],["result",6,[["auto",3]]]],[[["parsestream",6]],["result",6,[["await",3]]]],[[["parsestream",6]],["result",6,[["become",3]]]],[[["parsestream",6]],["result",6,[["box",3]]]],[[["parsestream",6]],["result",6,[["break",3]]]],[[["parsestream",6]],["result",6,[["const",3]]]],[[["parsestream",6]],["result",6,[["continue",3]]]],[[["parsestream",6]],["result",6,[["crate",3]]]],[[["parsestream",6]],["result",6,[["default",3]]]],[[["parsestream",6]],["result",6,[["do",3]]]],[[["parsestream",6]],["result",6,[["dyn",3]]]],[[["parsestream",6]],["result",6,[["else",3]]]],[[["parsestream",6]],["result",6,[["enum",3]]]],[[["parsestream",6]],["result",6,[["extern",3]]]],[[["parsestream",6]],["result",6,[["final",3]]]],[[["parsestream",6]],["result",6,[["fn",3]]]],[[["parsestream",6]],["result",6,[["for",3]]]],[[["parsestream",6]],["result",6,[["if",3]]]],[[["parsestream",6]],["result",6,[["impl",3]]]],[[["parsestream",6]],["result",6,[["in",3]]]],[[["parsestream",6]],["result",6,[["let",3]]]],[[["parsestream",6]],["result",6,[["loop",3]]]],[[["parsestream",6]],["result",6,[["macro",3]]]],[[["parsestream",6]],["result",6,[["match",3]]]],[[["parsestream",6]],["result",6,[["mod",3]]]],[[["parsestream",6]],["result",6,[["move",3]]]],[[["parsestream",6]],["result",6,[["mut",3]]]],[[["parsestream",6]],["result",6,[["override",3]]]],[[["parsestream",6]],["result",6,[["priv",3]]]],[[["parsestream",6]],["result",6,[["pub",3]]]],[[["parsestream",6]],["result",6,[["ref",3]]]],[[["parsestream",6]],["result",6,[["return",3]]]],[[["parsestream",6]],["result",6,[["selftype",3]]]],[[["parsestream",6]],["result",6,[["selfvalue",3]]]],[[["parsestream",6]],["result",6,[["static",3]]]],[[["parsestream",6]],["result",6,[["struct",3]]]],[[["parsestream",6]],["result",6,[["super",3]]]],[[["parsestream",6]],["result",6,[["trait",3]]]],[[["parsestream",6]],["result",6,[["try",3]]]],[[["parsestream",6]],["result",6,[["type",3]]]],[[["parsestream",6]],["result",6,[["typeof",3]]]],[[["parsestream",6]],["result",6,[["union",3]]]],[[["parsestream",6]],["result",6,[["unsafe",3]]]],[[["parsestream",6]],["result",6,[["unsized",3]]]],[[["parsestream",6]],["result",6,[["use",3]]]],[[["parsestream",6]],["result",6,[["virtual",3]]]],[[["parsestream",6]],["result",6,[["where",3]]]],[[["parsestream",6]],["result",6,[["while",3]]]],[[["parsestream",6]],["result",6,[["yield",3]]]],[[["parsestream",6]],["result",6,[["add",3]]]],[[["parsestream",6]],["result",6,[["addeq",3]]]],[[["parsestream",6]],["result",6,[["and",3]]]],[[["parsestream",6]],["result",6,[["andand",3]]]],[[["parsestream",6]],["result",6,[["andeq",3]]]],[[["parsestream",6]],["result",6,[["at",3]]]],[[["parsestream",6]],["result",6,[["bang",3]]]],[[["parsestream",6]],["result",6,[["caret",3]]]],[[["parsestream",6]],["result",6,[["careteq",3]]]],[[["parsestream",6]],["result",6,[["colon",3]]]],[[["parsestream",6]],["result",6,[["colon2",3]]]],[[["parsestream",6]],["result",6,[["comma",3]]]],[[["parsestream",6]],["result",6,[["div",3]]]],[[["parsestream",6]],["result",6,[["diveq",3]]]],[[["parsestream",6]],["result",6,[["dollar",3]]]],[[["parsestream",6]],["result",6,[["dot",3]]]],[[["parsestream",6]],["result",6,[["dot2",3]]]],[[["parsestream",6]],["result",6,[["dot3",3]]]],[[["parsestream",6]],["result",6,[["dotdoteq",3]]]],[[["parsestream",6]],["result",6,[["eq",3]]]],[[["parsestream",6]],["result",6,[["eqeq",3]]]],[[["parsestream",6]],["result",6,[["ge",3]]]],[[["parsestream",6]],["result",6,[["gt",3]]]],[[["parsestream",6]],["result",6,[["le",3]]]],[[["parsestream",6]],["result",6,[["lt",3]]]],[[["parsestream",6]],["result",6,[["muleq",3]]]],[[["parsestream",6]],["result",6,[["ne",3]]]],[[["parsestream",6]],["result",6,[["or",3]]]],[[["parsestream",6]],["result",6,[["oreq",3]]]],[[["parsestream",6]],["result",6,[["oror",3]]]],[[["parsestream",6]],["result",6,[["pound",3]]]],[[["parsestream",6]],["result",6,[["question",3]]]],[[["parsestream",6]],["result",6,[["rarrow",3]]]],[[["parsestream",6]],["result",6,[["larrow",3]]]],[[["parsestream",6]],["result",6,[["rem",3]]]],[[["parsestream",6]],["result",6,[["remeq",3]]]],[[["parsestream",6]],["result",6,[["fatarrow",3]]]],[[["parsestream",6]],["result",6,[["semi",3]]]],[[["parsestream",6]],["result",6,[["shl",3]]]],[[["parsestream",6]],["result",6,[["shleq",3]]]],[[["parsestream",6]],["result",6,[["shr",3]]]],[[["parsestream",6]],["result",6,[["shreq",3]]]],[[["parsestream",6]],["result",6,[["star",3]]]],[[["parsestream",6]],["result",6,[["sub",3]]]],[[["parsestream",6]],["result",6,[["subeq",3]]]],[[["parsestream",6]],["result",6,[["tilde",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["brace",3],["tokenstream",3]]],[[["bracket",3],["tokenstream",3]]],[[["paren",3],["tokenstream",3]]],[[["group",3],["tokenstreamunderscore",3],["tokenstream",3]]],[[["abstract",3],["tokenstream",3]]],[[["as",3],["tokenstream",3]]],[[["async",3],["tokenstream",3]]],[[["auto",3],["tokenstream",3]]],[[["await",3],["tokenstream",3]]],[[["become",3],["tokenstream",3]]],[[["box",3],["tokenstream",3]]],[[["break",3],["tokenstream",3]]],[[["const",3],["tokenstream",3]]],[[["continue",3],["tokenstream",3]]],[[["crate",3],["tokenstream",3]]],[[["default",3],["tokenstream",3]]],[[["do",3],["tokenstream",3]]],[[["dyn",3],["tokenstream",3]]],[[["else",3],["tokenstream",3]]],[[["enum",3],["tokenstream",3]]],[[["extern",3],["tokenstream",3]]],[[["final",3],["tokenstream",3]]],[[["fn",3],["tokenstream",3]]],[[["for",3],["tokenstream",3]]],[[["if",3],["tokenstream",3]]],[[["impl",3],["tokenstream",3]]],[[["in",3],["tokenstream",3]]],[[["let",3],["tokenstream",3]]],[[["loop",3],["tokenstream",3]]],[[["macro",3],["tokenstream",3]]],[[["match",3],["tokenstream",3]]],[[["mod",3],["tokenstream",3]]],[[["move",3],["tokenstream",3]]],[[["mut",3],["tokenstream",3]]],[[["override",3],["tokenstream",3]]],[[["priv",3],["tokenstream",3]]],[[["pub",3],["tokenstream",3]]],[[["ref",3],["tokenstream",3]]],[[["return",3],["tokenstream",3]]],[[["selftype",3],["tokenstream",3]]],[[["selfvalue",3],["tokenstream",3]]],[[["static",3],["tokenstream",3]]],[[["struct",3],["tokenstream",3]]],[[["super",3],["tokenstream",3]]],[[["trait",3],["tokenstream",3]]],[[["try",3],["tokenstream",3]]],[[["type",3],["tokenstream",3]]],[[["typeof",3],["tokenstream",3]]],[[["union",3],["tokenstream",3]]],[[["unsafe",3],["tokenstream",3]]],[[["unsized",3],["tokenstream",3]]],[[["use",3],["tokenstream",3]]],[[["virtual",3],["tokenstream",3]]],[[["where",3],["tokenstream",3]]],[[["while",3],["tokenstream",3]]],[[["yield",3],["tokenstream",3]]],[[["add",3],["tokenstream",3]]],[[["addeq",3],["tokenstream",3]]],[[["and",3],["tokenstream",3]]],[[["andand",3],["tokenstream",3]]],[[["andeq",3],["tokenstream",3]]],[[["at",3],["tokenstream",3]]],[[["bang",3],["tokenstream",3]]],[[["caret",3],["tokenstream",3]]],[[["careteq",3],["tokenstream",3]]],[[["colon",3],["tokenstream",3]]],[[["colon2",3],["tokenstream",3]]],[[["comma",3],["tokenstream",3]]],[[["div",3],["tokenstream",3]]],[[["diveq",3],["tokenstream",3]]],[[["dollar",3],["tokenstream",3]]],[[["dot",3],["tokenstream",3]]],[[["dot2",3],["tokenstream",3]]],[[["dot3",3],["tokenstream",3]]],[[["dotdoteq",3],["tokenstream",3]]],[[["eq",3],["tokenstream",3]]],[[["eqeq",3],["tokenstream",3]]],[[["ge",3],["tokenstream",3]]],[[["gt",3],["tokenstream",3]]],[[["le",3],["tokenstream",3]]],[[["lt",3],["tokenstream",3]]],[[["muleq",3],["tokenstream",3]]],[[["ne",3],["tokenstream",3]]],[[["or",3],["tokenstream",3]]],[[["oreq",3],["tokenstream",3]]],[[["oror",3],["tokenstream",3]]],[[["pound",3],["tokenstream",3]]],[[["question",3],["tokenstream",3]]],[[["rarrow",3],["tokenstream",3]]],[[["larrow",3],["tokenstream",3]]],[[["rem",3],["tokenstream",3]]],[[["remeq",3],["tokenstream",3]]],[[["fatarrow",3],["tokenstream",3]]],[[["semi",3],["tokenstream",3]]],[[["shl",3],["tokenstream",3]]],[[["shleq",3],["tokenstream",3]]],[[["shr",3],["tokenstream",3]]],[[["shreq",3],["tokenstream",3]]],[[["star",3],["tokenstream",3]]],[[["sub",3],["tokenstream",3]]],[[["subeq",3],["tokenstream",3]]],[[["tilde",3],["tokenstream",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"BinOp"],[4,"PathArguments"],[4,"Expr"],[4,"Type"],[4,"GenericArgument"],[4,"Lit"],[4,"Pat"],[4,"MacroDelimiter"],[4,"RangeLimits"],[4,"GenericMethodArgument"],[4,"GenericParam"],[4,"Item"],[4,"TraitItem"],[4,"ImplItem"],[4,"StrStyle"],[4,"Visibility"],[4,"ReturnType"],[4,"UnOp"],[4,"Data"],[4,"WherePredicate"],[4,"Stmt"],[4,"ForeignItem"],[4,"UseTree"],[4,"AttrStyle"],[4,"TypeParamBound"],[4,"Meta"],[4,"NestedMeta"],[4,"TraitBoundModifier"],[4,"Fields"],[4,"Member"],[4,"FnArg"],[3,"ItemForeignMod"],[3,"Signature"],[3,"TypeBareFn"],[3,"ExprReference"],[3,"TypeReference"],[3,"PatReference"],[3,"Lifetime"],[3,"ExprCall"],[3,"ExprMethodCall"],[3,"MethodTurbofish"],[3,"AngleBracketedGenericArguments"],[3,"PathSegment"],[3,"ExprMatch"],[3,"ExprCast"],[3,"UseRename"],[3,"QSelf"],[3,"TypeGenerics"],[3,"ExprAsync"],[3,"ExprClosure"],[3,"Variant"],[3,"Field"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"FieldValue"],[3,"Arm"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemMacro"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Receiver"],[3,"File"],[3,"DeriveInput"],[3,"Local"],[3,"BareFnArg"],[3,"Variadic"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Macro"],[3,"TypeNever"],[3,"LitInt"],[3,"LitFloat"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[3,"Index"],[3,"Label"],[3,"Generics"],[3,"BoundLifetimes"],[3,"TraitBound"],[3,"WhereClause"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[3,"UsePath"],[3,"UseName"],[3,"UseGlob"],[3,"UseGroup"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[3,"Block"],[3,"TypeArray"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"Path"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[13,"Inner"],[13,"Add"],[13,"Sub"],[13,"Mul"],[13,"Div"],[13,"Rem"],[13,"And"],[13,"Or"],[13,"BitXor"],[13,"BitAnd"],[13,"BitOr"],[13,"Shl"],[13,"Shr"],[13,"Eq"],[13,"Lt"],[13,"Le"],[13,"Ne"],[13,"Ge"],[13,"Gt"],[13,"AddEq"],[13,"SubEq"],[13,"MulEq"],[13,"DivEq"],[13,"RemEq"],[13,"BitXorEq"],[13,"BitAndEq"],[13,"BitOrEq"],[13,"ShlEq"],[13,"ShrEq"],[13,"Struct"],[13,"Enum"],[13,"Union"],[13,"Array"],[13,"Assign"],[13,"AssignOp"],[13,"Async"],[13,"Await"],[13,"Binary"],[13,"Block"],[13,"Box"],[13,"Break"],[13,"Call"],[13,"Cast"],[13,"Closure"],[13,"Continue"],[13,"Field"],[13,"ForLoop"],[13,"Group"],[13,"If"],[13,"Index"],[13,"Let"],[13,"Lit"],[13,"Loop"],[13,"Macro"],[13,"Match"],[13,"MethodCall"],[13,"Paren"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Repeat"],[13,"Return"],[13,"Struct"],[13,"Try"],[13,"TryBlock"],[13,"Tuple"],[13,"Type"],[13,"Unary"],[13,"Unsafe"],[13,"Verbatim"],[13,"While"],[13,"Yield"],[13,"Named"],[13,"Unnamed"],[13,"Receiver"],[13,"Typed"],[13,"Fn"],[13,"Static"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Lifetime"],[13,"Type"],[13,"Binding"],[13,"Constraint"],[13,"Const"],[13,"Type"],[13,"Const"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Const"],[13,"Enum"],[13,"ExternCrate"],[13,"Fn"],[13,"ForeignMod"],[13,"Impl"],[13,"Macro"],[13,"Macro2"],[13,"Mod"],[13,"Static"],[13,"Struct"],[13,"Trait"],[13,"TraitAlias"],[13,"Type"],[13,"Union"],[13,"Use"],[13,"Verbatim"],[13,"Str"],[13,"ByteStr"],[13,"Byte"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Bool"],[13,"Verbatim"],[13,"Paren"],[13,"Brace"],[13,"Bracket"],[13,"Named"],[13,"Unnamed"],[13,"Path"],[13,"List"],[13,"NameValue"],[13,"Meta"],[13,"Lit"],[13,"Box"],[13,"Ident"],[13,"Lit"],[13,"Macro"],[13,"Or"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Rest"],[13,"Slice"],[13,"Struct"],[13,"Tuple"],[13,"TupleStruct"],[13,"Type"],[13,"Verbatim"],[13,"Wild"],[13,"AngleBracketed"],[13,"Parenthesized"],[13,"HalfOpen"],[13,"Closed"],[13,"Type"],[13,"Local"],[13,"Item"],[13,"Expr"],[13,"Semi"],[13,"Raw"],[13,"Maybe"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Array"],[13,"BareFn"],[13,"Group"],[13,"ImplTrait"],[13,"Infer"],[13,"Macro"],[13,"Never"],[13,"Paren"],[13,"Path"],[13,"Ptr"],[13,"Reference"],[13,"Slice"],[13,"TraitObject"],[13,"Tuple"],[13,"Verbatim"],[13,"Trait"],[13,"Lifetime"],[13,"Deref"],[13,"Not"],[13,"Neg"],[13,"Path"],[13,"Name"],[13,"Rename"],[13,"Glob"],[13,"Group"],[13,"Public"],[13,"Crate"],[13,"Restricted"],[13,"Type"],[13,"Lifetime"],[13,"Eq"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[8,"Parser"],[3,"ParseBuffer"],[3,"Lookahead1"],[3,"StepCursor"],[3,"Nothing"],[3,"Error"],[8,"Parse"],[8,"Speculative"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[13,"Punctuated"],[13,"End"],[8,"Spanned"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"]]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for …","t":[13,13,3,13,13,13,13,3,3,3,4,4,3,13,13,13,13,3,3,13,13,3,3,13,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Always","AlwaysAnsi","Ansi","Ansi256","Auto","Black","Blue","Buffer","BufferWriter","BufferedStandardStream","Color","ColorChoice","ColorSpec","Cyan","Green","Magenta","Never","NoColor","ParseColorError","Red","Rgb","StandardStream","StandardStreamLock","White","WriteColor","Yellow","ansi","as_mut_slice","as_slice","bg","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","description","dimmed","eq","eq","eq","eq","fg","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_str","get_mut","get_mut","get_ref","get_ref","intense","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","invalid","is_empty","is_none","is_synchronous","is_synchronous","is_synchronous","is_synchronous","is_synchronous","is_synchronous","is_synchronous","italic","len","lock","ne","ne","ne","new","new","new","no_color","print","reset","reset","reset","reset","reset","reset","reset","reset","separator","set_bg","set_bold","set_color","set_color","set_color","set_color","set_color","set_color","set_color","set_dimmed","set_fg","set_intense","set_italic","set_reset","set_underline","stderr","stderr","stderr","stdout","stdout","stdout","supports_color","supports_color","supports_color","supports_color","supports_color","supports_color","supports_color","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","write","write","write","write","write","write","0","0","1","2"],"q":["termcolortermcolor::Color","","",""],"d":["Try very hard to emit colors. This includes emitting ANSI …","AlwaysAnsi is like Always, except it never tries to use …","Satisfies <code>WriteColor</code> using standard ANSI escape sequences.","","Try to use colors, but don’t force the issue. If the …","","","Write colored text to memory.","Writes colored buffers to stdout or stderr.","Like <code>StandardStream</code>, but does buffered writing.","The set of available colors for the terminal …","ColorChoice represents the color preferences of an end …","A color specification.","","","","Never emit colors.","Satisfies <code>WriteColor</code> but ignores all color options.","An error from parsing an invalid color specification.","","","Satisfies <code>io::Write</code> and <code>WriteColor</code>, and supports optional …","<code>StandardStreamLock</code> is a locked reference to a …","","This trait describes the behavior of writers that support …","","Create a buffer that uses ANSI escape sequences.","Return the underlying data of the buffer as a mutable …","Return the underlying data of the buffer.","Get the background color.","Get whether this is bold or not.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Buffer</code> with the current color preferences.","Clears this buffer.","Clears this color specification so that it has no …","","","","","","","","","","","Get whether this is dimmed or not.","","","","","Get the foreground color.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return a mutable reference to the inner writer.","Return a mutable reference to the inner writer.","Return a reference to the inner writer.","Return a reference to the inner writer.","Get whether this is intense or not.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume this buffer and return the underlying raw data.","Consume this <code>NoColor</code> value and return the inner writer.","Consume this <code>Ansi</code> value and return the inner writer.","Return the string that couldn’t be parsed as a valid …","Returns true if and only if this buffer is empty.","Returns true if this color specification has no colors or …","Returns true if and only if the underlying writer must …","","","","","","","Get whether this is italic or not.","Returns the length of this buffer in bytes.","Lock the underlying writer.","","","","Create a new writer that satisfies <code>WriteColor</code> but drops …","Create a new writer that satisfies <code>WriteColor</code> using …","Create a new color specification that has no colors or …","Create a buffer that drops all color information.","Prints the contents of the given buffer.","Reset the current color settings to their original …","","","","","","","Get whether reset is enabled or not.","If set, the separator given is printed between buffers. By …","Set the background color.","Set whether the text is bolded or not.","Set the color settings of the writer.","","","","","","","Set whether the text is dimmed or not.","Set the foreground color.","Set whether the text is intense or not.","Set whether the text is italicized or not.","Set whether to reset the terminal whenever color settings …","Set whether the text is underlined or not.","Create a new <code>StandardStream</code> with the given color …","Create a new <code>BufferedStandardStream</code> with the given color …","Create a new <code>BufferWriter</code> that writes to stderr with the …","Create a new <code>StandardStream</code> with the given color …","Create a new <code>BufferedStandardStream</code> with the given color …","Create a new <code>BufferWriter</code> that writes to stdout with the …","Returns true if and only if the underlying writer supports …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get whether this is underline or not.","","","","","","","","","",""],"i":[1,1,0,2,1,2,2,0,0,0,0,0,0,2,2,2,1,0,0,2,2,0,0,2,0,2,3,3,3,4,4,5,6,7,8,3,9,10,1,4,2,11,5,6,7,8,3,9,10,1,4,2,11,8,3,4,1,4,2,11,1,4,2,11,4,11,4,1,4,2,11,4,5,6,7,3,9,10,1,4,2,11,11,5,6,7,8,3,9,10,1,4,2,11,2,9,10,9,10,4,5,6,7,8,3,9,10,1,4,2,11,3,9,10,11,3,4,12,5,6,7,3,9,10,4,3,5,4,2,11,9,10,4,3,8,12,5,6,7,3,9,10,4,8,4,4,12,5,6,7,3,9,10,4,4,4,4,4,4,5,7,8,5,7,8,12,5,6,7,3,9,10,1,4,2,11,11,5,6,7,8,3,9,10,1,4,2,11,5,6,7,8,3,9,10,1,4,2,11,5,6,7,8,3,9,10,1,4,2,11,4,5,6,7,3,9,10,13,14,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["buffer",3]],[[["buffer",3]]],[[["buffer",3]]],[[["colorspec",3]],["option",4,[["color",4]]]],[[["colorspec",3]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bufferwriter",3]],["buffer",3]],[[["buffer",3]]],[[["colorspec",3]]],[[["colorchoice",4]],["colorchoice",4]],[[["colorspec",3]],["colorspec",3]],[[["color",4]],["color",4]],[[["parsecolorerror",3]],["parsecolorerror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["colorspec",3]],[[["parsecolorerror",3]],["str",0]],[[["colorspec",3]],["bool",0]],[[["colorchoice",4],["colorchoice",4]],["bool",0]],[[["colorspec",3],["colorspec",3]],["bool",0]],[[["color",4],["color",4]],["bool",0]],[[["parsecolorerror",3],["parsecolorerror",3]],["bool",0]],[[["colorspec",3]],["option",4,[["color",4]]]],[[["standardstream",3]],["result",6]],[[["standardstreamlock",3]],["result",6]],[[["bufferedstandardstream",3]],["result",6]],[[["buffer",3]],["result",6]],[[["nocolor",3,[["write",8]]]],["result",6]],[[["ansi",3,[["write",8]]]],["result",6]],[[["colorchoice",4],["formatter",3]],["result",6]],[[["colorspec",3],["formatter",3]],["result",6]],[[["color",4],["formatter",3]],["result",6]],[[["parsecolorerror",3],["formatter",3]],["result",6]],[[["parsecolorerror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["color",4],["parsecolorerror",3]]]],[[["nocolor",3,[["write",8]]]],["",0]],[[["ansi",3,[["write",8]]]],["",0]],[[["nocolor",3,[["write",8]]]],["",0]],[[["ansi",3,[["write",8]]]],["",0]],[[["colorspec",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buffer",3]],["vec",3,[["u8",0]]]],[[["nocolor",3,[["write",8]]]],["write",8]],[[["ansi",3,[["write",8]]]],["write",8]],[[["parsecolorerror",3]],["str",0]],[[["buffer",3]],["bool",0]],[[["colorspec",3]],["bool",0]],[[["",0]],["bool",0]],[[["standardstream",3]],["bool",0]],[[["standardstreamlock",3]],["bool",0]],[[["bufferedstandardstream",3]],["bool",0]],[[["buffer",3]],["bool",0]],[[["nocolor",3,[["write",8]]]],["bool",0]],[[["ansi",3,[["write",8]]]],["bool",0]],[[["colorspec",3]],["bool",0]],[[["buffer",3]],["usize",0]],[[["standardstream",3]],["standardstreamlock",3]],[[["colorspec",3],["colorspec",3]],["bool",0]],[[["color",4],["color",4]],["bool",0]],[[["parsecolorerror",3],["parsecolorerror",3]],["bool",0]],[[["write",8]],["nocolor",3,[["write",8]]]],[[["write",8]],["ansi",3,[["write",8]]]],[[],["colorspec",3]],[[],["buffer",3]],[[["bufferwriter",3],["buffer",3]],["result",6]],[[["",0]],["result",6]],[[["standardstream",3]],["result",6]],[[["standardstreamlock",3]],["result",6]],[[["bufferedstandardstream",3]],["result",6]],[[["buffer",3]],["result",6]],[[["nocolor",3,[["write",8]]]],["result",6]],[[["ansi",3,[["write",8]]]],["result",6]],[[["colorspec",3]],["bool",0]],[[["bufferwriter",3],["option",4,[["vec",3,[["u8",0]]]]]]],[[["colorspec",3],["option",4,[["color",4]]]],["colorspec",3]],[[["colorspec",3],["bool",0]],["colorspec",3]],[[["",0],["colorspec",3]],["result",6]],[[["standardstream",3],["colorspec",3]],["result",6]],[[["standardstreamlock",3],["colorspec",3]],["result",6]],[[["bufferedstandardstream",3],["colorspec",3]],["result",6]],[[["buffer",3],["colorspec",3]],["result",6]],[[["nocolor",3,[["write",8]]],["colorspec",3]],["result",6]],[[["ansi",3,[["write",8]]],["colorspec",3]],["result",6]],[[["colorspec",3],["bool",0]],["colorspec",3]],[[["colorspec",3],["option",4,[["color",4]]]],["colorspec",3]],[[["colorspec",3],["bool",0]],["colorspec",3]],[[["colorspec",3],["bool",0]],["colorspec",3]],[[["colorspec",3],["bool",0]],["colorspec",3]],[[["colorspec",3],["bool",0]],["colorspec",3]],[[["colorchoice",4]],["standardstream",3]],[[["colorchoice",4]],["bufferedstandardstream",3]],[[["colorchoice",4]],["bufferwriter",3]],[[["colorchoice",4]],["standardstream",3]],[[["colorchoice",4]],["bufferedstandardstream",3]],[[["colorchoice",4]],["bufferwriter",3]],[[["",0]],["bool",0]],[[["standardstream",3]],["bool",0]],[[["standardstreamlock",3]],["bool",0]],[[["bufferedstandardstream",3]],["bool",0]],[[["buffer",3]],["bool",0]],[[["nocolor",3,[["write",8]]]],["bool",0]],[[["ansi",3,[["write",8]]]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["colorspec",3]],["bool",0]],[[["standardstream",3]],["result",6,[["usize",0]]]],[[["standardstreamlock",3]],["result",6,[["usize",0]]]],[[["bufferedstandardstream",3]],["result",6,[["usize",0]]]],[[["buffer",3]],["result",6,[["usize",0]]]],[[["nocolor",3,[["write",8]]]],["result",6,[["usize",0]]]],[[["ansi",3,[["write",8]]]],["result",6,[["usize",0]]]],null,null,null,null],"p":[[4,"ColorChoice"],[4,"Color"],[3,"Buffer"],[3,"ColorSpec"],[3,"StandardStream"],[3,"StandardStreamLock"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"NoColor"],[3,"Ansi"],[3,"ParseColorError"],[8,"WriteColor"],[13,"Ansi256"],[13,"Rgb"]]},\
"tokio":{"doc":"A runtime for writing reliable network applications …","t":[0,0,14,23,0,14,0,0,14,0,5,0,0,0,14,23,0,14,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,5,11,5,5,5,5,11,5,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,18,8,8,8,8,8,8,8,8,3,3,3,3,18,3,2,2,3,3,18,18,18,3,3,3,3,2,2,3,3,3,3,3,3,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,5,5,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,11,11,10,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,8,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,3,13,3,3,13,13,3,3,13,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,12,3,3,11,11,11,11,5,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,4,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,13,13,13,3,3,4,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,5,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,2,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["fs","io","join","main","net","pin","process","runtime","select","signal","spawn","stream","sync","task","task_local","test","time","try_join","DirBuilder","DirEntry","File","OpenOptions","ReadDir","append","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","custom_flags","default","default","file_name","file_type","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_fd","from_std","hard_link","ino","into","into","into","into","into","into_std","metadata","metadata","metadata","mode","mode","new","new","next_entry","open","open","path","poll_complete","poll_flush","poll_next_entry","poll_read","poll_shutdown","poll_write","read","read","read_dir","read_link","read_to_string","recursive","remove_dir","remove_dir_all","remove_file","rename","set_len","set_permissions","set_permissions","start_seek","symlink","symlink_metadata","sync_all","sync_data","to_owned","truncate","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_std","type_id","type_id","type_id","type_id","type_id","write","write","ALL","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BufReader","BufStream","BufWriter","DuplexStream","EMPTY","Empty","Error","ErrorKind","Interest","Lines","READABLE","READABLE","READ_CLOSED","ReadBuf","ReadHalf","Ready","Repeat","Result","SeekFrom","Sink","Split","Stderr","Stdin","Stdout","Take","WRITABLE","WRITABLE","WRITE_CLOSED","WriteHalf","add","advance","as_raw_fd","as_raw_fd","as_raw_fd","assume_init","bitand","bitor","bitor","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","capacity","chain","chain","clear","clone","clone","clone_into","clone_into","consume","consume","consume","consume","consume","consume","copy","copy_bidirectional","copy_buf","drop","duplex","empty","eq","eq","filled","filled_mut","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","initialize_unfilled","initialize_unfilled_to","initialized","initialized_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","is_empty","is_pair_of","is_pair_of","is_read_closed","is_readable","is_readable","is_writable","is_writable","is_write_closed","is_write_vectored","is_write_vectored","limit","lines","lines","ne","ne","new","new","new","new","next_line","next_segment","partial_cmp","poll_complete","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next_line","poll_next_segment","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","put_slice","read","read","read_buf","read_buf","read_exact","read_exact","read_i128","read_i128","read_i128_le","read_i128_le","read_i16","read_i16","read_i16_le","read_i16_le","read_i32","read_i32","read_i32_le","read_i32_le","read_i64","read_i64","read_i64_le","read_i64_le","read_i8","read_i8","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_u128","read_u128","read_u128_le","read_u128_le","read_u16","read_u16","read_u16_le","read_u16_le","read_u32","read_u32","read_u32_le","read_u32_le","read_u64","read_u64","read_u64_le","read_u64_le","read_u8","read_u8","read_until","read_until","remaining","repeat","seek","seek","set_filled","set_limit","shutdown","shutdown","sink","split","split","split","start_seek","stderr","stdin","stdout","stream_position","stream_position","sub","take","take","take","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfilled_mut","uninit","unix","unsplit","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_buf","write_buf","write_i128","write_i128","write_i128_le","write_i128_le","write_i16","write_i16","write_i16_le","write_i16_le","write_i32","write_i32","write_i32_le","write_i32_le","write_i64","write_i64","write_i64_le","write_i64_le","write_i8","write_i8","write_u128","write_u128","write_u128_le","write_u128_le","write_u16","write_u16","write_u16_le","write_u16_le","write_u32","write_u32","write_u32_le","write_u32_le","write_u64","write_u64","write_u64_le","write_u64_le","write_u8","write_u8","write_vectored","write_vectored","AsyncFd","AsyncFdReadyGuard","AsyncFdReadyMutGuard","TryIoError","as_raw_fd","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_ready","clear_ready","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_mut","get_ref","into","into","into","into","into_inner","new","poll_read_ready","poll_read_ready_mut","poll_write_ready","poll_write_ready_mut","readable","readable_mut","retain_ready","retain_ready","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_io","try_io","type_id","type_id","type_id","type_id","with_interest","writable","writable_mut","TcpListener","TcpSocket","TcpStream","ToSocketAddrs","UdpSocket","UnixDatagram","UnixListener","UnixStream","accept","accept","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","bind","bind","bind","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","connect","connect","connect","connect","connect","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_fd","from_std","from_std","from_std","from_std","from_std","from_std","into","into","into","into","into","into","into","into_raw_fd","into_split","into_split","into_std","into_std","into_std","into_std","into_std","into_std","is_write_vectored","is_write_vectored","join_multicast_v4","join_multicast_v6","leave_multicast_v4","leave_multicast_v6","linger","listen","local_addr","local_addr","local_addr","local_addr","local_addr","local_addr","local_addr","lookup_host","multicast_loop_v4","multicast_loop_v6","multicast_ttl_v4","new_v4","new_v6","nodelay","pair","pair","peek","peek_from","peer_addr","peer_addr","peer_addr","peer_cred","poll_accept","poll_accept","poll_flush","poll_flush","poll_peek","poll_peek_from","poll_read","poll_read","poll_read_ready","poll_read_ready","poll_recv","poll_recv","poll_recv_from","poll_recv_from","poll_send","poll_send","poll_send_to","poll_send_to","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write_ready","poll_write_ready","poll_write_vectored","poll_write_vectored","readable","readable","readable","readable","ready","ready","ready","ready","recv","recv","recv_buffer_size","recv_from","recv_from","reuseaddr","reuseport","send","send","send_buffer_size","send_to","send_to","set_broadcast","set_linger","set_multicast_loop_v4","set_multicast_loop_v6","set_multicast_ttl_v4","set_nodelay","set_recv_buffer_size","set_reuseaddr","set_reuseport","set_send_buffer_size","set_ttl","set_ttl","set_ttl","shutdown","split","split","take_error","take_error","take_error","take_error","tcp","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_read","try_read_buf","try_read_buf","try_recv","try_recv","try_recv_buf","try_recv_buf","try_recv_buf_from","try_recv_buf_from","try_recv_from","try_recv_from","try_send","try_send","try_send_to","try_send_to","try_write","try_write","ttl","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbound","unix","writable","writable","writable","writable","0","1","OwnedReadHalf","OwnedWriteHalf","ReadHalf","ReuniteError","WriteHalf","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","into","into","into","into","into","is_write_vectored","is_write_vectored","peek","peek","poll_flush","poll_flush","poll_peek","poll_peek","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write_vectored","poll_write_vectored","reunite","reunite","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","1","OwnedReadHalf","OwnedWriteHalf","ReadHalf","ReuniteError","SocketAddr","UCred","WriteHalf","as_pathname","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","datagram","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","gid","hash","into","into","into","into","into","into","into","is_unnamed","is_write_vectored","is_write_vectored","ne","pid","poll_flush","poll_flush","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write_vectored","poll_write_vectored","reunite","reunite","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","Child","ChildStderr","ChildStdin","ChildStdout","Command","arg","args","as_raw_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_dir","env","env_clear","env_remove","envs","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","gid","id","into","into","into","into","into","kill","kill_on_drop","new","output","poll_flush","poll_read","poll_read","poll_shutdown","poll_write","pre_exec","spawn","start_kill","status","stderr","stderr","stdin","stdin","stdout","stdout","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_wait","type_id","type_id","type_id","type_id","type_id","uid","wait","wait_with_output","Builder","EnterGuard","Handle","Runtime","block_on","block_on","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","current","enable_all","enable_io","enable_time","enter","enter","fmt","fmt","fmt","fmt","from","from","from","from","handle","into","into","into","into","max_blocking_threads","new","new_current_thread","new_multi_thread","on_thread_start","on_thread_stop","shutdown_background","shutdown_timeout","spawn","spawn","spawn_blocking","spawn_blocking","thread_keep_alive","thread_name","thread_name_fn","thread_stack_size","to_owned","try_current","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","worker_threads","ctrl_c","unix","Signal","SignalKind","alarm","borrow","borrow","borrow_mut","borrow_mut","child","clone","clone_into","fmt","fmt","from","from","from_raw","hangup","interrupt","into","into","io","pipe","poll_recv","quit","recv","signal","terminate","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_defined1","user_defined2","window_change","AcquireError","AlreadyInitializedError","Barrier","BarrierWaitResult","Closed","InitializingError","Mutex","MutexGuard","NoPermits","Notify","OnceCell","OwnedMutexGuard","OwnedRwLockMappedWriteGuard","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","OwnedSemaphorePermit","RwLock","RwLockMappedWriteGuard","RwLockReadGuard","RwLockWriteGuard","Semaphore","SemaphorePermit","SetError","TryAcquireError","TryLockError","acquire","acquire_many","acquire_many_owned","acquire_owned","add_permits","available_permits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone_into","clone_into","close","const_new","const_new","const_new","const_new","const_new","const_with_max_readers","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_mut","get_mut","get_mut","get_or_init","get_or_try_init","initialized","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_mapped","into_mapped","is_already_init_err","is_closed","is_initializing_err","is_leader","lock","lock_owned","map","map","map","map","map","map","mpsc","ne","new","new","new","new","new","new","new_with","notified","notify_one","notify_waiters","oneshot","read","read_owned","set","take","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_acquire","try_acquire_many","try_acquire_many_owned","try_acquire_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","watch","with_max_readers","write","write_owned","0","0","Receiver","Sender","borrow","borrow","borrow_mut","borrow_mut","channel","clone","clone_into","drop","drop","error","fmt","fmt","from","from","into","into","receiver_count","recv","send","subscribe","to_owned","try_from","try_from","try_into","try_into","try_recv","type_id","type_id","0","Closed","Closed","Empty","Lagged","Lagged","RecvError","SendError","TryRecvError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","ne","ne","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","Permit","Receiver","Sender","UnboundedReceiver","UnboundedSender","blocking_recv","blocking_recv","blocking_send","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","channel","clone","clone","clone_into","clone_into","close","close","closed","closed","drop","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","is_closed","is_closed","poll_recv","poll_recv","recv","recv","reserve","same_channel","same_channel","send","send","send","send_timeout","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_reserve","try_send","type_id","type_id","type_id","type_id","type_id","unbounded_channel","0","Closed","Closed","Full","RecvError","SendError","SendTimeoutError","Timeout","TrySendError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","Receiver","Sender","borrow","borrow","borrow_mut","borrow_mut","channel","close","closed","drop","drop","error","fmt","fmt","from","from","into","into","into_future","is_closed","poll","poll_closed","send","try_from","try_from","try_into","try_into","try_recv","type_id","type_id","Closed","Empty","RecvError","TryRecvError","borrow","borrow","borrow_mut","borrow_mut","eq","eq","fmt","fmt","fmt","fmt","from","from","into","into","ne","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Receiver","Ref","Sender","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changed","channel","clone","clone_into","closed","deref","drop","drop","error","fmt","fmt","fmt","from","from","from","into","into","into","is_closed","send","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","RecvError","SendError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","into","into","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","JoinError","JoinHandle","LocalKey","LocalSet","Unconstrained","abort","block_in_place","block_on","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_future","into_future","into_future","into_panic","is_cancelled","is_panic","new","poll","poll","poll","run_until","scope","spawn","spawn_blocking","spawn_local","spawn_local","sync_scope","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_panic","try_with","type_id","type_id","type_id","type_id","type_id","unconstrained","with","yield_now","Duration","Instant","Interval","Sleep","Timeout","add","add_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_duration_since","checked_sub","clone","clone_into","cmp","deadline","duration_since","elapsed","eq","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from_std","get_mut","get_ref","hash","interval","interval_at","into","into","into","into","into_future","into_future","into_inner","into_std","is_elapsed","ne","now","partial_cmp","poll","poll","poll_tick","reset","saturating_duration_since","sleep","sleep_until","sub","sub","sub_assign","tick","timeout","timeout_at","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Elapsed","Error","at_capacity","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","fmt","from","from","into","into","invalid","is_at_capacity","is_invalid","is_shutdown","ne","shutdown","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["tokio","","","","","","","","","","","","","","","","","","tokio::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::iotokio::io::unix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::nettokio::net::tcp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::net::unix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::signal","","tokio::signal::unix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::synctokio::sync::SetError","","tokio::sync::broadcast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::broadcast::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::broadcast::error::RecvError","tokio::sync::broadcast::error::TryRecvError","tokio::sync::mpsc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::mpsc::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::mpsc::error::SendTimeoutError","","tokio::sync::mpsc::error::TrySendError","","tokio::sync::oneshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::oneshot::error","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::watch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::sync::watch::error","","","","","","","","","","","","","","","","","","","","","","tokio::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tokio::time::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Asynchronous file and standard stream adaptation.","Traits, helpers, and type definitions for asynchronous I/O …","Wait on multiple concurrent branches, returning when <strong>all</strong> …","Marks async function to be executed by the selected …","TCP/UDP/Unix bindings for <code>tokio</code>.","Pins a value on the stack.","An implementation of asynchronous process management for …","The Tokio runtime.","Wait on multiple concurrent branches, returning when the …","Asynchronous signal handling for Tokio","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","Due to the <code>Stream</code> trait’s inclusion in <code>std</code> landing later …","Synchronization primitives for use in asynchronous …","Asynchronous green-threads.","Declares a new task-local key of type <code>tokio::task::LocalKey</code>…","Marks async function to be executed by runtime, suitable …","Utilities for tracking time.","Wait on multiple concurrent branches, returning when <strong>all</strong> …","A builder for creating directories in various manners.","Entries returned by the <code>ReadDir</code> stream.","A reference to an open file on the filesystem.","Options and flags which can be used to configure how a …","Read the the entries in a directory.","Sets the option for the append mode.","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Creates the specified directory with the configured …","Sets the option for creating a new file.","Creates a new, empty directory at the provided path","Recursively creates a directory and all of its parent …","Sets the option to always create a new file.","Pass custom flags to the <code>flags</code> argument of <code>open</code>.","","","Returns the bare file name of this directory entry without …","Returns the file type for the file that this entry points …","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts a <code>std::fs::File</code> to a <code>tokio::fs::File</code>.","Creates a new hard link on the filesystem.","Returns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Destructures <code>File</code> into a <code>std::fs::File</code>. This function is …","Given a path, queries the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","Sets the mode to create new directories with.","Sets the mode bits that a new file will be created with.","Creates a new set of options with default mode/security …","Creates a blank new set of options ready for configuration.","Returns the next entry in the directory stream.","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns the full path to the file that this entry …","","","Polls for the next directory entry in the stream.","","","","Reads the entire contents of a file into a bytes vector.","Sets the option for read access.","Returns a stream over the entries within a directory.","Reads a symbolic link, returning the file that the link …","Creates a future which will open a file for reading and …","Indicates whether to create directories recursively …","Removes an existing, empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Renames a file or directory to a new name, replacing the …","Truncates or extends the underlying file, updating the …","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","","Creates a new symbolic link on the filesystem.","Queries the file system metadata for a path.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it may …","","Sets the option for truncating a previous file.","Create a new <code>File</code> instance that shares the same underlying …","","","","","","","","","","","Tries to immediately destructure <code>File</code> into a <code>std::fs::File</code>.","","","","","","Creates a future that will open a file for writing and …","Sets the option for write access.","Returns a <code>Ready</code> representing readiness for all operations.","Reads bytes asynchronously.","An extension trait which adds utility methods to …","Reads bytes from a source.","Reads bytes from a source.","Seek bytes asynchronously.","An extension trait that adds utility methods to <code>AsyncSeek</code> …","Writes bytes asynchronously.","Writes bytes to a sink.","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a type that is <code>AsyncWrite</code> and <code>AsyncRead</code>, and buffers …","Wraps a writer and buffers its output.","A bidirectional pipe to read and write bytes in memory.","Returns the empty <code>Ready</code> set.","An async reader which is always at EOF.","","","Readiness event interest","Read lines from an <code>AsyncBufRead</code>.","Interest in all readable events.","Returns a <code>Ready</code> representing readable readiness.","Returns a <code>Ready</code> representing read closed readiness.","A wrapper around a byte buffer that is incrementally …","The readable half of a value returned from <code>split</code>.","Describes the readiness state of an I/O resources.","An async reader which yields one byte over and over and …","","","An async writer which will move data into the void.","Splitter for the <code>split</code> method.","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","Stream for the <code>take</code> method.","Interest in all writable events","Returns a <code>Ready</code> representing writable readiness.","Returns a <code>Ready</code> representing write closed readiness.","The writable half of a value returned from <code>split</code>.","Add together two <code>Interst</code> values.","Advances the size of the filled region of the buffer.","","","","Asserts that the first <code>n</code> unfilled bytes of the buffer are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns the total capacity of the buffer.","Creates a new <code>AsyncRead</code> instance that chains this stream …","Creates a new <code>AsyncRead</code> instance that chains this stream …","Clears the buffer, resetting the filled region to empty.","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","Asynchronously copies the entire contents of a reader into …","Copies data in both directions between <code>a</code> and <code>b</code>.","Asynchronously copies the entire contents of a reader into …","","Create a new pair of <code>DuplexStream</code>s that act like a pair of …","Creates a new empty async reader.","","","Returns a shared reference to the filled portion of the …","Returns a mutable reference to the filled portion of the …","Flushes this output stream, ensuring that all …","Flushes this output stream, ensuring that all …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets a mutable reference to the underlying reader.","Obtain a mutable reference to the underlying reader","Gets a mutable reference to the underlying writer.","Gets a mutable reference to the underlying I/O object.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying writer.","Gets a pinned mutable reference to the underlying I/O …","Gets a pinned mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Obtain a reference to the underlying reader","Gets a reference to the underlying writer.","Gets a reference to the underlying I/O object.","Gets a reference to the underlying reader.","Returns a mutable reference to the unfilled part of the …","Returns a mutable reference to the first <code>n</code> bytes of the …","Returns a shared reference to the initialized portion of …","Returns a mutable reference to the initialized portion of …","Returns a mutable reference to the entire buffer, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Take</code>, returning the wrapped reader.","Unwraps this <code>Lines&lt;R&gt;</code>, returning the underlying reader.","Consumes this <code>BufWriter</code>, returning the underlying writer.","Consumes this <code>BufStream</code>, returning the underlying I/O …","Consumes this <code>BufReader</code>, returning the underlying reader.","Returns true if <code>Ready</code> is the empty set","Checks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from …","Check if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …","Returns <code>true</code> if the value includes read-closed <code>readiness</code>","Returns true if the value includes readable interest.","Returns <code>true</code> if the value includes <code>readable</code>","Returns true if the value includes writable interest.","Returns <code>true</code> if the value includes writable <code>readiness</code>","Returns <code>true</code> if the value includes write-closed <code>readiness</code>","Determines if this writer has an efficient …","Determines if this writer has an efficient …","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","Returns a stream over the lines of this reader. This …","","","Creates a new <code>ReadBuf</code> from a fully initialized buffer.","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Wraps a type in both <code>BufWriter</code> and <code>BufReader</code>.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Returns the next line in the stream.","Returns the next segment in the stream.","","Waits for a seek operation to complete.","Attempts to return the contents of the internal buffer, …","","","","","","Attempts to flush the object, ensuring that any buffered …","","","","","","","","","Polls for the next line in the stream.","Polls for the next segment in the stream.","Attempts to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","Initiates or attempts to shut down this writer, returning …","","","","","","","","","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","Like <code>poll_write</code>, except that it writes from a slice of …","Like <code>poll_write</code>, except that it writes from a slice of …","Appends data to the buffer, advancing the written position …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Reads the exact number of bytes required to fill <code>buf</code>.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads an signed 128-bit integer in big-endian order from …","Reads an signed 128-bit integer in big-endian order from …","Reads an signed 128-bit integer in little-endian order …","Reads an signed 128-bit integer in little-endian order …","Reads a signed 16-bit integer in big-endian order from the …","Reads a signed 16-bit integer in big-endian order from the …","Reads a signed 16-bit integer in little-endian order from …","Reads a signed 16-bit integer in little-endian order from …","Reads a signed 32-bit integer in big-endian order from the …","Reads a signed 32-bit integer in big-endian order from the …","Reads a signed 32-bit integer in little-endian order from …","Reads a signed 32-bit integer in little-endian order from …","Reads an signed 64-bit integer in big-endian order from the","Reads an signed 64-bit integer in big-endian order from the","Reads an signed 64-bit integer in little-endian order from …","Reads an signed 64-bit integer in little-endian order from …","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads all bytes until a newline (the 0xA byte) is reached, …","Reads all bytes until a newline (the 0xA byte) is reached, …","Reads all bytes until EOF in this source, placing them …","Reads all bytes until EOF in this source, placing them …","Reads all bytes until EOF in this source, appending them …","Reads all bytes until EOF in this source, appending them …","Reads an unsigned 128-bit integer in big-endian order from …","Reads an unsigned 128-bit integer in big-endian order from …","Reads an unsigned 128-bit integer in little-endian order …","Reads an unsigned 128-bit integer in little-endian order …","Reads an unsigned 16-bit integer in big-endian order from …","Reads an unsigned 16-bit integer in big-endian order from …","Reads an unsigned 16-bit integer in little-endian order …","Reads an unsigned 16-bit integer in little-endian order …","Reads an unsigned 32-bit integer in big-endian order from …","Reads an unsigned 32-bit integer in big-endian order from …","Reads an unsigned 32-bit integer in little-endian order …","Reads an unsigned 32-bit integer in little-endian order …","Reads an unsigned 64-bit integer in big-endian order from …","Reads an unsigned 64-bit integer in big-endian order from …","Reads an unsigned 64-bit integer in little-endian order …","Reads an unsigned 64-bit integer in little-endian order …","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …","Returns the number of bytes at the end of the slice that …","Creates an instance of an async reader that infinitely …","Creates a future which will seek an IO object, and then …","Creates a future which will seek an IO object, and then …","Sets the size of the filled region of the buffer.","Sets the number of bytes that can be read before this …","Shuts down the output stream, ensuring that the value can …","Shuts down the output stream, ensuring that the value can …","Creates an instance of an async writer which will …","Splits a single value implementing <code>AsyncRead + AsyncWrite</code> …","Returns a stream of the contents of this reader split on …","Returns a stream of the contents of this reader split on …","Attempts to seek to an offset, in bytes, in a stream.","Constructs a new handle to the standard error of the …","Constructs a new handle to the standard input of the …","Constructs a new handle to the standard output of the …","Creates a future which will return the current seek …","Creates a future which will return the current seek …","","Returns a new <code>ReadBuf</code> comprised of the unfilled section up …","Creates an adaptor which reads at most <code>limit</code> bytes from it.","Creates an adaptor which reads at most <code>limit</code> bytes from it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the unfilled part of the …","Creates a new <code>ReadBuf</code> from a fully uninitialized buffer.","Asynchronous IO structures specific to Unix-like operating …","Reunites with a previously split <code>WriteHalf</code>.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a <code>BufStream</code> with the specified <code>BufReader</code> capacity …","Creates a new <code>BufReader</code> with the specified buffer capacity.","Writes a buffer into this writer, returning how many bytes …","Writes a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Writes a buffer into this writer, advancing the buffer’s …","Writes a buffer into this writer, advancing the buffer’s …","Writes an signed 128-bit integer in big-endian order to the","Writes an signed 128-bit integer in big-endian order to the","Writes an signed 128-bit integer in little-endian order to …","Writes an signed 128-bit integer in little-endian order to …","Writes a signed 16-bit integer in big-endian order to the …","Writes a signed 16-bit integer in big-endian order to the …","Writes a signed 16-bit integer in little-endian order to …","Writes a signed 16-bit integer in little-endian order to …","Writes a signed 32-bit integer in big-endian order to the …","Writes a signed 32-bit integer in big-endian order to the …","Writes a signed 32-bit integer in little-endian order to …","Writes a signed 32-bit integer in little-endian order to …","Writes an signed 64-bit integer in big-endian order to the …","Writes an signed 64-bit integer in big-endian order to the …","Writes an signed 64-bit integer in little-endian order to …","Writes an signed 64-bit integer in little-endian order to …","Writes an unsigned 8-bit integer to the underlying writer.","Writes an unsigned 8-bit integer to the underlying writer.","Writes an unsigned 128-bit integer in big-endian order to …","Writes an unsigned 128-bit integer in big-endian order to …","Writes an unsigned 128-bit integer in little-endian order …","Writes an unsigned 128-bit integer in little-endian order …","Writes an unsigned 16-bit integer in big-endian order to …","Writes an unsigned 16-bit integer in big-endian order to …","Writes an unsigned 16-bit integer in little-endian order …","Writes an unsigned 16-bit integer in little-endian order …","Writes an unsigned 32-bit integer in big-endian order to …","Writes an unsigned 32-bit integer in big-endian order to …","Writes an unsigned 32-bit integer in little-endian order …","Writes an unsigned 32-bit integer in little-endian order …","Writes an unsigned 64-bit integer in big-endian order to …","Writes an unsigned 64-bit integer in big-endian order to …","Writes an unsigned 64-bit integer in little-endian order …","Writes an unsigned 64-bit integer in little-endian order …","Writes an unsigned 8-bit integer to the underlying writer.","Writes an unsigned 8-bit integer to the underlying writer.","Like <code>write</code>, except that it writes from a slice of buffers.","Like <code>write</code>, except that it writes from a slice of buffers.","Associates an IO object backed by a Unix file descriptor …","Represents an IO-ready event detected on a particular file …","Represents an IO-ready event detected on a particular file …","The error type returned by <code>try_io</code>.","","","","","","","","","","Indicates to tokio that the file descriptor is no longer …","Indicates to tokio that the file descriptor is no longer …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the backing object of this …","Returns a shared reference to the backing object of this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Deregisters this file descriptor and returns ownership of …","Creates an AsyncFd backed by (and taking ownership of) an …","Polls for read readiness.","Polls for read readiness.","Polls for write readiness.","Polls for write readiness.","Waits for the file descriptor to become readable, …","Waits for the file descriptor to become readable, …","This method should be invoked when you intentionally want …","This method should be invoked when you intentionally want …","","","","","","","","","Performs the provided IO operation.","Performs the provided IO operation.","","","","","Creates new instance as <code>new</code> with additional ability to …","Waits for the file descriptor to become writable, …","Waits for the file descriptor to become writable, …","A TCP socket server, listening for connections.","A TCP socket that has not yet been converted to a <code>TcpStream</code>…","A TCP stream between a local and a remote socket.","Converts or resolves without blocking to one or more …","A UDP socket","An I/O object representing a Unix datagram socket.","A Unix socket which can accept connections from other Unix …","A structure representing a connected Unix socket.","Accepts a new incoming connection from this listener.","Accepts a new incoming connection to this listener.","","","","","","","","Creates a new TcpListener, which will be bound to the …","Bind the socket to the given address.","This function will create a new UDP socket and attempt to …","Creates a new <code>UnixDatagram</code> bound to the specified path.","Creates a new <code>UnixListener</code> bound to the specified path.","","","","","","","","","","","","","","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.","Establish a TCP connection with a peer at the specified …","Opens a TCP connection to a remote host.","Connects the UDP socket setting the default destination …","Connects the socket to the specified address.","Connects to the socket named by <code>path</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>RawFd</code> to a <code>TcpSocket</code>.","Creates new <code>TcpListener</code> from a <code>std::net::TcpListener</code>.","Creates new <code>TcpStream</code> from a <code>std::net::TcpStream</code>.","Creates new <code>UdpSocket</code> from a previously bound …","Creates new <code>UnixDatagram</code> from a …","Creates new <code>UnixListener</code> from a …","Creates new <code>UnixStream</code> from a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Splits a <code>TcpStream</code> into a read half and a write half, …","Splits a <code>UnixStream</code> into a read half and a write half, …","Turn a <code>tokio::net::TcpListener</code> into a <code>std::net::TcpListener</code>…","Turn a <code>tokio::net::TcpStream</code> into a <code>std::net::TcpStream</code>.","Turn a <code>tokio::net::UdpSocket</code> into a <code>std::net::UdpSocket</code>.","Turn a <code>tokio::net::UnixDatagram</code> into a …","Turn a <code>tokio::net::UnixListener</code> into a …","Turn a <code>tokio::net::UnixStream</code> into a …","","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.","Reads the linger duration for this socket by getting the …","Convert the socket into a <code>TcpListener</code>.","Returns the local address that this listener is bound to.","Get the local address of this socket.","Returns the local address that this stream is bound to.","Returns the local address that this socket is bound to.","Returns the local address that this socket is bound to.","Returns the local socket address of this listener.","Returns the socket address of the local half of this …","Performs a DNS resolution.","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Create a new socket configured for IPv4.","Create a new socket configured for IPv6.","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Creates an unnamed pair of connected sockets.","Creates an unnamed pair of connected sockets.","Receives data on the socket from the remote address to …","Receives data from the socket, without removing it from …","Returns the remote address that this stream is connected …","Returns the address of this socket’s peer.","Returns the socket address of the remote half of this …","Returns effective credentials of the process which called …","Polls to accept a new incoming connection to this listener.","Polls to accept a new incoming connection to this listener.","","","Attempts to receive data on the socket, without removing …","Receives data from the socket, without removing it from …","","","Polls for read readiness.","Polls for read readiness.","Attempts to receive a single datagram message on the …","Attempts to receive a single datagram message on the …","Attempts to receive a single datagram on the socket.","Attempts to receive a single datagram on the specified …","Attempts to send data on the socket to the remote address …","Attempts to send data on the socket to the remote address …","Attempts to send data on the socket to a given address.","Attempts to send data to the specified address.","","","","","Polls for write readiness.","Polls for write readiness.","","","Wait for the socket to become readable.","Wait for the socket to become readable.","Wait for the socket to become readable.","Wait for the socket to become readable.","Wait for any of the requested ready states.","Wait for any of the requested ready states.","Wait for any of the requested ready states.","Wait for any of the requested ready states.","Receives a single datagram message on the socket from the …","Receives data from the socket.","Returns the size of the TCP receive buffer for this socket.","Receives a single datagram message on the socket. On …","Receives data from the socket.","Retrieves the value set for <code>SO_REUSEADDR</code> on this socket","Allow the socket to bind to an in-use port. Only available …","Sends data on the socket to the remote address that the …","Sends data on the socket to the socket’s peer.","Returns the size of the TCP send buffer for this socket.","Sends data on the socket to the given address. On success, …","Sends data on the socket to the specified address.","Sets the value of the <code>SO_BROADCAST</code> option for this socket.","Sets the linger duration of this socket by setting the …","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the size of the TCP receive buffer on this socket.","Allow the socket to bind to an in-use address.","Allow the socket to bind to an in-use port. Only available …","Sets the size of the TCP send buffer on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Shuts down the read, write, or both halves of this …","Splits a <code>TcpStream</code> into a read half and a write half, …","Split a <code>UnixStream</code> into a read half and a write half, …","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","TCP utility types","Consumes stream, returning the tokio I/O object.","","","","Consumes stream, returning the tokio I/O object.","","Consumes stream, returning the tokio I/O object.","","Consumes stream, returning the Tokio I/O object.","","Consumes stream, returning the tokio I/O object.","","Consumes stream, returning the tokio I/O object.","","","","","","","","Try to read data from the stream into the provided buffer, …","Try to read data from the stream into the provided buffer, …","Try to read data from the stream into the provided buffer, …","Try to read data from the stream into the provided buffer, …","Try to receive a single datagram message on the socket …","Try to receive a datagram from the peer without waiting.","Try to receive data from the stream into the provided …","Try to read data from the stream into the provided buffer, …","Try to receive a single datagram message on the socket. On …","Try to receive data from the socket without waiting.","Try to receive a single datagram message on the socket. On …","Try to receive data from the socket without waiting.","Try to send data on the socket to the remote address to …","Try to send a datagram to the peer without waiting.","Try to send data on the socket to the given address, but …","Try to send a datagram to the peer without waiting.","Try to write a buffer to the stream, returning how many …","Try to write a buffer to the stream, returning how many …","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","","","","","","","","Creates a new <code>UnixDatagram</code> which is not bound to any …","Unix domain socket utility types","Wait for the socket to become writable.","Wait for the socket to become writable.","Wait for the socket to become writable.","Wait for the socket to become writable.","","","Owned read half of a <code>TcpStream</code>, created by <code>into_split</code>.","Owned write half of a <code>TcpStream</code>, created by <code>into_split</code>.","Borrowed read half of a <code>TcpStream</code>, created by <code>split</code>.","Error indicating that two halves were not from the same …","Borrowed write half of a <code>TcpStream</code>, created by <code>split</code>.","","","","","","","","","","","","","","","","","","","","","","Destroy the write half, but don’t close the write half …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Receives data on the socket from the remote address to …","Receives data on the socket from the remote address to …","","","Attempt to receive data on the socket, without removing …","Attempt to receive data on the socket, without removing …","","","","","","","","","Attempts to put the two halves of a <code>TcpStream</code> back …","Attempts to put the two halves of a <code>TcpStream</code> back …","","","","","","","","","","","","","","","","","","","Owned read half of a <code>UnixStream</code>, created by <code>into_split</code>.","Owned write half of a <code>UnixStream</code>, created by <code>into_split</code>.","Borrowed read half of a <code>UnixStream</code>, created by <code>split</code>.","Error indicating that two halves were not from the same …","An address associated with a Tokio Unix socket.","Credentials of a process","Borrowed write half of a <code>UnixStream</code>, created by <code>split</code>.","Returns the contents of this address if it is a <code>pathname</code> …","","","","","","","","","","","","","","","","","","","","","Unix datagram types.","","","","","","","","","","","Destroy the write half, but don’t close the write half …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets GID (group ID) of the process.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the address is unnamed.","","","","Gets PID (process ID) of the process.","","","","","","","","","","","Attempts to put the two halves of a <code>UnixStream</code> back …","Attempts to put the two halves of a <code>UnixStream</code> back …","","","","","","","","","","","","","","","","","","","","","","","","Gets UID (user ID) of the process.","Representation of a child process spawned onto an event …","The standard error stream for spawned children.","The standard input stream for spawned children.","The standard output stream for spawned children.","This structure mimics the API of <code>std::process::Command</code> …","Adds an argument to pass to the program.","Adds multiple arguments to pass to the program.","","","","","","","","","","","","","","Sets the working directory for the child process.","Inserts or updates an environment variable mapping.","Clears the entire environment map for the child process.","Removes an environment variable mapping.","Adds or updates multiple environment variable mappings.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Similar to <code>uid</code> but sets the group ID of the child process. …","Returns the OS-assigned process identifier associated with …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Forces the child to exit.","Controls whether a <code>kill</code> operation should be invoked on a …","Constructs a new <code>Command</code> for launching the program at path …","Executes the command as a child process, waiting for it to …","","","","","","Schedules a closure to be run just before the <code>exec</code> …","Executes the command as a child process, returning a …","Attempts to force the child to exit, but does not wait for …","Executes the command as a child process, waiting for it to …","Sets configuration for the child process’s standard …","The handle for reading from the child’s standard error …","Sets configuration for the child process’s standard …","The handle for writing to the child’s standard input …","Sets configuration for the child process’s standard …","The handle for reading from the child’s standard output …","","","","","","","","","","","","","","Attempts to collect the exit status of the child if it has …","","","","","","Sets the child process’s user ID. This translates to a …","Waits for the child to exit completely, returning the …","Returns a future that will resolve to an <code>Output</code>, …","Builds Tokio Runtime with custom configuration values.","Runtime context guard.","Handle to the runtime.","The Tokio runtime.","Run a future to completion on this <code>Handle</code>’s associated …","Run a future to completion on the Tokio runtime. This is …","","","","","","","","","Creates the configured <code>Runtime</code>.","","","Returns a <code>Handle</code> view over the currently running <code>Runtime</code>","Enables both I/O and time drivers.","Enables the I/O driver.","Enables the time driver.","Enter the runtime context. This allows you to construct …","Enter the runtime context.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return a handle to the runtime’s spawner.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specifies the limit for additional threads spawned by the …","Create a new runtime instance with default configuration …","Returns a new builder with the current thread scheduler …","Returns a new builder with the multi thread scheduler …","Executes function <code>f</code> after each thread is started but …","Executes function <code>f</code> before each thread stops.","Shutdown the runtime, without waiting for any spawned …","Shutdown the runtime, waiting for at most <code>duration</code> for all …","Spawn a future onto the Tokio runtime.","Spawn a future onto the Tokio runtime.","Run the provided function on an executor dedicated to …","Run the provided function on an executor dedicated to …","Sets a custom timeout for a thread in the blocking pool.","Sets name of threads spawned by the <code>Runtime</code>’s thread …","Sets a function used to generate the name of threads …","Sets the stack size (in bytes) for worker threads.","","Returns a Handle view over the currently running Runtime","","","","","","","","","","","","","Sets the number of worker threads the <code>Runtime</code> will use.","Completes when a “ctrl-c” notification is sent to the …","Unix-specific types for signal handling.","A stream of events for receiving a particular type of OS …","Represents the specific kind of signal to listen for.","Represents the SIGALRM signal.","","","","","Represents the SIGCHLD signal.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Allows for listening to any valid OS signal.","Represents the SIGHUP signal.","Represents the SIGINT signal.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Represents the SIGIO signal.","Represents the SIGPIPE signal.","Polls to receive the next signal notification event, …","Represents the SIGQUIT signal.","Receives the next signal notification event.","Creates a new stream which will receive notifications when …","Represents the SIGTERM signal.","","","","","","","","Represents the SIGUSR1 signal.","Represents the SIGUSR2 signal.","Represents the SIGWINCH signal.","Error returned from the <code>Semaphore::acquire</code> function.","Error resulting from <code>OnceCell::set</code> calls if the cell was …","A barrier enables multiple threads to synchronize the …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","The semaphore has been closed and cannot issue new permits.","Error resulting from <code>OnceCell::set</code> calls when the cell is …","An asynchronous <code>Mutex</code>-like type.","A handle to a held <code>Mutex</code>. The guard can be held across any …","The semaphore has no available permits.","Notify a single task to wake up.","A thread-safe cell which can be written to only once.","An owned handle to a held <code>Mutex</code>.","Owned RAII structure used to release the exclusive write …","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An owned permit from the semaphore.","An asynchronous reader-writer lock.","RAII structure used to release the exclusive write access …","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","Counting semaphore performing asynchronous permit …","A permit from the semaphore.","Errors that can be returned from <code>OnceCell::set</code>","Error returned from the <code>Semaphore::try_acquire</code> function.","Error returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> …","Acquires a permit from the semaphore.","Acquires <code>n</code> permits from the semaphore.","Acquires <code>n</code> permits from the semaphore.","Acquires a permit from the semaphore.","Adds <code>n</code> new permits to the semaphore.","Returns the current number of available permits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A multi-producer, multi-consumer broadcast queue. Each …","","","","","Closes the semaphore.","Creates a new lock in an unlocked state ready for use.","Creates a new uninitialized OnceCell instance.","Create a new <code>Notify</code>, initialized without a permit.","Creates a new semaphore with the initial number of permits.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","","","","","","","","","","","Atomically downgrades a write lock into a read lock …","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forgets the permit <strong>without</strong> releasing it back to the …","Forgets the permit <strong>without</strong> releasing it back to the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Tries to get a reference to the value of the OnceCell.","Returns a mutable reference to the underlying data.","Tries to return a mutable reference to the value of the …","Returns a mutable reference to the underlying data.","Tries to initialize the value of the OnceCell using the …","Tries to initialize the value of the OnceCell using the …","Whether the value of the OnceCell is set or not.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Moves the value out of the cell, destroying the cell in …","Consumes the lock, returning the underlying data.","Converts this <code>OwnedRwLockWriteGuard</code> into an …","Converts this <code>RwLockWriteGuard</code> into an …","Whether <code>SetError</code> is <code>SetError::AlreadyInitializedError</code>.","Returns true if the semaphore is closed","Whether <code>SetError</code> is <code>SetError::InitializingError</code>","Returns <code>true</code> if this thread from wait is the “leader …","Locks this mutex, causing the current task to yield until …","Locks this mutex, causing the current task to yield until …","Make a new <code>OwnedRwLockReadGuard</code> for a component of the …","Make a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …","Make a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …","Make a new <code>RwLockReadGuard</code> for a component of the locked …","Make a new <code>RwLockMappedWriteGuard</code> for a component of the …","Make a new <code>RwLockMappedWriteGuard</code> for a component of the …","A multi-producer, single-consumer queue for sending values …","","Creates a new lock in an unlocked state ready for use.","Creates a new uninitialized OnceCell instance.","Creates a new barrier that can block a given number of …","Create a new <code>Notify</code>, initialized without a permit.","Creates a new semaphore with the initial number of permits.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new initialized OnceCell instance if <code>value</code> is …","Wait for a notification.","Notifies a waiting task","Notifies all waiting tasks","A one-shot channel is used for sending a single message …","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","Sets the value of the OnceCell to the argument value.","Takes ownership of the current value, leaving the cell …","","","","","","","","","","","","","","","Tries to acquire a permit from the semaphore.","Tries to acquire <code>n</code> permits from the semaphore.","Tries to acquire <code>n</code> permits from the semaphore.","Tries to acquire a permit from the semaphore.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to make a new <code>OwnedRwLockReadGuard</code> for a …","Attempts to make  a new <code>OwnedRwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","","","","","","Does not resolve until all tasks have rendezvoused here.","A single-producer, multi-consumer channel that only …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","","","Receiving-half of the <code>broadcast</code> channel.","Sending-half of the <code>broadcast</code> channel.","","","","","Create a bounded, multi-producer, multi-consumer channel …","","","","","Broadcast error types","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the number of active receivers","Receives the next value for this receiver.","Attempts to send a value to all active <code>Receiver</code> handles, …","Creates a new <code>Receiver</code> handle that will receive values …","","","","","","Attempts to return a pending value on this receiver …","","","","There are no more active senders implying no further …","There are no more active senders implying no further …","The channel is currently empty. There are still active …","The receiver lagged too far behind. Attempting to receive …","The receiver lagged too far behind and has been forcibly …","An error returned from the <code>recv</code> function on a <code>Receiver</code>.","Error returned by from the <code>send</code> function on a <code>Sender</code>.","An error returned from the <code>try_recv</code> function on a <code>Receiver</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Permit to send one value into the channel.","Receive values from the associated <code>Sender</code>.","Send values to the associated <code>Receiver</code>.","Receive values from the associated <code>UnboundedSender</code>.","Send values to the associated <code>UnboundedReceiver</code>.","Blocking receive to call outside of asynchronous contexts.","Blocking receive to call outside of asynchronous contexts.","Blocking send to call outside of asynchronous contexts.","","","","","","","","","","","Returns the current capacity of the channel.","Creates a bounded mpsc channel for communicating between …","","","","","Closes the receiving half of a channel without dropping it.","Closes the receiving half of a channel, without dropping …","Completes when the receiver has dropped.","Completes when the receiver has dropped.","","Channel error types","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the channel has been closed. This happens when …","Checks if the channel has been closed. This happens when …","Polls to receive the next message on this channel.","Polls to receive the next message on this channel.","Receives the next value for this receiver.","Receives the next value for this receiver.","Wait for channel capacity. Once capacity to send one …","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if senders belong to the same channel.","Sends a value, waiting until there is capacity.","Sends a value using the reserved capacity.","Attempts to send a message on this <code>UnboundedSender</code> without …","Sends a value, waiting until there is capacity, but only …","","","","","","","","","","","","","Try to acquire a slot in the channel without waiting for …","Attempts to immediately send a message on this <code>Sender</code>","","","","","","Creates an unbounded mpsc channel for communicating …","","The receive half of the channel was explicitly closed or …","The receive half of the channel was explicitly closed or …","The data could not be sent on the channel because the …","Error returned by <code>Receiver</code>.","Error returned by the <code>Sender</code>.","Error returned by <code>Sender::send_timeout</code>].","The data could not be sent on the channel because the …","This enumeration is the list of the possible error …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Receive a value from the associated <code>Sender</code>.","Sends a value to the associated <code>Receiver</code>.","","","","","Create a new one-shot channel for sending single values …","Prevents the associated <code>Sender</code> handle from sending a value.","Waits for the associated <code>Receiver</code> handle to close.","","","Oneshot error types","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the associated <code>Receiver</code> handle has been …","","Check whether the oneshot channel has been closed, and if …","Attempts to send a value on this channel, returning it …","","","","","Attempts to receive a value.","","","The send half of the channel was dropped without sending a …","The send half of the channel has not yet sent a value.","Error returned by the <code>Future</code> implementation for <code>Receiver</code>.","Error returned by the <code>try_recv</code> function on <code>Receiver</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Receives values from the associated <code>Sender</code>.","Returns a reference to the inner value","Sends values to the associated <code>Receiver</code>.","","Returns a reference to the most recently sent value","","Returns a reference to the most recently sent value","","","","","Wait for a change notification","Creates a new watch channel, returning the “send” and …","","","Completes when all receivers have dropped.","","","","Watch error types","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the channel has been closed. This happens when …","Sends a new value via the channel, notifying all receivers.","","","","","","","","","","","Error produced when receiving a change notification.","Error produced when sending a value fails.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Task failed to execute to completion.","An owned permission to join on a task (await its …","A key for task-local data.","A set of tasks which are executed on the same thread.","Future for the <code>unconstrained</code> method.","Abort the task associated with the handle.","Runs the provided blocking function on the current thread …","Runs a future to completion on the provided runtime, …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a copy of the task-local value if the task-local …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Consumes the join error, returning the object with which …","Returns true if the error was caused by the task being …","Returns true if the error was caused by the task panicking","Returns a new local task set.","","","","Run a future to completion on the local set, returning its …","Sets a value <code>T</code> as the task-local value for the future <code>F</code>.","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","Runs the provided closure on a thread where blocking is …","Spawns a <code>!Send</code> future on the local task set.","Spawns a <code>!Send</code> task onto the local task set.","Sets a value <code>T</code> as the task-local value for the closure <code>F</code>.","","","","","","","","","","","","Consumes the join error, returning the object with which …","Accesses the current task-local and runs the provided …","","","","","","Turn off cooperative scheduling for a future. The future …","Accesses the current task-local and runs the provided …","Yields execution back to the Tokio runtime.","","A measurement of a monotonically nondecreasing clock. …","Interval returned by <code>interval</code> and <code>interval_at</code>.","Future returned by <code>sleep</code> and <code>sleep_until</code>.","Future returned by <code>timeout</code> and <code>timeout_at</code>.","","","","","","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Returns the amount of time elapsed from another instant to …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","","","","Returns the instant at which the future will complete.","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed since this instant was …","","Time error types.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.","Gets a mutable reference to the underlying value in this …","Gets a reference to the underlying value in this timeout.","","Creates new <code>Interval</code> that yields with interval of <code>duration</code>…","Creates new <code>Interval</code> that yields with interval of <code>period</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes this timeout, returning the underlying value.","Convert the value into a <code>std::time::Instant</code>.","Returns <code>true</code> if <code>Sleep</code> has elapsed.","","Returns an instant corresponding to “now”.","","","","Poll for the next instant in the interval to be reached.","Resets the <code>Sleep</code> instance to a new deadline.","Returns the amount of time elapsed from another instant to …","Waits until <code>duration</code> has elapsed.","Waits until <code>deadline</code> is reached.","","","","Completes when the next instant in the interval has been …","Require a <code>Future</code> to complete before the specified duration …","Require a <code>Future</code> to complete before the specified instant …","","","","","","","","","","","","","","Error returned by <code>Timeout</code>.","Errors encountered by the timer implementation.","Creates an error representing a timer at capacity.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create an error representing a misconfigured timer.","Returns <code>true</code> if the error was caused by the timer being at …","Returns <code>true</code> if the error was caused by the timer being …","Returns <code>true</code> if the error was caused by the timer being …","","Creates an error representing a shutdown timer.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,1,4,5,2,3,1,4,5,0,1,1,0,2,3,1,0,0,1,1,3,1,5,5,2,3,1,4,5,2,2,3,1,1,4,5,2,2,0,5,2,3,1,4,5,2,0,2,5,3,1,3,1,4,2,1,5,2,2,4,2,2,2,0,1,0,0,0,3,0,0,0,0,2,0,2,2,0,0,2,2,1,1,2,2,3,1,4,5,2,3,1,4,5,2,2,3,1,4,5,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,6,6,0,0,0,0,0,0,0,0,0,0,0,0,7,6,6,0,7,8,9,10,11,8,6,7,6,7,6,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,21,23,8,24,24,8,7,6,7,6,25,14,18,21,22,23,0,0,0,15,0,0,7,6,8,8,26,26,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,22,22,23,18,20,21,22,23,18,21,22,23,18,20,21,22,23,8,8,8,8,8,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,18,20,21,22,23,6,12,13,6,7,6,7,6,6,27,27,18,28,28,7,6,8,21,22,23,20,19,6,29,25,14,18,21,22,23,27,9,11,13,15,17,21,22,23,20,19,30,10,12,14,15,16,18,21,22,23,27,9,11,13,15,17,21,22,23,27,9,11,13,15,17,21,22,23,27,27,8,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,28,28,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,28,28,8,0,31,31,8,18,26,26,0,0,28,28,29,0,0,0,31,31,6,8,24,24,7,6,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,7,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,8,0,12,21,22,23,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,32,32,33,34,35,32,33,34,35,33,34,32,32,33,34,35,32,33,34,35,32,32,32,33,34,35,32,32,32,32,32,32,32,32,33,34,32,33,34,35,32,33,34,35,33,34,32,33,34,35,32,32,32,0,0,0,0,0,0,0,0,36,37,36,38,39,40,41,37,42,36,38,40,41,37,36,38,39,40,41,37,42,36,38,39,40,41,37,42,40,38,39,40,41,42,36,38,39,40,41,37,42,36,38,39,40,41,37,42,38,36,39,40,41,37,42,36,38,39,40,41,37,42,38,39,42,36,39,40,41,37,42,39,42,40,40,40,40,39,38,36,38,39,40,41,37,42,0,40,40,40,38,38,39,41,42,39,40,39,41,42,42,36,37,39,42,39,40,39,42,39,42,40,41,40,41,40,41,40,41,39,42,39,42,39,42,39,42,39,40,41,42,39,40,41,42,40,41,38,40,41,38,38,40,41,38,40,41,40,39,40,40,40,39,38,38,38,38,36,39,40,41,39,42,40,41,37,42,0,36,36,38,39,39,40,40,41,41,37,37,42,42,36,38,39,40,41,37,42,39,42,39,42,40,41,40,41,40,41,40,41,40,41,40,41,39,42,36,39,40,36,38,39,40,41,37,42,41,0,39,40,41,42,43,43,0,0,0,0,0,44,45,46,47,44,45,46,47,43,44,45,46,47,43,47,44,45,46,47,43,43,47,44,45,46,47,43,44,45,46,47,43,45,47,44,46,45,47,44,46,44,46,45,47,45,47,45,47,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,48,48,0,0,0,0,0,0,0,49,50,51,52,53,49,50,51,52,53,48,54,49,50,51,52,53,48,54,54,54,0,53,54,49,50,51,52,53,48,48,54,53,49,50,51,52,53,48,54,54,54,49,50,51,52,53,48,54,49,51,53,54,54,51,53,50,52,51,53,51,53,51,53,52,53,54,48,49,50,51,52,53,48,54,49,50,51,52,53,48,54,49,50,51,52,53,48,54,54,0,0,0,0,0,55,55,56,57,58,55,59,56,57,58,55,59,56,57,58,55,55,55,55,55,55,59,56,57,58,55,55,59,56,57,58,55,59,55,59,56,57,58,59,55,55,55,56,57,58,56,56,55,55,59,55,55,59,55,59,55,59,55,59,56,57,58,55,59,56,56,57,57,58,58,59,55,59,56,57,58,55,59,59,0,0,0,0,60,61,62,60,63,61,62,60,63,61,62,60,60,60,62,62,62,60,61,62,60,63,61,62,60,63,61,61,62,60,63,61,62,61,62,62,62,62,61,61,60,61,60,61,62,62,62,62,60,60,62,60,63,61,62,60,63,61,62,60,63,61,62,0,0,0,0,64,64,65,64,65,64,64,64,64,65,64,65,64,64,64,64,65,64,64,65,64,65,0,64,64,64,65,64,65,64,65,64,64,64,0,66,0,0,67,66,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,68,68,68,68,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,66,0,78,80,78,80,68,69,78,82,68,86,86,69,78,82,86,70,71,72,73,74,75,76,77,70,71,73,74,76,77,73,76,70,71,72,73,74,75,76,77,78,84,85,78,67,66,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,79,80,81,81,82,67,67,83,83,68,84,85,86,66,66,84,85,69,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,86,86,66,78,69,78,86,78,78,78,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,66,69,78,86,73,76,66,68,66,80,69,69,72,73,74,75,76,77,0,66,69,78,79,82,68,86,78,82,82,82,0,86,86,78,78,78,80,70,71,72,73,74,75,76,77,81,67,83,66,68,68,68,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,66,69,69,72,73,74,75,76,77,86,86,86,86,69,70,71,72,73,74,75,76,77,78,79,80,81,82,67,83,68,84,85,86,66,79,0,86,86,86,87,88,0,0,89,90,89,90,0,89,89,89,90,0,89,90,89,90,89,90,89,90,89,89,89,89,90,89,90,90,89,90,91,92,93,93,92,93,0,0,0,91,92,93,91,92,93,92,93,91,91,92,92,93,93,91,92,93,91,92,93,92,93,91,92,93,91,92,93,91,92,93,91,92,93,94,95,0,0,0,0,0,96,97,98,98,99,96,100,97,98,99,96,100,97,98,0,98,100,98,100,96,97,98,100,99,0,98,99,96,100,97,98,99,96,100,97,98,99,96,100,97,98,100,96,97,96,97,98,98,100,98,99,100,98,98,100,98,99,96,100,97,98,99,96,100,97,98,98,98,99,96,100,97,0,101,102,103,102,0,0,0,103,0,101,102,104,103,101,102,104,103,101,101,102,102,104,104,103,103,101,102,102,104,103,101,102,104,103,101,102,104,103,101,102,104,103,101,102,104,103,101,102,104,103,105,106,107,108,0,0,109,110,109,110,0,110,109,109,110,0,109,110,109,110,109,110,110,109,110,109,109,109,110,109,110,110,109,110,111,111,0,0,112,111,112,111,112,111,112,112,111,111,112,111,112,111,112,112,111,112,111,112,111,112,111,0,0,0,113,113,114,114,115,113,114,115,113,0,113,113,114,115,113,114,0,113,114,115,113,114,115,113,114,115,114,114,113,113,114,115,113,114,115,113,114,115,0,0,116,117,116,117,116,116,117,117,116,117,116,117,116,117,116,117,116,117,116,117,0,0,0,0,0,118,0,119,120,118,121,119,122,120,118,121,119,122,119,118,119,120,120,118,121,119,120,118,121,119,122,121,120,118,121,119,122,118,119,122,120,120,120,119,118,119,122,119,121,0,0,0,119,121,120,120,118,121,119,122,120,118,121,119,122,120,121,120,118,121,119,122,0,121,0,0,0,0,0,0,123,123,123,124,125,126,123,124,125,126,123,123,123,123,123,123,126,123,123,123,0,123,124,125,126,123,123,124,125,126,123,125,125,123,0,0,123,124,125,126,125,126,125,123,126,123,123,123,125,126,124,126,123,0,0,123,123,123,124,0,0,123,123,124,125,126,123,124,125,126,123,124,125,126,0,0,127,127,128,127,128,127,127,128,127,127,128,128,127,128,127,128,127,127,127,127,128,127,127,127,128,127,128,127,128,127,128],"f":[null,null,null,null,null,null,null,null,null,null,[[],["joinhandle",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["openoptions",3],["bool",0]],["openoptions",3]],[[["file",3]],["rawfd",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["asref",8,[["path",3]]]],["future",8]],[[["openoptions",3]],["openoptions",3]],[[["",0],["",0]]],[[["asref",8,[["path",3]]],["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["dirbuilder",3],["asref",8,[["path",3]]]],["future",8]],[[["openoptions",3],["bool",0]],["openoptions",3]],[[["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["openoptions",3],["bool",0]],["openoptions",3]],[[["openoptions",3],["i32",0]],["openoptions",3]],[[],["dirbuilder",3]],[[],["openoptions",3]],[[["direntry",3]],["osstring",3]],[[["direntry",3]],["future",8]],[[["file",3],["formatter",3]],["result",6]],[[["dirbuilder",3],["formatter",3]],["result",6]],[[["openoptions",3],["formatter",3]],["result",6]],[[["readdir",3],["formatter",3]],["result",6]],[[["direntry",3],["formatter",3]],["result",6]],[[]],[[["file",3]],["file",3]],[[]],[[["openoptions",3]],["openoptions",3]],[[]],[[]],[[]],[[["rawfd",6]],["file",3]],[[["file",3]],["file",3]],[[["asref",8,[["path",3]]],["asref",8,[["path",3]]]],["future",8]],[[["direntry",3]],["u64",0]],[[]],[[]],[[]],[[]],[[]],[[["file",3]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["file",3]],["future",8]],[[["direntry",3]],["future",8]],[[["dirbuilder",3],["u32",0]],["dirbuilder",3]],[[["openoptions",3],["u32",0]],["openoptions",3]],[[],["dirbuilder",3]],[[],["openoptions",3]],[[["readdir",3]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["openoptions",3],["asref",8,[["path",3]]]],["future",8]],[[["direntry",3]],["pathbuf",3]],[[["pin",3,[["file",3]]],["context",3]],["poll",4,[["result",6,[["u64",0]]]]]],[[["pin",3,[["file",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["readdir",3],["context",3]],["poll",4,[["result",6,[["option",4,[["direntry",3]]]]]]]],[[["pin",3,[["file",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["file",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["file",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["asref",8,[["path",3]]]],["future",8]],[[["openoptions",3],["bool",0]],["openoptions",3]],[[["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["dirbuilder",3],["bool",0]],["dirbuilder",3]],[[["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]],["asref",8,[["path",3]]]],["future",8]],[[["file",3],["u64",0]],["future",8]],[[["asref",8,[["path",3]]],["permissions",3]],["future",8]],[[["file",3],["permissions",3]],["future",8]],[[["pin",3,[["file",3]]],["seekfrom",4]],["result",6]],[[["asref",8,[["path",3]]],["asref",8,[["path",3]]]],["future",8]],[[["asref",8,[["path",3]]]],["future",8]],[[["file",3]],["future",8]],[[["file",3]],["future",8]],[[["",0]]],[[["openoptions",3],["bool",0]],["openoptions",3]],[[["file",3]],["future",8]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["file",3]],["result",4,[["file",3],["file",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["asref",8,[["path",3]]],["asref",8]],["future",8]],[[["openoptions",3],["bool",0]],["openoptions",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["interest",3],["interest",3]],["interest",3]],[[["readbuf",3],["usize",0]]],[[["stderr",3]],["rawfd",6]],[[["stdin",3]],["rawfd",6]],[[["stdout",3]],["rawfd",6]],[[["readbuf",3],["usize",0]]],[[["ready",3],["ready",3]],["ready",3]],[[["interest",3],["interest",3]],["interest",3]],[[["ready",3],["ready",3]],["ready",3]],[[["interest",3],["interest",3]]],[[["ready",3],["readybufwriter",3,[["asyncwrite",8]]]]],[[["bufreader",3,[["asyncread",8]]]]],[[["readbuf",3]],["usize",0]],[[],["chain",3]],[[],["chain",3]],[[["readbuf",3]]],[[["interest",3]],["interest",3]],[[["ready",3]],["ready",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["pin",3],["usize",0]]],[[["pin",3,[["empty",3]]],["usize",0]]],[[["pin",3,[["take",3,[["asyncbufread",8]]]]],["usize",0]]],[[["pin",3,[["bufwriter",3,[["",26,[["asyncwrite",8],["asyncbufread",8]]]]]]],["usize",0]]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["usize",0]]],[[["pin",3,[["bufreader",3,[["asyncread",8]]]]],["usize",0]]],[[["",0],["",0]],["future",8]],[[["",0],["",0]],["future",8]],[[["",0],["",0]],["future",8]],[[["duplexstream",3]]],[[["usize",0]]],[[],["empty",3]],[[["interest",3],["interest",3]],["bool",0]],[[["ready",3],["ready",3]],["bool",0]],[[["readbuf",3]]],[[["readbuf",3]]],[[["",0]],["flush",3]],[[["",0]],["flush",3]],[[["readbuf",3],["formatter",3]],["result",6]],[[["interest",3],["formatter",3]],["result",6]],[[["ready",3],["formatter",3]],["result",6]],[[["stderr",3],["formatter",3]],["result",6]],[[["stdin",3],["formatter",3]],["result",6]],[[["stdout",3],["formatter",3]],["result",6]],[[["readhalf",3,[["debug",8]]],["formatter",3]],["result",6]],[[["writehalf",3,[["debug",8]]],["formatter",3]],["result",6]],[[["empty",3],["formatter",3]],["result",6]],[[["duplexstream",3],["formatter",3]],["result",6]],[[["repeat",3],["formatter",3]],["result",6]],[[["sink",3],["formatter",3]],["result",6]],[[["take",3,[["debug",8]]],["formatter",3]],["result",6]],[[["split",3,[["debug",8]]],["formatter",3]],["result",6]],[[["lines",3,[["debug",8]]],["formatter",3]],["result",6]],[[["bufwriter",3,[["debug",8]]],["formatter",3]],["result",6]],[[["bufstream",3,[["debug",8]]],["formatter",3]],["result",6]],[[["bufreader",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bufwriter",3,[["bufreader",3]]]],["bufstream",3]],[[["bufreader",3,[["bufwriter",3]]]],["bufstream",3]],[[]],[[["take",3,[["asyncread",8]]]],["",0]],[[["lines",3]],["",0]],[[["bufwriter",3,[["asyncwrite",8]]]],["",0]],[[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]],["",0]],[[["bufreader",3,[["asyncread",8]]]],["",0]],[[["pin",3,[["take",3,[["asyncread",8]]]]]],["pin",3]],[[["pin",3,[["bufwriter",3,[["asyncwrite",8]]]]]],["pin",3]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]]],["pin",3]],[[["pin",3,[["bufreader",3,[["asyncread",8]]]]]],["pin",3]],[[["take",3,[["asyncread",8]]]],["",0]],[[["lines",3]],["",0]],[[["bufwriter",3,[["asyncwrite",8]]]],["",0]],[[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]],["",0]],[[["bufreader",3,[["asyncread",8]]]],["",0]],[[["readbuf",3]]],[[["readbuf",3],["usize",0]]],[[["readbuf",3]]],[[["readbuf",3]]],[[["readbuf",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["take",3,[["asyncread",8]]]],["asyncread",8]],[[["lines",3]]],[[["bufwriter",3,[["asyncwrite",8]]]],["asyncwrite",8]],[[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]],["",26,[["asyncread",8],["asyncwrite",8]]]],[[["bufreader",3,[["asyncread",8]]]],["asyncread",8]],[[["ready",3]],["bool",0]],[[["readhalf",3],["writehalf",3]],["bool",0]],[[["writehalf",3],["readhalf",3]],["bool",0]],[[["ready",3]],["bool",0]],[[["interest",3]],["bool",0]],[[["ready",3]],["bool",0]],[[["interest",3]],["bool",0]],[[["ready",3]],["bool",0]],[[["ready",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["take",3,[["asyncread",8]]]],["u64",0]],[[],["lines",3]],[[],["lines",3]],[[["interest",3],["interest",3]],["bool",0]],[[["ready",3],["ready",3]],["bool",0]],[[],["readbuf",3]],[[["asyncwrite",8]],["bufwriter",3,[["asyncwrite",8]]]],[[["",26,[["asyncread",8],["asyncwrite",8]]]],["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]],[[["asyncread",8]],["bufreader",3,[["asyncread",8]]]],[[["lines",3]],["future",8]],[[["split",3]],["future",8]],[[["ready",3],["ready",3]],["option",4,[["ordering",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",6,[["u64",0]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["empty",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["take",3,[["asyncbufread",8]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufwriter",3,[["",26,[["asyncwrite",8],["asyncbufread",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufreader",3,[["asyncread",8]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["stderr",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["stdout",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["writehalf",3,[["asyncwrite",8]]]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["duplexstream",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["sink",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["bufwriter",3,[["asyncwrite",8]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufreader",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["lines",3]]],["context",3]],["poll",4,[["result",6,[["option",4,[["string",3]]]]]]]],[[["pin",3,[["split",3]]],["context",3]],["poll",4,[["result",6,[["option",4,[["vec",3,[["u8",0]]]]]]]]]],[[["pin",3],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["stdin",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["readhalf",3,[["asyncread",8]]]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["empty",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["duplexstream",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["repeat",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["take",3,[["asyncread",8]]]]],["context",3],["readbuf",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["bufwriter",3,[["",26,[["asyncwrite",8],["asyncread",8]]]]]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufreader",3,[["asyncread",8]]]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["stderr",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["stdout",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["writehalf",3,[["asyncwrite",8]]]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["duplexstream",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["sink",3]]],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["bufwriter",3,[["asyncwrite",8]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["bufreader",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["stderr",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["stdout",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["writehalf",3,[["asyncwrite",8]]]]],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["duplexstream",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["sink",3]]],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["bufwriter",3,[["asyncwrite",8]]]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["bufreader",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["readbuf",3]]],[[["",0]],["read",3]],[[["",0]],["read",3]],[[["",0],["",0]],["readbuf",3]],[[["",0],["",0]],["readbuf",3]],[[["",0]],["readexact",3]],[[["",0]],["readexact",3]],[[["",0]],["readi128",3]],[[["",0]],["readi128",3]],[[["",0]],["readi128le",3]],[[["",0]],["readi128le",3]],[[["",0]],["readi16",3]],[[["",0]],["readi16",3]],[[["",0]],["readi16le",3]],[[["",0]],["readi16le",3]],[[["",0]],["readi32",3]],[[["",0]],["readi32",3]],[[["",0]],["readi32le",3]],[[["",0]],["readi32le",3]],[[["",0]],["readi64",3]],[[["",0]],["readi64",3]],[[["",0]],["readi64le",3]],[[["",0]],["readi64le",3]],[[["",0]],["readi8",3]],[[["",0]],["readi8",3]],[[["",0],["string",3]],["readline",3]],[[["",0],["string",3]],["readline",3]],[[["",0],["vec",3]],["readtoend",3]],[[["",0],["vec",3]],["readtoend",3]],[[["",0],["string",3]],["readtostring",3]],[[["",0],["string",3]],["readtostring",3]],[[["",0]],["readu128",3]],[[["",0]],["readu128",3]],[[["",0]],["readu128le",3]],[[["",0]],["readu128le",3]],[[["",0]],["readu16",3]],[[["",0]],["readu16",3]],[[["",0]],["readu16le",3]],[[["",0]],["readu16le",3]],[[["",0]],["readu32",3]],[[["",0]],["readu32",3]],[[["",0]],["readu32le",3]],[[["",0]],["readu32le",3]],[[["",0]],["readu64",3]],[[["",0]],["readu64",3]],[[["",0]],["readu64le",3]],[[["",0]],["readu64le",3]],[[["",0]],["readu8",3]],[[["",0]],["readu8",3]],[[["",0],["u8",0],["vec",3]],["readuntil",3]],[[["",0],["u8",0],["vec",3]],["readuntil",3]],[[["readbuf",3]],["usize",0]],[[["u8",0]],["repeat",3]],[[["",0],["seekfrom",4]],["seek",3]],[[["",0],["seekfrom",4]],["seek",3]],[[["readbuf",3],["usize",0]]],[[["take",3,[["asyncread",8]]],["u64",0]]],[[["",0]],["shutdown",3]],[[["",0]],["shutdown",3]],[[],["sink",3]],[[]],[[["u8",0]],["split",3]],[[["u8",0]],["split",3]],[[["pin",3],["seekfrom",4]],["result",6]],[[],["stderr",3]],[[],["stdin",3]],[[],["stdout",3]],[[["",0]],["seek",3]],[[["",0]],["seek",3]],[[["ready",3],["ready",3]],["ready",3]],[[["readbuf",3],["usize",0]],["readbuf",3]],[[["u64",0]],["take",3]],[[["u64",0]],["take",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["readbuf",3]]],[[],["readbuf",3]],null,[[["readhalf",3],["writehalf",3]]],[[["usize",0],["asyncwrite",8]],["bufwriter",3,[["asyncwrite",8]]]],[[["usize",0],["usize",0],["",26,[["asyncread",8],["asyncwrite",8]]]],["bufstream",3,[["",26,[["asyncread",8],["asyncwrite",8]]]]]],[[["usize",0],["asyncread",8]],["bufreader",3,[["asyncread",8]]]],[[["",0]],["write",3]],[[["",0]],["write",3]],[[["",0]],["writeall",3]],[[["",0]],["writeall",3]],[[["",0],["",0]],["writebuf",3]],[[["",0],["",0]],["writebuf",3]],[[["",0],["i128",0]],["writei128",3]],[[["",0],["i128",0]],["writei128",3]],[[["",0],["i128",0]],["writei128le",3]],[[["",0],["i128",0]],["writei128le",3]],[[["",0],["i16",0]],["writei16",3]],[[["",0],["i16",0]],["writei16",3]],[[["",0],["i16",0]],["writei16le",3]],[[["",0],["i16",0]],["writei16le",3]],[[["",0],["i32",0]],["writei32",3]],[[["",0],["i32",0]],["writei32",3]],[[["",0],["i32",0]],["writei32le",3]],[[["",0],["i32",0]],["writei32le",3]],[[["",0],["i64",0]],["writei64",3]],[[["",0],["i64",0]],["writei64",3]],[[["",0],["i64",0]],["writei64le",3]],[[["",0],["i64",0]],["writei64le",3]],[[["",0],["i8",0]],["writei8",3]],[[["",0],["i8",0]],["writei8",3]],[[["",0],["u128",0]],["writeu128",3]],[[["",0],["u128",0]],["writeu128",3]],[[["",0],["u128",0]],["writeu128le",3]],[[["",0],["u128",0]],["writeu128le",3]],[[["",0],["u16",0]],["writeu16",3]],[[["",0],["u16",0]],["writeu16",3]],[[["",0],["u16",0]],["writeu16le",3]],[[["",0],["u16",0]],["writeu16le",3]],[[["",0],["u32",0]],["writeu32",3]],[[["",0],["u32",0]],["writeu32",3]],[[["",0],["u32",0]],["writeu32le",3]],[[["",0],["u32",0]],["writeu32le",3]],[[["",0],["u64",0]],["writeu64",3]],[[["",0],["u64",0]],["writeu64",3]],[[["",0],["u64",0]],["writeu64le",3]],[[["",0],["u64",0]],["writeu64le",3]],[[["",0],["u8",0]],["writeu8",3]],[[["",0],["u8",0]],["writeu8",3]],[[["",0]],["writevectored",3]],[[["",0]],["writevectored",3]],null,null,null,null,[[["asyncfd",3,[["asrawfd",8]]]],["rawfd",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["asyncfdreadyguard",3,[["asrawfd",8]]]]],[[["asyncfdreadymutguard",3,[["asrawfd",8]]]]],[[["asyncfd",3,[["asrawfd",8]]]]],[[["asyncfd",3,[["",26,[["debug",8],["asrawfd",8]]]]],["formatter",3]],["result",6]],[[["asyncfdreadyguard",3,[["",26,[["debug",8],["asrawfd",8]]]]],["formatter",3]],["result",6]],[[["asyncfdreadymutguard",3,[["",26,[["debug",8],["asrawfd",8]]]]],["formatter",3]],["result",6]],[[["tryioerror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["asyncfd",3,[["asrawfd",8]]]],["",0]],[[["asyncfd",3,[["asrawfd",8]]]],["",0]],[[]],[[]],[[]],[[]],[[["asyncfd",3,[["asrawfd",8]]]],["asrawfd",8]],[[["asrawfd",8]],["result",6,[["asyncfd",3,[["asrawfd",8]]]]]],[[["asyncfd",3,[["asrawfd",8]]],["context",3]],["poll",4,[["result",6,[["asyncfdreadyguard",3,[["asrawfd",8]]]]]]]],[[["asyncfd",3,[["asrawfd",8]]],["context",3]],["poll",4,[["result",6,[["asyncfdreadymutguard",3,[["asrawfd",8]]]]]]]],[[["asyncfd",3,[["asrawfd",8]]],["context",3]],["poll",4,[["result",6,[["asyncfdreadyguard",3,[["asrawfd",8]]]]]]]],[[["asyncfd",3,[["asrawfd",8]]],["context",3]],["poll",4,[["result",6,[["asyncfdreadymutguard",3,[["asrawfd",8]]]]]]]],[[["asyncfd",3,[["asrawfd",8]]]],["future",8]],[[["asyncfd",3,[["asrawfd",8]]]],["future",8]],[[["asyncfdreadyguard",3,[["asrawfd",8]]]]],[[["asyncfdreadymutguard",3,[["asrawfd",8]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asyncfdreadyguard",3,[["asrawfd",8]]],["fnonce",8]],["result",4,[["result",6],["tryioerror",3]]]],[[["asyncfdreadymutguard",3,[["asrawfd",8]]],["fnonce",8]],["result",4,[["result",6],["tryioerror",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["asrawfd",8],["interest",3]],["result",6,[["asyncfd",3,[["asrawfd",8]]]]]],[[["asyncfd",3,[["asrawfd",8]]]],["future",8]],[[["asyncfd",3,[["asrawfd",8]]]],["future",8]],null,null,null,null,null,null,null,null,[[["tcplistener",3]],["future",8]],[[["unixlistener",3]],["future",8]],[[["tcplistener",3]],["rawfd",6]],[[["tcpsocket",3]],["rawfd",6]],[[["tcpstream",3]],["rawfd",6]],[[["udpsocket",3]],["rawfd",6]],[[["unixdatagram",3]],["rawfd",6]],[[["unixlistener",3]],["rawfd",6]],[[["unixstream",3]],["rawfd",6]],[[["tosocketaddrs",8]],["future",8]],[[["tcpsocket",3],["socketaddr",4]],["result",6]],[[["tosocketaddrs",8]],["future",8]],[[],["result",6,[["unixdatagram",3]]]],[[],["result",6,[["unixlistener",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[["tcpsocket",3],["socketaddr",4]],["future",8]],[[["tosocketaddrs",8]],["future",8]],[[["udpsocket",3],["tosocketaddrs",8]],["future",8]],[[["unixdatagram",3],["asref",8,[["path",3]]]],["result",6]],[[],["future",8]],[[["tcplistener",3],["formatter",3]],["result",6]],[[["tcpsocket",3],["formatter",3]],["result",6]],[[["tcpstream",3],["formatter",3]],["result",6]],[[["udpsocket",3],["formatter",3]],["result",6]],[[["unixdatagram",3],["formatter",3]],["result",6]],[[["unixlistener",3],["formatter",3]],["result",6]],[[["unixstream",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rawfd",6]],["tcpsocket",3]],[[["tcplistener",3]],["result",6,[["tcplistener",3]]]],[[["tcpstream",3]],["result",6,[["tcpstream",3]]]],[[["udpsocket",3]],["result",6,[["udpsocket",3]]]],[[["unixdatagram",3]],["result",6,[["unixdatagram",3]]]],[[["unixlistener",3]],["result",6,[["unixlistener",3]]]],[[["unixstream",3]],["result",6,[["unixstream",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tcpsocket",3]],["rawfd",6]],[[["tcpstream",3]]],[[["unixstream",3]]],[[["tcplistener",3]],["result",6,[["tcplistener",3]]]],[[["tcpstream",3]],["result",6,[["tcpstream",3]]]],[[["udpsocket",3]],["result",6,[["udpsocket",3]]]],[[["unixdatagram",3]],["result",6,[["unixdatagram",3]]]],[[["unixlistener",3]],["result",6,[["unixlistener",3]]]],[[["unixstream",3]],["result",6,[["unixstream",3]]]],[[["tcpstream",3]],["bool",0]],[[["unixstream",3]],["bool",0]],[[["udpsocket",3],["ipv4addr",3],["ipv4addr",3]],["result",6]],[[["udpsocket",3],["ipv6addr",3],["u32",0]],["result",6]],[[["udpsocket",3],["ipv4addr",3],["ipv4addr",3]],["result",6]],[[["udpsocket",3],["ipv6addr",3],["u32",0]],["result",6]],[[["tcpstream",3]],["result",6,[["option",4,[["duration",3]]]]]],[[["tcpsocket",3],["u32",0]],["result",6,[["tcplistener",3]]]],[[["tcplistener",3]],["result",6,[["socketaddr",4]]]],[[["tcpsocket",3]],["result",6,[["socketaddr",4]]]],[[["tcpstream",3]],["result",6,[["socketaddr",4]]]],[[["udpsocket",3]],["result",6,[["socketaddr",4]]]],[[["unixdatagram",3]],["result",6,[["socketaddr",3]]]],[[["unixlistener",3]],["result",6,[["socketaddr",3]]]],[[["unixstream",3]],["result",6,[["socketaddr",3]]]],[[],["future",8]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[["udpsocket",3]],["result",6,[["bool",0]]]],[[["udpsocket",3]],["result",6,[["u32",0]]]],[[],["result",6,[["tcpsocket",3]]]],[[],["result",6,[["tcpsocket",3]]]],[[["tcpstream",3]],["result",6,[["bool",0]]]],[[],["result",6]],[[],["result",6]],[[["tcpstream",3]],["future",8]],[[["udpsocket",3]],["future",8]],[[["tcpstream",3]],["result",6,[["socketaddr",4]]]],[[["unixdatagram",3]],["result",6,[["socketaddr",3]]]],[[["unixstream",3]],["result",6,[["socketaddr",3]]]],[[["unixstream",3]],["result",6,[["ucred",3]]]],[[["tcplistener",3],["context",3]],["poll",4,[["result",6]]]],[[["unixlistener",3],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["tcpstream",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["unixstream",3]]],["context",3]],["poll",4,[["result",6]]]],[[["tcpstream",3],["context",3],["readbuf",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["udpsocket",3],["context",3],["readbuf",3]],["poll",4,[["result",6,[["socketaddr",4]]]]]],[[["pin",3,[["tcpstream",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["unixstream",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["tcpstream",3],["context",3]],["poll",4,[["result",6]]]],[[["unixstream",3],["context",3]],["poll",4,[["result",6]]]],[[["udpsocket",3],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["unixdatagram",3],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["udpsocket",3],["context",3],["readbuf",3]],["poll",4,[["result",6,[["socketaddr",4]]]]]],[[["unixdatagram",3],["context",3],["readbuf",3]],["poll",4,[["result",6,[["socketaddr",3]]]]]],[[["udpsocket",3],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["unixdatagram",3],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["udpsocket",3],["context",3],["socketaddr",4]],["poll",4,[["result",6,[["usize",0]]]]]],[[["unixdatagram",3],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["tcpstream",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["unixstream",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["tcpstream",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["unixstream",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["tcpstream",3],["context",3]],["poll",4,[["result",6]]]],[[["unixstream",3],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["tcpstream",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["unixstream",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["tcpstream",3]],["future",8]],[[["udpsocket",3]],["future",8]],[[["unixdatagram",3]],["future",8]],[[["unixstream",3]],["future",8]],[[["tcpstream",3],["interest",3]],["future",8]],[[["udpsocket",3],["interest",3]],["future",8]],[[["unixdatagram",3],["interest",3]],["future",8]],[[["unixstream",3],["interest",3]],["future",8]],[[["udpsocket",3]],["future",8]],[[["unixdatagram",3]],["future",8]],[[["tcpsocket",3]],["result",6,[["u32",0]]]],[[["udpsocket",3]],["future",8]],[[["unixdatagram",3]],["future",8]],[[["tcpsocket",3]],["result",6,[["bool",0]]]],[[["tcpsocket",3]],["result",6,[["bool",0]]]],[[["udpsocket",3]],["future",8]],[[["unixdatagram",3]],["future",8]],[[["tcpsocket",3]],["result",6,[["u32",0]]]],[[["udpsocket",3],["tosocketaddrs",8]],["future",8]],[[["unixdatagram",3]],["future",8]],[[["udpsocket",3],["bool",0]],["result",6]],[[["tcpstream",3],["option",4,[["duration",3]]]],["result",6]],[[["udpsocket",3],["bool",0]],["result",6]],[[["udpsocket",3],["bool",0]],["result",6]],[[["udpsocket",3],["u32",0]],["result",6]],[[["tcpstream",3],["bool",0]],["result",6]],[[["tcpsocket",3],["u32",0]],["result",6]],[[["tcpsocket",3],["bool",0]],["result",6]],[[["tcpsocket",3],["bool",0]],["result",6]],[[["tcpsocket",3],["u32",0]],["result",6]],[[["tcplistener",3],["u32",0]],["result",6]],[[["tcpstream",3],["u32",0]],["result",6]],[[["udpsocket",3],["u32",0]],["result",6]],[[["unixdatagram",3],["shutdown",4]],["result",6]],[[["tcpstream",3]]],[[["unixstream",3]]],[[["udpsocket",3]],["result",6,[["option",4,[["error",3]]]]]],[[["unixdatagram",3]],["result",6,[["option",4,[["error",3]]]]]],[[["unixlistener",3]],["result",6,[["option",4,[["error",3]]]]]],[[["unixstream",3]],["result",6,[["option",4,[["error",3]]]]]],null,[[["tcplistener",3]],["result",4,[["tcplistener",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tcpstream",3]],["result",4,[["tcpstream",3]]]],[[],["result",4]],[[["udpsocket",3]],["result",4,[["udpsocket",3]]]],[[],["result",4]],[[["unixdatagram",3]],["result",4,[["unixdatagram",3]]]],[[],["result",4]],[[["unixlistener",3]],["result",6,[["unixlistener",3]]]],[[],["result",4]],[[["unixstream",3]],["result",6,[["unixstream",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["tcpstream",3],["",0]],["result",6,[["usize",0]]]],[[["unixstream",3],["",0]],["result",6,[["usize",0]]]],[[["udpsocket",3]],["result",6,[["usize",0]]]],[[["unixdatagram",3]],["result",6,[["usize",0]]]],[[["udpsocket",3],["",0]],["result",6,[["usize",0]]]],[[["unixdatagram",3],["",0]],["result",6,[["usize",0]]]],[[["udpsocket",3],["",0]],["result",6]],[[["unixdatagram",3],["",0]],["result",6]],[[["udpsocket",3]],["result",6]],[[["unixdatagram",3]],["result",6]],[[["udpsocket",3]],["result",6,[["usize",0]]]],[[["unixdatagram",3]],["result",6,[["usize",0]]]],[[["udpsocket",3],["socketaddr",4]],["result",6,[["usize",0]]]],[[["unixdatagram",3]],["result",6,[["usize",0]]]],[[["tcpstream",3]],["result",6,[["usize",0]]]],[[["unixstream",3]],["result",6,[["usize",0]]]],[[["tcplistener",3]],["result",6,[["u32",0]]]],[[["tcpstream",3]],["result",6,[["u32",0]]]],[[["udpsocket",3]],["result",6,[["u32",0]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",6,[["unixdatagram",3]]]],null,[[["tcpstream",3]],["future",8]],[[["udpsocket",3]],["future",8]],[[["unixdatagram",3]],["future",8]],[[["unixstream",3]],["future",8]],null,null,null,null,null,null,null,[[["readhalf",3]],["tcpstream",3]],[[["writehalf",3]],["tcpstream",3]],[[["ownedreadhalf",3]],["tcpstream",3]],[[["ownedwritehalf",3]],["tcpstream",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ownedwritehalf",3]]],[[["readhalf",3],["formatter",3]],["result",6]],[[["writehalf",3],["formatter",3]],["result",6]],[[["ownedreadhalf",3],["formatter",3]],["result",6]],[[["ownedwritehalf",3],["formatter",3]],["result",6]],[[["reuniteerror",3],["formatter",3]],["result",6]],[[["reuniteerror",3],["formatter",3]],["result",6]],[[["ownedwritehalf",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["writehalf",3]],["bool",0]],[[["ownedwritehalf",3]],["bool",0]],[[["readhalf",3]],["future",8]],[[["ownedreadhalf",3]],["future",8]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["readhalf",3],["context",3],["readbuf",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["ownedreadhalf",3],["context",3],["readbuf",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["readhalf",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["ownedreadhalf",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["ownedreadhalf",3],["ownedwritehalf",3]],["result",4,[["tcpstream",3],["reuniteerror",3]]]],[[["ownedwritehalf",3],["ownedreadhalf",3]],["result",4,[["tcpstream",3],["reuniteerror",3]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["socketaddr",3]],["option",4,[["path",3]]]],[[["readhalf",3]],["unixstream",3]],[[["writehalf",3]],["unixstream",3]],[[["ownedreadhalf",3]],["unixstream",3]],[[["ownedwritehalf",3]],["unixstream",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ucred",3]],["ucred",3]],[[["",0],["",0]]],null,[[["ownedwritehalf",3]]],[[["ucred",3],["ucred",3]],["bool",0]],[[["socketaddr",3],["formatter",3]],["result",6]],[[["readhalf",3],["formatter",3]],["result",6]],[[["writehalf",3],["formatter",3]],["result",6]],[[["ownedreadhalf",3],["formatter",3]],["result",6]],[[["ownedwritehalf",3],["formatter",3]],["result",6]],[[["reuniteerror",3],["formatter",3]],["result",6]],[[["reuniteerror",3],["formatter",3]],["result",6]],[[["ucred",3],["formatter",3]],["result",6]],[[["ownedwritehalf",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ucred",3]],["gid_t",6]],[[["ucred",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["socketaddr",3]],["bool",0]],[[["writehalf",3]],["bool",0]],[[["ownedwritehalf",3]],["bool",0]],[[["ucred",3],["ucred",3]],["bool",0]],[[["ucred",3]],["option",4,[["pid_t",6]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["readhalf",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["ownedreadhalf",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["writehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["ownedwritehalf",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["ownedreadhalf",3],["ownedwritehalf",3]],["result",4,[["unixstream",3],["reuniteerror",3]]]],[[["ownedwritehalf",3],["ownedreadhalf",3]],["result",4,[["unixstream",3],["reuniteerror",3]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["ucred",3]],["uid_t",6]],null,null,null,null,null,[[["command",3],["asref",8,[["osstr",3]]]],["command",3]],[[["command",3]],["command",3]],[[["childstdin",3]],["rawfd",6]],[[["childstdout",3]],["rawfd",6]],[[["childstderr",3]],["rawfd",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["command",3],["asref",8,[["path",3]]]],["command",3]],[[["command",3]],["command",3]],[[["command",3]],["command",3]],[[["command",3],["asref",8,[["osstr",3]]]],["command",3]],[[["command",3]],["command",3]],[[["command",3],["formatter",3]],["result",6]],[[["child",3],["formatter",3]],["result",6]],[[["childstdin",3],["formatter",3]],["result",6]],[[["childstdout",3],["formatter",3]],["result",6]],[[["childstderr",3],["formatter",3]],["result",6]],[[]],[[["stdcommand",3]],["command",3]],[[]],[[]],[[]],[[]],[[["command",3],["u32",0]],["command",3]],[[["child",3]],["option",4,[["u32",0]]]],[[]],[[]],[[]],[[]],[[]],[[["child",3]],["future",8]],[[["command",3],["bool",0]],["command",3]],[[["asref",8,[["osstr",3]]]],["command",3]],[[["command",3]],["future",8]],[[["pin",3,[["childstdin",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["childstdout",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["childstderr",3]]],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3,[["childstdin",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["childstdin",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["command",3]],["command",3]],[[["command",3]],["result",6,[["child",3]]]],[[["child",3]],["result",6]],[[["command",3]],["future",8]],[[["command",3],["into",8,[["stdio",3]]]],["command",3]],null,[[["command",3],["into",8,[["stdio",3]]]],["command",3]],null,[[["command",3],["into",8,[["stdio",3]]]],["command",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["childstdin",3]],["result",4,[["stdio",3]]]],[[["childstdout",3]],["result",4,[["stdio",3]]]],[[],["result",4]],[[],["result",4]],[[["childstderr",3]],["result",4,[["stdio",3]]]],[[["child",3]],["result",6,[["option",4,[["exitstatus",3]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["command",3],["u32",0]],["command",3]],[[["child",3]],["future",8]],[[["child",3]],["future",8]],null,null,null,null,[[["handle",3],["future",8]]],[[["runtime",3],["future",8]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["builder",3]],["result",6,[["runtime",3]]]],[[["handle",3]],["handle",3]],[[["",0],["",0]]],[[],["handle",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[["handle",3]],["enterguard",3]],[[["runtime",3]],["enterguard",3]],[[["builder",3],["formatter",3]],["result",6]],[[["handle",3],["formatter",3]],["result",6]],[[["enterguard",3],["formatter",3]],["result",6]],[[["runtime",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["runtime",3]],["handle",3]],[[]],[[]],[[]],[[]],[[["builder",3],["usize",0]],["builder",3]],[[],["result",6,[["runtime",3]]]],[[],["builder",3]],[[],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3]],["builder",3]],[[["runtime",3]]],[[["runtime",3],["duration",3]]],[[["handle",3]],["joinhandle",3]],[[["runtime",3]],["joinhandle",3]],[[["handle",3]],["joinhandle",3]],[[["runtime",3]],["joinhandle",3]],[[["builder",3],["duration",3]],["builder",3]],[[["builder",3],["into",8,[["string",3]]]],["builder",3]],[[["builder",3]],["builder",3]],[[["builder",3],["usize",0]],["builder",3]],[[["",0]]],[[],["result",4,[["handle",3],["trycurrenterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["builder",3],["usize",0]],["builder",3]],[[],["future",8]],null,null,null,[[],["signalkind",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["signalkind",3]],[[["signalkind",3]],["signalkind",3]],[[["",0],["",0]]],[[["signalkind",3],["formatter",3]],["result",6]],[[["signal",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_int",6]],["signalkind",3]],[[],["signalkind",3]],[[],["signalkind",3]],[[]],[[]],[[],["signalkind",3]],[[],["signalkind",3]],[[["signal",3],["context",3]],["poll",4,[["option",4]]]],[[],["signalkind",3]],[[["signal",3]],["future",8]],[[["signalkind",3]],["result",6,[["signal",3]]]],[[],["signalkind",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["signalkind",3]],[[],["signalkind",3]],[[],["signalkind",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["semaphore",3]],["future",8]],[[["semaphore",3],["u32",0]],["future",8]],[[["arc",3,[["semaphore",3]]],["u32",0]],["future",8]],[[["arc",3,[["semaphore",3]]]],["future",8]],[[["semaphore",3],["usize",0]]],[[["semaphore",3]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["oncecell",3,[["clone",8]]]],["oncecell",3,[["clone",8]]]],[[["barrierwaitresult",3]],["barrierwaitresult",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["semaphore",3]]],[[["sized",8]],["mutex",3,[["sized",8]]]],[[],["oncecell",3]],[[],["notify",3]],[[["usize",0]],["semaphore",3]],[[["sized",8]],["rwlock",3,[["sized",8]]]],[[["sized",8],["u32",0]],["rwlock",3,[["sized",8]]]],[[],["mutex",3]],[[],["oncecell",3]],[[],["notify",3]],[[],["rwlock",3,[["sized",8]]]],[[["mutexguard",3,[["sized",8]]]]],[[["ownedmutexguard",3,[["sized",8]]]]],[[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]]],["",0]],[[["ownedrwlockwriteguard",3,[["sized",8]]]],["",0]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]],["",0]],[[["rwlockreadguard",3,[["sized",8]]]],["",0]],[[["rwlockwriteguard",3,[["sized",8]]]],["",0]],[[["rwlockmappedwriteguard",3,[["sized",8]]]],["",0]],[[["mutexguard",3,[["sized",8]]]]],[[["ownedmutexguard",3,[["sized",8]]]]],[[["ownedrwlockwriteguard",3,[["sized",8]]]],["",0]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]],["",0]],[[["rwlockwriteguard",3,[["sized",8]]]],["",0]],[[["rwlockmappedwriteguard",3,[["sized",8]]]],["",0]],[[["ownedrwlockwriteguard",3,[["sized",8]]]],["ownedrwlockreadguard",3,[["sized",8]]]],[[["rwlockwriteguard",3,[["sized",8]]]],["rwlockreadguard",3,[["sized",8]]]],[[["mutexguard",3,[["sized",8]]]]],[[["ownedmutexguard",3,[["sized",8]]]]],[[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]]]],[[["ownedrwlockwriteguard",3,[["sized",8]]]]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]]],[[["rwlockreadguard",3,[["sized",8]]]]],[[["rwlockwriteguard",3,[["sized",8]]]]],[[["rwlockmappedwriteguard",3,[["sized",8]]]]],[[["oncecell",3]]],[[["semaphorepermit",3]]],[[["ownedsemaphorepermit",3]]],[[["oncecell",3,[["partialeq",8]]],["oncecell",3]],["bool",0]],[[["tryacquireerror",4],["tryacquireerror",4]],["bool",0]],[[["seterror",4,[["partialeq",8]]],["seterror",4]],["bool",0]],[[["mutex",3],["formatter",3]],["result",6]],[[["mutexguard",3,[["",26,[["sized",8],["display",8]]]]],["formatter",3]],["result",6]],[[["mutexguard",3,[["",26,[["sized",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["ownedmutexguard",3,[["",26,[["sized",8],["display",8]]]]],["formatter",3]],["result",6]],[[["ownedmutexguard",3,[["",26,[["sized",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]],["formatter",3]],["result",6]],[[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]],["formatter",3]],["result",6]],[[["ownedrwlockwriteguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["ownedrwlockwriteguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]],["formatter",3]],["result",6]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]],["formatter",3]],["result",6]],[[["rwlockreadguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["rwlockreadguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["rwlockwriteguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["rwlockwriteguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["rwlockmappedwriteguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["rwlockmappedwriteguard",3,[["sized",8]]],["formatter",3]],["result",6]],[[["oncecell",3,[["debug",8]]],["formatter",3]],["result",6]],[[["barrier",3],["formatter",3]],["result",6]],[[["barrierwaitresult",3],["formatter",3]],["result",6]],[[["trylockerror",3],["formatter",3]],["result",6]],[[["trylockerror",3],["formatter",3]],["result",6]],[[["notify",3],["formatter",3]],["result",6]],[[["tryacquireerror",4],["formatter",3]],["result",6]],[[["tryacquireerror",4],["formatter",3]],["result",6]],[[["acquireerror",3],["formatter",3]],["result",6]],[[["acquireerror",3],["formatter",3]],["result",6]],[[["semaphore",3],["formatter",3]],["result",6]],[[["semaphorepermit",3],["formatter",3]],["result",6]],[[["ownedsemaphorepermit",3],["formatter",3]],["result",6]],[[["rwlock",3,[["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[["seterror",4],["formatter",3]],["result",6]],[[["seterror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["semaphorepermit",3]]],[[["ownedsemaphorepermit",3]]],[[],["mutex",3]],[[["never",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rwlock",3]],[[]],[[["never",0]]],[[]],[[["oncecell",3]],["option",4]],[[["mutex",3,[["sized",8]]]],["",0]],[[["oncecell",3]],["option",4]],[[["rwlock",3,[["sized",8]]]],["",0]],[[["oncecell",3]],["future",8]],[[["oncecell",3]],["future",8]],[[["oncecell",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mutex",3,[["sized",8]]]],["sized",8]],[[["oncecell",3]],["option",4]],[[["rwlock",3,[["sized",8]]]],["sized",8]],[[["ownedrwlockwriteguard",3,[["sized",8]]]],["ownedrwlockmappedwriteguard",3,[["sized",8]]]],[[["rwlockwriteguard",3,[["sized",8]]]],["rwlockmappedwriteguard",3,[["sized",8]]]],[[["seterror",4]],["bool",0]],[[["semaphore",3]],["bool",0]],[[["seterror",4]],["bool",0]],[[["barrierwaitresult",3]],["bool",0]],[[["mutex",3,[["sized",8]]]],["future",8]],[[["arc",3,[["mutex",3,[["sized",8]]]]]],["future",8]],[[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]]],["ownedrwlockreadguard",3,[["sized",8],["sized",8]]]],[[["ownedrwlockwriteguard",3,[["sized",8]]]],["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]],["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]],[[["rwlockreadguard",3,[["sized",8]]]],["rwlockreadguard",3,[["sized",8]]]],[[["rwlockwriteguard",3,[["sized",8]]]],["rwlockmappedwriteguard",3,[["sized",8]]]],[[["rwlockmappedwriteguard",3,[["sized",8]]]],["rwlockmappedwriteguard",3,[["sized",8]]]],null,[[["seterror",4,[["partialeq",8]]],["seterror",4]],["bool",0]],[[["sized",8]],["mutex",3,[["sized",8]]]],[[],["oncecell",3]],[[["usize",0]],["barrier",3]],[[],["notify",3]],[[["usize",0]],["semaphore",3]],[[["sized",8]],["rwlock",3,[["sized",8]]]],[[["option",4]],["oncecell",3]],[[["notify",3]],["notified",3]],[[["notify",3]]],[[["notify",3]]],null,[[["rwlock",3,[["sized",8]]]],["future",8]],[[["arc",3,[["rwlock",3,[["sized",8]]]]]],["future",8]],[[["oncecell",3]],["result",4,[["seterror",4]]]],[[["oncecell",3]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["semaphore",3]],["result",4,[["semaphorepermit",3],["tryacquireerror",4]]]],[[["semaphore",3],["u32",0]],["result",4,[["semaphorepermit",3],["tryacquireerror",4]]]],[[["arc",3,[["semaphore",3]]],["u32",0]],["result",4,[["ownedsemaphorepermit",3],["tryacquireerror",4]]]],[[["arc",3,[["semaphore",3]]]],["result",4,[["ownedsemaphorepermit",3],["tryacquireerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["mutex",3,[["sized",8]]]],["result",4,[["mutexguard",3,[["sized",8]]],["trylockerror",3]]]],[[["arc",3,[["mutex",3,[["sized",8]]]]]],["result",4,[["ownedmutexguard",3,[["sized",8]]],["trylockerror",3]]]],[[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]]],["result",4,[["ownedrwlockreadguard",3,[["sized",8],["sized",8]]],["ownedrwlockreadguard",3,[["sized",8],["sized",8]]]]]],[[["ownedrwlockwriteguard",3,[["sized",8]]]],["result",4,[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]],["ownedrwlockwriteguard",3,[["sized",8]]]]]],[[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]],["result",4,[["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]],["ownedrwlockmappedwriteguard",3,[["sized",8],["sized",8]]]]]],[[["rwlockreadguard",3,[["sized",8]]]],["result",4,[["rwlockreadguard",3,[["sized",8]]],["rwlockreadguard",3,[["sized",8]]]]]],[[["rwlockwriteguard",3,[["sized",8]]]],["result",4,[["rwlockmappedwriteguard",3,[["sized",8]]],["rwlockwriteguard",3,[["sized",8]]]]]],[[["rwlockmappedwriteguard",3,[["sized",8]]]],["result",4,[["rwlockmappedwriteguard",3,[["sized",8]]],["rwlockmappedwriteguard",3,[["sized",8]]]]]],[[["rwlock",3,[["sized",8]]]],["result",4,[["rwlockreadguard",3,[["sized",8]]],["trylockerror",3]]]],[[["arc",3,[["rwlock",3,[["sized",8]]]]]],["result",4,[["ownedrwlockreadguard",3,[["sized",8]]],["trylockerror",3]]]],[[["rwlock",3,[["sized",8]]]],["result",4,[["rwlockwriteguard",3,[["sized",8]]],["trylockerror",3]]]],[[["arc",3,[["rwlock",3,[["sized",8]]]]]],["result",4,[["ownedrwlockwriteguard",3,[["sized",8]]],["trylockerror",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["barrier",3]],["future",8]],null,[[["sized",8],["u32",0]],["rwlock",3,[["sized",8]]]],[[["rwlock",3,[["sized",8]]]],["future",8]],[[["arc",3,[["rwlock",3,[["sized",8]]]]]],["future",8]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["sender",3]],["sender",3]],[[["",0],["",0]]],[[["sender",3]]],[[["receiver",3]]],null,[[["sender",3],["formatter",3]],["result",6]],[[["receiver",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["sender",3]],["usize",0]],[[["receiver",3,[["clone",8]]]],["future",8]],[[["sender",3]],["result",4,[["usize",0],["senderror",3]]]],[[["sender",3]],["receiver",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["receiver",3,[["clone",8]]]],["result",4,[["clone",8],["tryrecverror",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["recverror",4],["recverror",4]],["bool",0]],[[["tryrecverror",4],["tryrecverror",4]],["bool",0]],[[["senderror",3],["formatter",3]],["result",6]],[[["senderror",3,[["debug",8]]],["formatter",3]],["result",6]],[[["recverror",4],["formatter",3]],["result",6]],[[["recverror",4],["formatter",3]],["result",6]],[[["tryrecverror",4],["formatter",3]],["result",6]],[[["tryrecverror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["recverror",4],["recverror",4]],["bool",0]],[[["tryrecverror",4],["tryrecverror",4]],["bool",0]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["receiver",3]],["option",4]],[[["unboundedreceiver",3]],["option",4]],[[["sender",3]],["result",4,[["senderror",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sender",3]],["usize",0]],[[["usize",0]]],[[["sender",3]],["sender",3]],[[["unboundedsender",3]],["unboundedsender",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["receiver",3]]],[[["unboundedreceiver",3]]],[[["sender",3]],["future",8]],[[["unboundedsender",3]],["future",8]],[[["permit",3]]],null,[[["sender",3],["formatter",3]],["result",6]],[[["permit",3],["formatter",3]],["result",6]],[[["receiver",3],["formatter",3]],["result",6]],[[["unboundedsender",3],["formatter",3]],["result",6]],[[["unboundedreceiver",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sender",3]],["bool",0]],[[["unboundedsender",3]],["bool",0]],[[["receiver",3],["context",3]],["poll",4,[["option",4]]]],[[["unboundedreceiver",3],["context",3]],["poll",4,[["option",4]]]],[[["receiver",3]],["future",8]],[[["unboundedreceiver",3]],["future",8]],[[["sender",3]],["future",8]],[[["sender",3],["sender",3]],["bool",0]],[[["unboundedsender",3],["unboundedsender",3]],["bool",0]],[[["sender",3]],["future",8]],[[["permit",3]]],[[["unboundedsender",3]],["result",4,[["senderror",3]]]],[[["sender",3],["duration",3]],["future",8]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["sender",3]],["result",4,[["permit",3],["trysenderror",4]]]],[[["sender",3]],["result",4,[["trysenderror",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["senderror",3,[["debug",8]]],["formatter",3]],["result",6]],[[["senderror",3],["formatter",3]],["result",6]],[[["trysenderror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["trysenderror",4],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[["sendtimeouterror",4],["formatter",3]],["result",6]],[[["sendtimeouterror",4,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[["senderror",3]],["trysenderror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["receiver",3]]],[[["sender",3]],["future",8]],[[["sender",3]]],[[["receiver",3]]],null,[[["sender",3,[["debug",8]]],["formatter",3]],["result",6]],[[["receiver",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["sender",3]],["bool",0]],[[["pin",3,[["receiver",3]]],["context",3]],["poll",4]],[[["sender",3],["context",3]],["poll",4]],[[["sender",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["receiver",3]],["result",4,[["tryrecverror",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["recverror",3],["recverror",3]],["bool",0]],[[["tryrecverror",4],["tryrecverror",4]],["bool",0]],[[["recverror",3],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[["tryrecverror",4],["formatter",3]],["result",6]],[[["tryrecverror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["recverror",3],["recverror",3]],["bool",0]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["receiver",3]],["ref",3]],[[["",0]],["",0]],[[["sender",3]],["ref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["receiver",3]],["future",8]],[[]],[[["receiver",3]],["receiver",3]],[[["",0],["",0]]],[[["sender",3]],["future",8]],[[["ref",3]],["",0]],[[["receiver",3]]],[[["sender",3]]],null,[[["receiver",3,[["debug",8]]],["formatter",3]],["result",6]],[[["sender",3,[["debug",8]]],["formatter",3]],["result",6]],[[["ref",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sender",3]],["bool",0]],[[["sender",3]],["result",4,[["senderror",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["senderror",3,[["debug",8]]],["formatter",3]],["result",6]],[[["senderror",3,[["debug",8]]],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["joinhandle",3]]],[[]],[[["localset",3],["runtime",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["localset",3]],[[["joinhandle",3]]],[[["localset",3]]],[[["joinerror",3],["formatter",3]],["result",6]],[[["joinerror",3],["formatter",3]],["result",6]],[[["joinhandle",3],["formatter",3]],["result",6]],[[["localkey",3],["formatter",3]],["result",6]],[[["localset",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["localkey",3,[["copy",8]]]],["copy",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["joinerror",3]],["box",3,[["any",8]]]],[[["joinerror",3]],["bool",0]],[[["joinerror",3]],["bool",0]],[[],["localset",3]],[[["pin",3,[["joinhandle",3]]],["context",3]],["poll",4]],[[["pin",3,[["localset",3]]],["context",3]],["poll",4]],[[["pin",3,[["unconstrained",3]]],["context",3]],["poll",4]],[[["localset",3]],["future",8]],[[["localkey",3]],["future",8]],[[],["joinhandle",3]],[[],["joinhandle",3]],[[],["joinhandle",3]],[[["localset",3]],["joinhandle",3]],[[["localkey",3]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["joinerror",3]],["result",4,[["box",3,[["any",8]]],["joinerror",3]]]],[[["localkey",3]],["result",4,[["accesserror",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["unconstrained",3]],[[["localkey",3]]],[[],["future",8]],null,null,null,null,null,[[["instant",3],["duration",3]],["instant",3]],[[["instant",3],["duration",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["instant",3],["duration",3]],["option",4,[["instant",3]]]],[[["instant",3],["instant",3]],["option",4,[["duration",3]]]],[[["instant",3],["duration",3]],["option",4,[["instant",3]]]],[[["instant",3]],["instant",3]],[[["",0],["",0]]],[[["instant",3],["instant",3]],["ordering",4]],[[["sleep",3]],["instant",3]],[[["instant",3],["instant",3]],["duration",3]],[[["instant",3]],["duration",3]],[[["instant",3],["instant",3]],["bool",0]],null,[[["instant",3],["formatter",3]],["result",6]],[[["interval",3],["formatter",3]],["result",6]],[[["timeout",3,[["debug",8]]],["formatter",3]],["result",6]],[[["sleep",3],["formatter",3]],["result",6]],[[]],[[["instant",3]],["instant",3]],[[]],[[]],[[]],[[["instant",3]],["instant",3]],[[["timeout",3]],["",0]],[[["timeout",3]],["",0]],[[["instant",3],["",0]]],[[["duration",3]],["interval",3]],[[["instant",3],["duration",3]],["interval",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["timeout",3]]],[[["instant",3]],["instant",3]],[[["sleep",3]],["bool",0]],[[["instant",3],["instant",3]],["bool",0]],[[],["instant",3]],[[["instant",3],["instant",3]],["option",4,[["ordering",4]]]],[[["pin",3,[["timeout",3]]],["context",3]],["poll",4]],[[["pin",3,[["sleep",3]]],["context",3]],["poll",4]],[[["interval",3],["context",3]],["poll",4,[["instant",3]]]],[[["pin",3,[["sleep",3]]],["instant",3]]],[[["instant",3],["instant",3]],["duration",3]],[[["duration",3]],["sleep",3]],[[["instant",3]],["sleep",3]],[[["instant",3],["instant",3]],["duration",3]],[[["instant",3],["duration",3]],["instant",3]],[[["instant",3],["duration",3]]],[[["interval",3]],["future",8]],[[["duration",3]],["timeout",3]],[[["instant",3]],["timeout",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[],["error",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["elapsed",3],["elapsed",3]],["bool",0]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["elapsed",3],["formatter",3]],["result",6]],[[["elapsed",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["error",3]],[[["error",3]],["bool",0]],[[["error",3]],["bool",0]],[[["error",3]],["bool",0]],[[["elapsed",3],["elapsed",3]],["bool",0]],[[],["error",3]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"OpenOptions"],[3,"File"],[3,"DirBuilder"],[3,"ReadDir"],[3,"DirEntry"],[3,"Ready"],[3,"Interest"],[3,"ReadBuf"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Empty"],[3,"DuplexStream"],[3,"Repeat"],[3,"Sink"],[3,"Take"],[3,"Split"],[3,"Lines"],[3,"BufWriter"],[3,"BufStream"],[3,"BufReader"],[8,"AsyncReadExt"],[8,"AsyncBufRead"],[8,"AsyncWriteExt"],[8,"AsyncWrite"],[8,"AsyncBufReadExt"],[8,"AsyncSeek"],[8,"AsyncRead"],[8,"AsyncSeekExt"],[3,"AsyncFd"],[3,"AsyncFdReadyGuard"],[3,"AsyncFdReadyMutGuard"],[3,"TryIoError"],[3,"TcpListener"],[3,"UnixListener"],[3,"TcpSocket"],[3,"TcpStream"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixStream"],[3,"ReuniteError"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"ReuniteError"],[3,"SocketAddr"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"UCred"],[3,"Command"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"Child"],[3,"Handle"],[3,"Runtime"],[3,"Builder"],[3,"EnterGuard"],[3,"SignalKind"],[3,"Signal"],[4,"SetError"],[4,"TryAcquireError"],[3,"Semaphore"],[3,"Mutex"],[3,"MutexGuard"],[3,"OwnedMutexGuard"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"OwnedRwLockMappedWriteGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockMappedWriteGuard"],[3,"OnceCell"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"TryLockError"],[3,"Notify"],[3,"AcquireError"],[3,"SemaphorePermit"],[3,"OwnedSemaphorePermit"],[3,"RwLock"],[13,"AlreadyInitializedError"],[13,"InitializingError"],[3,"Sender"],[3,"Receiver"],[3,"SendError"],[4,"RecvError"],[4,"TryRecvError"],[13,"Lagged"],[13,"Lagged"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Permit"],[3,"UnboundedSender"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[3,"RecvError"],[13,"Timeout"],[13,"Closed"],[13,"Full"],[13,"Closed"],[3,"Sender"],[3,"Receiver"],[4,"TryRecvError"],[3,"RecvError"],[3,"Receiver"],[3,"Sender"],[3,"Ref"],[3,"SendError"],[3,"RecvError"],[3,"JoinHandle"],[3,"LocalSet"],[3,"JoinError"],[3,"LocalKey"],[3,"Unconstrained"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Sleep"],[3,"Error"],[3,"Elapsed"]]},\
"tokio_macros":{"doc":"Macros for use with Tokio","t":[23,23,23,23,23,23],"n":["main","main_fail","main_rt","test","test_fail","test_rt"],"q":["tokio_macros","","","","",""],"d":["Marks async function to be executed by the selected …","Always fails with the error message below.","Marks async function to be executed by selected runtime. …","Marks async function to be executed by runtime, suitable …","Always fails with the error message below.","Marks async function to be executed by runtime, suitable …"],"i":[0,0,0,0,0,0],"f":[null,null,null,null,null,null],"p":[]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","t":[17,8,10,10],"n":["UNICODE_VERSION","UnicodeXID","is_xid_continue","is_xid_start"],"q":["unicode_xid","","",""],"d":["The version of Unicode that this version of unicode-xid is …","Methods for determining if a character is a valid …","Returns whether the specified <code>char</code> satisfies the ‘…","Returns whether the specified character satisfies the ‘…"],"i":[0,0,1,1],"f":[null,null,[[],["bool",0]],[[],["bool",0]]],"p":[[8,"UnicodeXID"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
